<?xml version='1.0' encoding='UTF-8'?>
<rss version='2.0'>
<channel>
<generator>
clj-rss
</generator>
<link>
https://news.ycombinator.com
</link>
<title>
myread
</title>
<description>
myread
</description>
<item>
<author>
ROBERT HARRIS
</author>
<link>
http://www.nytimes.com/2014/01/18/opinion/the-whistle-blower-who-freed-dreyfus.html
</link>
<description>
&lt;div&gt;&lt;article id=&quot;story&quot; class=&quot;story theme-main&quot;&gt;

    

    
    

                
    &lt;p class=&quot;story-body-text story-content&quot;&gt;KINTBURY, England &amp;#x2014; Georges Picquart died 100 years ago this Saturday. To which the response from most quarters is likely to be &amp;#x201C;Georges who?&amp;#x201D; Even in his native France, his centenary is passing largely unremarked. Yet in the days of Queen Victoria and Theodore Roosevelt, Picquart was a figure of global controversy, revered and reviled in equal measure as the world&amp;#x2019;s most famous whistle-blower. &lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;Unlike his 21st-century counterparts Bradley Manning and Edward Snowden, Picquart was neither a disaffected nor a junior figure in the organization he was to expose. On the contrary: In October 1894 he was a brilliant, rising army officer. One of his steppingstones to advancement had been a professorship at the &amp;#xC9;cole Sup&amp;#xE9;rieure de Guerre, and one of the officer-cadets he had taught there was a Jewish artillery captain, Alfred Dreyfus.&lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;Picquart, like many of his contemporaries, was casually anti-Semitic. It came as no surprise to him when Dreyfus &amp;#x2014; the only Jew on the general staff &amp;#x2014; was suspected of passing secret intelligence to the Germans. It was Picquart who provided a sample of Dreyfus&amp;#x2019;s handwriting to the investigators. And when expert analysis seemed to confirm Dreyfus&amp;#x2019;s guilt, it was Picquart who met his unsuspecting former pupil in the Ministry of War so he could be quietly bundled off to prison.&lt;/p&gt;&lt;figure class=&quot;media photo embedded has-adjacency layout-large-horizontal&quot;&gt;
    &lt;div class=&quot;image&quot;&gt;
            &lt;img src=&quot;http://static01.nyt.com/images/2014/01/18/opinion/18harris/18harris-articleLarge.jpg&quot; alt=&quot;&quot; class=&quot;media-viewer-candidate&quot;&gt;
            &lt;meta value=&quot;http://static01.nyt.com/images/2014/01/18/opinion/18harris/18harris-articleLarge.jpg&quot;&gt;
            &lt;meta value=&quot;548&quot;&gt;
            &lt;meta value=&quot;600&quot;&gt;
    &lt;/div&gt;
        &lt;figcaption class=&quot;caption&quot;&gt; &lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;p class=&quot;story-body-text story-content&quot;&gt;In December, Picquart attended Dreyfus&amp;#x2019;s court-martial as an official observer. For reasons of national security it was held behind closed doors. When told that a file of intelligence evidence existed, conclusively proving Dreyfus&amp;#x2019;s guilt, Picquart supported the decision to show it in secret to the judges.&lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;The file clinched the conviction. Dreyfus was sentenced to life imprisonment. On Jan. 5, 1895, before a crowd of 20,000 shouting, &amp;#x201C;Death to the Jew!&amp;#x201D; Dreyfus had his sword broken and the insignia of his rank torn from his uniform. Observing the spectacle, Picquart remarked laconically to a fellow officer: &amp;#x201C;He&amp;#x2019;s a Jew, don&amp;#x2019;t forget that. He&amp;#x2019;s thinking of the weight of the gold braid and how much it&amp;#x2019;s worth.&amp;#x201D; In March, Dreyfus was transported to Devil&amp;#x2019;s Island, off the coast of South America, where he was denied all human contact, including conversation with his guards.&lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;Picquart, meanwhile, prospered. Six months later, at age 40, he was made the youngest colonel in the French Army and put in charge of the tiny intelligence unit, known as the Statistical Section, that had compiled the evidence against Dreyfus.&lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;The section&amp;#x2019;s prize agent was a cleaner at the German Embassy, Marie Bastian, who supplied the contents of the wastepaper basket of the military attach&amp;#xE9;, Col. Maximilian von Schwartzkoppen. It was she who was the source of the &amp;#x201C;bordereau&amp;#x201D; &amp;#x2014; the note that an expert had concluded was in Dreyfus&amp;#x2019;s hand. &lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;Nine months into Picquart&amp;#x2019;s tenure, Bastian passed on a pneumatic telegram card &amp;#x2014; a &amp;#x201C;petit bleu&amp;#x201D; &amp;#x2014; that von Schwartzkoppen had torn into 40 fragments. Glued together, the telegram revealed that the German attach&amp;#xE9; was receiving intelligence from a serving French officer, Maj. Charles Ferdinand Walsin Esterhazy. Picquart immediately put Esterhazy under surveillance. He turned out to have the classic profile of a spy: a drunkard, a gambler, heavily indebted, and leading a double life with a prostitute in Montmartre. Moreover, he was dangerously active: He had recently applied for a job in the general staff.&lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;Sitting in his office, Picquart compared Esterhazy&amp;#x2019;s letters with the bordereau. &amp;#x201C;I was terrified,&amp;#x201D; he testified later. &amp;#x201C;The two writings were not similar; they were identical.&amp;#x201D; The next day he showed them to the handwriting expert, Alphonse Bertillon, whose evidence had helped convict Dreyfus. Bertillon confirmed Esterhazy&amp;#x2019;s writing was a perfect match, but saw no reason to revise his original judgment: &amp;#x201C;It merely shows that the Jews have trained someone else to write using the Dreyfus system.&amp;#x201D;&lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;Picquart&amp;#x2019;s next step was to inspect the intelligence that had been passed to Dreyfus&amp;#x2019;s judges. &amp;#x201C;I took possession of the secret file for the first time since my entry into the service. I confess that my amazement was profound. I was expecting overwhelming evidence. I found nothing.&amp;#x201D; Indeed, such scant evidence as there was had plainly been fabricated.&lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;Picquart took his discoveries to the chief of the French general staff, Gen. Raoul de Boisdeffre, and to the overall head of military intelligence, Gen. Charles-Arthur Gonse. Their reaction appalled him. He was told to avoid any avenues of inquiry that might lead to a reopening of the Dreyfus case. &amp;#x201C;What does it matter to you,&amp;#x201D; demanded Gonse, &amp;#x201C;if one Jew stays on Devil&amp;#x2019;s Island?&amp;#x201D;&lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;&amp;#x201C;Well,&amp;#x201D; replied Picquart, &amp;#x201C;because he&amp;#x2019;s innocent ...&amp;#x201D;&lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;He pressed on with his investigation, to the irritation of his superiors. Two months later, he was relieved of his duties. By the spring of 1897, he was an exile, transferred to a native regiment in Tunisia on what amounted to a near-suicidal mission into the southern Sahara.&lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;It was then that Picquart, after 25 years&amp;#x2019; army service, realized he had no alternative but to break ranks. He passed his evidence against Esterhazy to a senior politician, the vice president of the senate, Auguste Scheurer-Kestner. Then, at the end of 1897, he provided &amp;#xC9;mile Zola with the information that enabled the novelist to write his celebrated expos&amp;#xE9; of the affair, &amp;#x201C;J&amp;#x2019;Accuse ...!&amp;#x201D; Picquart&amp;#x2019;s reward was to be dismissed from the army, framed as a forger and locked up in solitary confinement for more than a year.&lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;It was not until 1906 that justice was finally done; Dreyfus&amp;#x2019;s conviction was quashed, and Picquart was restored to the army with the rank of brigadier general. That fall, when his friend and fellow Dreyfusard, Georges Clemenceau &amp;#x2014; the owner of the newspaper that published &amp;#x201C;J&amp;#x2019;Accuse ...!&amp;#x201D; became prime minister, he made Picquart minister of war, a post he held for three years.&lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;On Jan. 18, 1914, six months before the outbreak of the First World War, while in command of the Second Army Corps at Amiens, Picquart died of edema of the face &amp;#x2014; effectively, suffocation &amp;#x2014; following a riding accident. He was 59. &lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;He had no family to preserve his memory: A bachelor with a succession of married mistresses, he left no children. A large section of the army never forgave him for betraying his comrades. And some of Dreyfus&amp;#x2019;s supporters continued to accuse him of anti-Semitism. An awkward figure in death as well as life, he slipped through the cracks of history.&lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;And yet the injustices against which he fought so courageously &amp;#x2014; the inherent unreliability of secret courts and secret evidence, the dangers of rogue intelligence agencies becoming laws unto themselves, the instinctive response of governments and national security organizations to cover up their mistakes, the easy flourishing of &amp;#x201C;national security&amp;#x201D; to stifle democratic scrutiny &amp;#x2014; all these continue. &amp;#x201C;Dreyfus was the victim,&amp;#x201D; Clemenceau observed, &amp;#x201C;but Picquart was the hero.&amp;#x201D; On this day, he deserves to be remembered. &lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt; &lt;em&gt; &lt;em&gt;Robert Harris&lt;/em&gt; is the author of a forthcoming novel about Georges Picquart, &amp;#x201C;An Officer and a Spy.&amp;#x201D; &lt;/em&gt; &lt;/p&gt;
                &lt;footer class=&quot;story-footer story-content&quot;&gt;
        
    &lt;/footer&gt;
&lt;/article&gt;
&lt;/div&gt;
</description>
<title>
The Whistle-Blower Who Freed Dreyfus
</title>
</item>
<item>
<author>
Michael Hausenblas on Jan 16, 2014 |
</author>
<link>
http://www.infoq.com/news/2014/01/twitter-summingbird
</link>
<description>
&lt;div&gt;&lt;div class=&quot;article_page_left news_container text_content_container&quot;&gt;
			
	&lt;div class=&quot;text_info&quot;&gt;
   		&lt;p&gt;Twitter has &lt;a href=&quot;https://blog.twitter.com/2013/streaming-mapreduce-with-summingbird&quot;&gt;open sourced&lt;/a&gt; their MapReduce streaming framework, called &lt;a href=&quot;https://github.com/twitter/summingbird&quot;&gt;Summingbird&lt;/a&gt;. Available under the Apache 2 license, Summingbird is a large-scale data processing system enabling developers to uniformly execute code in either batch-mode (Hadoop/MapReduce-based) or stream-mode (&lt;a href=&quot;http://storm-project.net/&quot;&gt;Storm&lt;/a&gt;-based) or a combination thereof, called hybrid mode.&lt;/p&gt;
&lt;p&gt;In order for Twitter to be able to keep up processing &lt;a href=&quot;http://strata.oreilly.com/2013/09/how-twitter-monitors-millions-of-time-series.html&quot;&gt;500 millions tweets&lt;/a&gt; and growing, they had to find a replacement for their existing stack that required manually integrating MapReduce (Pig/Scalding) and streaming-based (Storm) code. The main motivation to create Summingbird, &lt;a href=&quot;https://blog.twitter.com/2013/streaming-mapreduce-with-summingbird&quot;&gt;mentioned&lt;/a&gt; by the Twitter engineers, came from the realization that running a fully real-time system on Storm was difficult due to:&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;Re-computation over months of historical logs must be coordinated with Hadoop or streamed through Storm with a custom log-loading mechanism.&lt;/li&gt;
    &lt;li&gt;Storm is focused on message passing and random-write databases are harder to maintain.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This insight led to Summingbird, a flexible and general solution addressing the engineers&amp;#x2019; practical issues with the existing approach:&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;Two sets of aggregation logic have to be kept in sync in two different systems&lt;/li&gt;
    &lt;li&gt;Keys and values must be serialized consistently between each system and the client&lt;/li&gt;
    &lt;li&gt;The client is responsible for reading from both datastores, performing a final aggregation and serving the combined results&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Summingbird is also &lt;a href=&quot;http://gigaom.com/2013/09/03/twitter-open-sources-storm-hadoop-hybrid-called-summingbird/&quot;&gt;one of the first&lt;/a&gt; openly available &lt;a href=&quot;http://lambda-architecture.net/&quot;&gt;Lambda Architecture&lt;/a&gt; compliant systems. Similar projects include Yahoo&amp;#x2019;s &lt;a href=&quot;http://developer.yahoo.com/blogs/ydn/storm-yarn-released-open-source-143745133.html&quot;&gt;Storm-YARN&lt;/a&gt; and a Spanish start-up&amp;#x2019;s upcoming &lt;a href=&quot;http://www.slideshare.net/Datadopter/lambdoop-a-framework-for-easy-development-of-big-data-applications&quot;&gt;Lambdoop&lt;/a&gt;, a Java framework for developing Big Data applications in a Lambda Architecture conformant way. The characteristics of the Lambda Architecture - immutable master dataset and the combination of batch, serving, and speed layer - enables people to build robust large-scale data processing systems that can deal with both batch and stream processing and has use cases from social media platforms (such as Twitter, LinkedIn, etc.) over the Internet of Things (smart city, wearables, manufacturing, etc.) to the financial sector (fraud detection, recommendations).&lt;/p&gt;
&lt;p&gt;The main authors of Summingbird - Oscar Boykin, Sam Ritchie (&lt;a href=&quot;http://www.wired.com/wiredenterprise/2013/11/twitter-summingbird/&quot;&gt;nephew of&lt;/a&gt; computer science legend Dennis Ritchie) and Ashutosh Singhal - have further revealed the roadmap for Summingbird:&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;support for Apache &lt;a href=&quot;http://spark.incubator.apache.org/&quot;&gt;Spark&lt;/a&gt; and the columnar data storage format &lt;a href=&quot;http://parquet.io/&quot;&gt;Parquet&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;libraries of higher-level mathematics and machine learning code on top of Summingbird&amp;#x2019;s Producer primitives, and&lt;/li&gt;
    &lt;li&gt;deeper integration with &lt;a href=&quot;https://engineering.twitter.com/opensource/projects&quot;&gt;related open source&lt;/a&gt; projects such as Algebird or Storehaus.&lt;/li&gt;
&lt;/ul&gt;
        
		
		
		
		
		
		
	   	











 

	





		

		
		
			
		












    
    

    

    
    
    
    
    
    
    
    
    
	&lt;a id=&quot;noOfComments&quot; title=&quot;&quot; href=&quot;http://www.infoq.com/news/2014/01/twitter-summingbird#theCommentsSection&quot; class=&quot;comments_like&quot;&gt;
		
	    
	        
	    
	&lt;/a&gt;

	&lt;/div&gt;
			
	
&lt;/div&gt;
		





	












	




		&lt;/div&gt;
</description>
<title>
Twitter Open-Sources its MapReduce Streaming Framework Summingbird
</title>
</item>
<item>
<link>
http://media.steampowered.com/apps/abrashblog/Abrash%20Dev%20Days%202014.pdf
</link>
<description>

</description>
<title>
What VR could, should, and almost certainly will be within two years [pdf]
</title>
</item>
<item>
<link>
http://hoplon.io/
</link>
<description>
&lt;div&gt;&lt;div class=&quot;col-md-6&quot;&gt;&lt;h2&gt;Overview &lt;small&gt;Hoplon in a nutshell.&lt;/small&gt;&lt;/h2&gt;&lt;p class=&quot;hyphenate Hyphenator407hide&quot;&gt;Hoplon provides a number of libraries promoting a simpler model
               for web applications. The project can be divided into three main
               components: the HTML evaluator, the clientside state machine, and
               serverside RPC middleware. These components can be used together
               as a full stack, or individually as a part of another stack.&lt;/p&gt;&lt;p class=&quot;hyphenate Hyphenator407hide&quot;&gt;More concretely, Hoplon ships with a compiler for compiling
               Hoplon pages into HTML and JavaScript (implemented as a build
               task for the &lt;a shape=&quot;rect&quot; class=&quot;Hyphenator407hide&quot; href=&quot;https://github.com/tailrecursion/boot&quot; target=&quot;_blank&quot;&gt;boot&lt;/a&gt; build tool), ClojureScript libraries for creating
               spreadsheet-like dataflow programs and wiring them to the DOM,
               and ClojureScript and Clojure libraries for RPC interaction
               between client and server.&lt;/p&gt;&lt;p class=&quot;hyphenate Hyphenator407hide&quot;&gt;The source code for Hoplon is hosted on &lt;a shape=&quot;rect&quot; class=&quot;Hyphenator407hide&quot; href=&quot;https://github.com/tailrecursion/hoplon&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt; and Maven artifacts are deployed to &lt;a shape=&quot;rect&quot; class=&quot;Hyphenator407hide&quot; href=&quot;https://clojars.org/tailrecursion/hoplon&quot; target=&quot;_blank&quot;&gt;Clojars&lt;/a&gt;. Contributions of code, feedback, feature requests, etc. are
                welcome. Please read the &lt;a shape=&quot;rect&quot; class=&quot;Hyphenator407hide&quot; href=&quot;http://hoplon.io/#/community/&quot;&gt;Community&lt;/a&gt; page for more information.&lt;/p&gt;&lt;h2&gt;Web Apps &lt;small&gt;Single-page applications, not documents.&lt;/small&gt;&lt;/h2&gt;&lt;p class=&quot;hyphenate Hyphenator407hide&quot;&gt;Web applications are not documents. Users need to be able to
               interact with them. They contain state. Through them the user
               communicates with backend systems to have some effect on the
               real world.&lt;/p&gt;&lt;p class=&quot;hyphenate Hyphenator407hide&quot;&gt;Hoplon web apps are organized like applications. The Hoplon
               compiler produces artifacts, not documents. These artifacts are
               equivalent to JAR files in Maven&amp;#x2013;their coordinates being the
               URL on which they're deployed. The compilation unit is the &amp;#x201C;page&amp;#x201D;,
               which is compiled to produce an HTML file&amp;#x2013;a single-page app.&lt;/p&gt;&lt;p class=&quot;hyphenate Hyphenator407hide&quot;&gt;Hoplon does not perform any serverside HTML rendering; it is
               completely unnecessary, even for SEO purposes. (Reload this
               page with JavaScript disabled and see how the content was
               &amp;#x201C;prerendered&amp;#x201D; at compile time.)&lt;/p&gt;&lt;h2&gt;HTML Evaluator &lt;small&gt;Page markup is a program.&lt;/small&gt;&lt;/h2&gt;&lt;p class=&quot;hyphenate Hyphenator407hide&quot;&gt;Web application user interfaces are specified as trees of
               nested elements in HTML markup, but this document-like
               appearance is misleading. Without JavaScript this markup cannot
               provide the dynamic behavior that web applications require.&lt;/p&gt;&lt;p class=&quot;hyphenate Hyphenator407hide&quot;&gt;It is at the boundary between the DOM and the JavaScript
               environment that the incidental complexities of web application
               UI development are found. There is a fundamental disconnect
               between the literal representation of the DOM (the HTML markup)
               and the dynamic environment (the JavaScript VM). The page markup
               is evaluated by the browser and the resulting DOM is then
               accessible from JavaScript, but it's a one-way linkage&amp;#x2013;there is
               no way to refer to objects created dynamically in the JavaScript
               environment from the markup. The browser's HTML evaluation model
               lacks a means of abstraction, preventing the development of new
               elements by composition.&lt;/p&gt;&lt;p class=&quot;hyphenate Hyphenator407hide&quot;&gt;Hoplon provides an HTML evaluator that closes the loop, unifying
               the page markup and the JavaScript environment. Page markup,
               expressed in either the standard HTML5 syntax or Clojure sexps,
               is evaluated as ClojureScript and the result becomes the DOM for
               the page. HTML tags are simply ClojureScript vars. Of course,
               Hoplon ships with all of the standard HTML5 primitives but the
               evaluation model now facilitates the use of custom compound
               elements defined in the environment, too.&lt;/p&gt;&lt;p class=&quot;hyphenate Hyphenator407hide&quot;&gt;Additionally, the unification of HTML and ClojureScript syntax,
               semantics, and namespace in the HTML evaluator facilitates the
               use of macros in markup.  This makes it possible to write
               powerful looping and control structures for use in the page's
               HTML markup itself, bringing the power and expressiveness of
               Lisp to HTML.&lt;/p&gt;&lt;h2&gt;Components &lt;small&gt;First-class custom DOM elements.&lt;/small&gt;&lt;/h2&gt;&lt;p class=&quot;hyphenate Hyphenator407hide&quot;&gt;While there is no shortage of templating systems to create
               blobs of DOM elements, there is no mechanism to create custom
               elements that are composable in any meaningful way. Consider
               the situation where a template engine binds a DOM template to
               some data and returns the filled-in DOM subtree. What happens
               when you append a child to, or set an attribute on that DOM
               element? The child gets appended to, or attribute set on the
               outermost element of the filled template, generally not what is
               required for the composition semantic.&lt;/p&gt;&lt;p class=&quot;hyphenate Hyphenator407hide&quot;&gt;Hoplon provides facilities for creating real, first-class
               components. That is to say, Hoplon components are first-class
               citizens in the DOM world&amp;#x2013;they are, essentially, user-defined
               custom DOM elements. They have a literal representation in the
               page markup and they implement the semantics of HTML: setting
               attributes and appending children. When a child is appended to
               a Hoplon component or an attribute is set, either in HTML markup
               or programmatically, the component's implementation is used
               instead of the built-in DOM one. In this way components can be
               built by composing simpler components and those may be used as
               a basis for even more complex components, without running into
               the limitations of template composition.&lt;/p&gt;&lt;h2&gt;Spreadsheets &lt;small&gt;Client state made simple.&lt;/small&gt;&lt;/h2&gt;&lt;p class=&quot;hyphenate Hyphenator407hide&quot;&gt;Remember how awesome spreadsheets are? You never think about
               state when you&amp;#x2019;re programming a spreadsheet. Instead, you focus
               on values and the formulas that define the relationships between
               them. When a new value is entered into a cell the rest of the
               spreadsheet updates itself as necessary to maintain the
               correctness of the formulas.&lt;/p&gt;&lt;p class=&quot;hyphenate Hyphenator407hide&quot;&gt;After a spreadsheet is set up you can link its cells to charts
               and forms to create a user interface that manages its own state,
               automatically. User input flows from forms to input cells.
               Formulas then recompute their values as necessary. These values
               then flow to charts and graphs for the user to view.&lt;/p&gt;&lt;p class=&quot;hyphenate Hyphenator407hide&quot;&gt;Hoplon applies this crazy, futuristic technology to frontend
              web development. Forgoing the clunky grid metaphor and names
              like &lt;em class=&quot;Hyphenator407hide&quot;&gt;A1&lt;/em&gt; and &lt;em class=&quot;Hyphenator407hide&quot;&gt;B27&lt;/em&gt;, Hoplon provides a cell
              reference type. These cells, like cells in a spreadsheet, are
              either updated directly (input cells), or automatically in
              accordance with a formula.&lt;/p&gt;&lt;h2&gt;Charts and Forms &lt;small&gt;Stateless, automatic UI.&lt;/small&gt;&lt;/h2&gt;&lt;p class=&quot;hyphenate Hyphenator407hide&quot;&gt;The purpose of a program's user interface is to transmit input
              from the user to the underlying state model and to present output
              derived from the underlying state model to the user for viewing.&lt;/p&gt;&lt;p class=&quot;hyphenate Hyphenator407hide&quot;&gt;In a web application the user interface is derived from the page
              markup. User input consists entirely of DOM events: &lt;em class=&quot;Hyphenator407hide&quot;&gt;click&lt;/em&gt;, &lt;em class=&quot;Hyphenator407hide&quot;&gt;change&lt;/em&gt;, etc. Output is presented to
              the user by manipulating the properties of DOM elements: adding
              or removing CSS classes, changing the content of text nodes,
              etc.&lt;/p&gt;&lt;p class=&quot;hyphenate Hyphenator407hide&quot;&gt;Hoplon provides bindings that can be used to link DOM elements
              to the underlying state model in the same way that charts and
              forms are linked to cells in a spreadsheet. Once the structure
              of the DOM and the linkages between the DOM and cells are
              defined, the user interface manages itself.&lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;col-md-6&quot;&gt;&lt;h2&gt;&lt;small&gt;Examples&lt;/small&gt;&lt;/h2&gt;&lt;div class=&quot;list-group&quot;&gt;&lt;div class=&quot;list-group-item&quot;&gt;&lt;a shape=&quot;rect&quot;&gt;&lt;/a&gt;&lt;h3 class=&quot;panel-title&quot;&gt;Typical Page&lt;/h3&gt;&lt;div&gt;&lt;h3 class=&quot;panel-title&quot;&gt;Typical Page&lt;/h3&gt;&lt;p class=&quot;hyphenate Hyphenator407hide&quot;&gt;The page can be coded in either ClojureScript or HTML
                     syntax. The compiler can parse either one. It's easy to add
                     a preprocessing step to parse HAML, etc. if desired.  HTML
                     is usually more verbose and noisy than ClojureScript, so
                     most examples in this document will be using the latter
                     syntax.&lt;/p&gt;&lt;p class=&quot;text-muted hyphenate Hyphenator407hide&quot;&gt;Using ClojureScript syntax:&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;foo/bar.html&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:require&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;my.lib&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;defc&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;clicks&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;html&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;head&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:rel&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:href&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;css/main.css&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;body&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;lib/heading-large&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello, world!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;You've clicked ~{clicks} times.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:on-click&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;swap!&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;clicks&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;inc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Click me!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;p class=&quot;text-muted hyphenate Hyphenator407hide&quot;&gt;Using HTML syntax:&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/hoplon&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  (page &quot;foo/bar.html&quot;
    (:require [my.lib :as lib]))

  (defc clicks 0)
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Hello World&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;css/main.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;lib.heading-large&amp;gt;&lt;/span&gt;Hello, world!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/lib.heading-large&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&amp;lt;text&amp;gt;&lt;/span&gt;You've clicked ~{clicks} times.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/text&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on-click=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ #(swap! clicks inc) }}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      Click me!
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;list-group-item&quot;&gt;&lt;a shape=&quot;rect&quot; class=&quot;topfix&quot;&gt;&lt;/a&gt;&lt;a shape=&quot;rect&quot;&gt;&lt;/a&gt;&lt;h3 class=&quot;panel-title&quot;&gt;BMI Calculator&lt;/h3&gt;&lt;div&gt;&lt;h3 class=&quot;panel-title&quot;&gt;BMI Calculator&lt;/h3&gt;&lt;p class=&quot;hyphenate Hyphenator407hide&quot;&gt;This is an example of a spreadsheet-like application.
                    The application's state is contained in &lt;em class=&quot;Hyphenator407hide&quot;&gt;cells&lt;/em&gt; which are wired up to the DOM. DOM events cause changes
                    to the underlying cells and formula cells in turn cause
                    changes to the DOM.&lt;/p&gt;&lt;p class=&quot;text-muted hyphenate Hyphenator407hide&quot;&gt;The demo:&lt;/p&gt;&lt;p class=&quot;text-muted hyphenate Hyphenator407hide&quot;&gt;The cells:&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cell&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;180&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;; height in cm&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;weight&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cell&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;; weight in kg&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;bmi&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;; formula: [bmi, description, color]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cell=&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;let &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;htm&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;/ &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;; height in meters&lt;/span&gt;
          &lt;span class=&quot;nv&quot;&gt;bmi&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;/ &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;weight&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;* &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;htm&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;htm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))]&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cond&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;&amp;lt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;bmi&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;18.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;bmi&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;underweight&quot;&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;&quot;orange&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;&amp;lt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;bmi&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;25.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;bmi&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;normal&quot;&lt;/span&gt;      &lt;span class=&quot;s&quot;&gt;&quot;inherit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;&amp;lt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;bmi&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;30.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;bmi&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;overweight&quot;&lt;/span&gt;   &lt;span class=&quot;s&quot;&gt;&quot;orange&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;:else&lt;/span&gt;        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;bmi&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;obese&quot;&lt;/span&gt;           &lt;span class=&quot;s&quot;&gt;&quot;red&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;p class=&quot;text-muted hyphenate Hyphenator407hide&quot;&gt;The user interface:&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;;; Some details related to &amp;lt;input type=&quot;range&quot;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;;; have been omitted for clarity.&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;form&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;label&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Height (~{height} cm)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;input&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;bmi-h&quot;&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;height&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:on-change&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reset!&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;val-id&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;bmi-h&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;

  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;label&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Weight (~{weight} kg)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;input&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;bmi-w&quot;&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;weight&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:on-change&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reset!&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;weight&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;val-id&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;bmi-w&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;

  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;label&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;BMI ~(first bmi) (~(second bmi))&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;input&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:do-value&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cell=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;first &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;bmi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:do-css&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cell=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:background-color&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;nth &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;bmi&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)})))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;list-group-item&quot;&gt;&lt;a shape=&quot;rect&quot; class=&quot;topfix&quot;&gt;&lt;/a&gt;&lt;a shape=&quot;rect&quot;&gt;&lt;/a&gt;&lt;h3 class=&quot;panel-title&quot;&gt;List Component&lt;/h3&gt;&lt;div&gt;&lt;h3 class=&quot;panel-title&quot;&gt;List Component&lt;/h3&gt;&lt;p class=&quot;hyphenate Hyphenator407hide&quot;&gt;This is an example of a custom element, or component. The &lt;em class=&quot;Hyphenator407hide&quot;&gt;on-append!&lt;/em&gt; function is used to provide the implementation for
                    appending children and setting attributes. This ensures
                    that children are, in this case, properly wrapped in list
                    item elements and appended to the inner unordered list
                    instead of to the outermost element. A special &lt;em class=&quot;Hyphenator407hide&quot;&gt;title&lt;/em&gt; attribute is also implemented here that sets the text of
                    the inner bold element.&lt;/p&gt;&lt;p class=&quot;hyphenate Hyphenator407hide&quot;&gt;By implementing the HTML semantic this component becomes
                    a first-class DOM element. It can be used in page markup
                    and it can be passed around without any need for the
                    recipient to understand its internal structure. It can be
                    combined with other elements at any level to create more
                    complex components.&lt;/p&gt;&lt;p class=&quot;text-muted hyphenate Hyphenator407hide&quot;&gt;The demo:&lt;/p&gt;&lt;div class=&quot;panel panel-default&quot;&gt;&lt;div class=&quot;panel-body&quot;&gt;&lt;div&gt;&lt;p class=&quot;hyphenate Hyphenator407hide&quot;&gt;See the list component below.&lt;/p&gt;&lt;p class=&quot;my-list&quot;&gt;&lt;b&gt;Items:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;item one&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;item two&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;item three&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class=&quot;text-muted hyphenate Hyphenator407hide&quot;&gt;The component constructor:&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;;; Define custom element &amp;lt;my-list&amp;gt;.&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;defelem&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;my-list&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;attrs&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;let &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;; Obtain references to inner&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;; container elements.&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:class&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;my-list&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))]&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;;; Implement appendChild/setAttribute.&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;on-append!&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;this&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fn &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:keys&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;attrs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;;; The &quot;title&quot; attribute sets title text.&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;when &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;do!&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:text&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;;; Other attributes are set on outer div.&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;add-attributes!&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;dissoc &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;attrs&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;;; Children are wrapped in &amp;lt;li&amp;gt;s and&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;;; appended to inner &amp;lt;ul&amp;gt; element.&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;apply &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))))&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;;; Initialize element.&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;apply &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;attrs&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;p class=&quot;text-muted hyphenate Hyphenator407hide&quot;&gt;The page markup:&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;div&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;See the list component below.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;hr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;my-list&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:title&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Items:&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;item one&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;item two&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;item three&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;panel panel-default&quot;&gt;&lt;p class=&quot;panel-heading&quot;&gt;&lt;h3 class=&quot;panel-title&quot;&gt;Architecture&lt;/h3&gt;&lt;/p&gt;&lt;div class=&quot;panel-body&quot;&gt;&lt;div&gt;&lt;div class=&quot;tab-content&quot;&gt;&lt;img class=&quot;tab-pane active&quot; width=&quot;523px&quot; src=&quot;http://hoplon.io/img/arch-full.png&quot;&gt;&lt;img class=&quot;tab-pane&quot; width=&quot;523px&quot; src=&quot;http://hoplon.io/img/arch-client.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
</description>
<title>
Hoplon: A Simpler Way to Program the Web
</title>
</item>
<item>
<link>
http://imgur.com/a/F7AcL
</link>
<description>
&lt;div&gt;&lt;div id=&quot;image-container&quot;&gt;
                                                    &lt;a name=&quot;PL7KIRX&quot;&gt;&lt;/a&gt;
                            &lt;div class=&quot;image&quot; id=&quot;PL7KIRX&quot;&gt;
                                                                    &lt;h2 class=&quot;first&quot;&gt;1.8 Brainfuck computer&lt;/h2&gt;
                                

                                
                                &lt;div class=&quot;wrapper&quot;&gt;
                                    &lt;div class=&quot;image-hover action-button combobox left&quot; title=&quot;Actions&quot;&gt;
    &lt;div class=&quot;options&quot;&gt;
        
        
        

        
    &lt;/div&gt;
&lt;/div&gt;


                                    &lt;a class=&quot;zoom&quot; href=&quot;http://i.imgur.com/PL7KIRX.png&quot;&gt;
                                        &lt;img class=&quot;unloaded&quot; alt=&quot;1.8 Brainfuck computer&quot;&gt;
                                    &lt;/a&gt;
                                &lt;/div&gt;

                                                                    &lt;div class=&quot;description textbox&quot;&gt;This is a fully functional computer running the esoteric programming language brainfuck. It's currently running on the 14w03b snapshot and uses quite a bit of the new functionality. While this may have been possible to implement in earlier versions, it would likely have been ten times as big. It's not optimized yet and the speed is a bit under 1 Hz.

The save can be downloaded at &lt;a rel=&quot;nofollow&quot; target=&quot;_blank&quot; href=&quot;https://mega.co.nz/#&quot;&gt;https://mega.co.nz/#&lt;/a&gt;!GNoSia5b!YWhyl39GAOd78RGNAyw3aSKcGo9rn0F6fKrCH18XXuc

Brainfuck is not actually meant to be used for programming but great for a proof of concept like this because it consists of only 8 simple commands (&amp;lt;&amp;gt;+-.,[]). You can read more about brainfuck at &lt;a rel=&quot;nofollow&quot; target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Brainfuck&quot;&gt;http://en.wikipedia.org/wiki/Brainfuck&lt;/a&gt;.&lt;/div&gt;
                                
                            &lt;/div&gt;
                                                    &lt;a name=&quot;UpFxzVT&quot;&gt;&lt;/a&gt;
                            &lt;div class=&quot;image&quot; id=&quot;UpFxzVT&quot;&gt;
                                                                    &lt;h2&gt;Overview&lt;/h2&gt;
                                

                                
                                &lt;div class=&quot;wrapper&quot;&gt;
                                    &lt;div class=&quot;image-hover action-button combobox left&quot; title=&quot;Actions&quot;&gt;
    &lt;div class=&quot;options&quot;&gt;
        
        
        

        
    &lt;/div&gt;
&lt;/div&gt;


                                    &lt;a class=&quot;zoom&quot; href=&quot;http://i.imgur.com/UpFxzVT.png&quot;&gt;
                                        &lt;img class=&quot;unloaded&quot; alt=&quot;Overview&quot;&gt;
                                    &lt;/a&gt;
                                &lt;/div&gt;

                                                                    &lt;p class=&quot;description textbox&quot;&gt;Here's an overview of all the parts including the input (brown), output (green), registers (the tower between input and output), the command dispatcher (light blue), and the circuits implementing conditions and jumps (white and yellow).&lt;/p&gt;
                                
                            &lt;/div&gt;
                                                    &lt;a name=&quot;olRFoJx&quot;&gt;&lt;/a&gt;
                            &lt;div class=&quot;image&quot; id=&quot;olRFoJx&quot;&gt;
                                                                    &lt;h2&gt;Program code and counter&lt;/h2&gt;
                                

                                
                                &lt;div class=&quot;wrapper&quot;&gt;
                                    &lt;div class=&quot;image-hover action-button combobox left&quot; title=&quot;Actions&quot;&gt;
    &lt;div class=&quot;options&quot;&gt;
        
        
        

        
    &lt;/div&gt;
&lt;/div&gt;


                                    &lt;a class=&quot;zoom&quot; href=&quot;http://i.imgur.com/olRFoJx.png&quot;&gt;
                                        &lt;img class=&quot;unloaded&quot; alt=&quot;Program code and counter&quot;&gt;
                                    &lt;/a&gt;
                                &lt;/div&gt;

                                                                    &lt;p class=&quot;description textbox&quot;&gt;The program code is stored using villagers with different names for each command. While the program is running they are moved between three compartments containing code to run (left), the current instruction (center), and code that has been run (right).

This is only possible because Minecraft returns entities in the order in which they were spawned, which means that using the selector @e[type=Villager,c=1,r=1,x=11,y=58,z=876] gives you the villager at that position that has been spawned first while c=-1 gives you the last.&lt;/p&gt;
                                
                            &lt;/div&gt;
                                                    &lt;a name=&quot;PXOjTdD&quot;&gt;&lt;/a&gt;
                            &lt;div class=&quot;image&quot; id=&quot;PXOjTdD&quot;&gt;
                                                                    &lt;h2&gt;Control panel&lt;/h2&gt;
                                

                                
                                &lt;div class=&quot;wrapper&quot;&gt;
                                    &lt;div class=&quot;image-hover action-button combobox left&quot; title=&quot;Actions&quot;&gt;
    &lt;div class=&quot;options&quot;&gt;
        
        
        

        
    &lt;/div&gt;
&lt;/div&gt;


                                    &lt;a class=&quot;zoom&quot; href=&quot;http://i.imgur.com/PXOjTdD.png&quot;&gt;
                                        &lt;img class=&quot;unloaded&quot; alt=&quot;Control panel&quot;&gt;
                                    &lt;/a&gt;
                                &lt;/div&gt;

                                                                    &lt;p class=&quot;description textbox&quot;&gt;This is the interface of the computer. You can enter, print, delete, and start a program as well as reset the state to run the next program (it currently doesn't clean up the state by itself). Note that the reset only works if the program has stopped running. You'll have to delete the program, wait for it to stop, and then reset if you want to recover from a bad state (e.g. an infinite loop). The green area allows you to input a character by replacing a sign and pushing the button that appears after executing a ',' command.

The box on the right can be used to manually adding a program by using the spawn eggs in the chest right in front of it. This can also be used to add code before or after loading one of the example programs.&lt;/p&gt;
                                
                            &lt;/div&gt;
                                                    &lt;a name=&quot;cvoWk8a&quot;&gt;&lt;/a&gt;
                            &lt;div class=&quot;image&quot; id=&quot;cvoWk8a&quot;&gt;
                                                                    &lt;h2&gt;Registers&lt;/h2&gt;
                                

                                
                                &lt;div class=&quot;wrapper&quot;&gt;
                                    &lt;div class=&quot;image-hover action-button combobox left&quot; title=&quot;Actions&quot;&gt;
    &lt;div class=&quot;options&quot;&gt;
        
        
        

        
    &lt;/div&gt;
&lt;/div&gt;


                                    &lt;a class=&quot;zoom&quot; href=&quot;http://i.imgur.com/cvoWk8a.png&quot;&gt;
                                        &lt;img class=&quot;unloaded&quot; alt=&quot;Registers&quot;&gt;
                                    &lt;/a&gt;
                                &lt;/div&gt;

                                                                    &lt;p class=&quot;description textbox&quot;&gt;These are the 8 registers that store the data. Each consists of two droppers and two hoppers that exchange dirt blocks. One dropper is the actual register (marked with a carpet) while the other acts as a reservoir holding the spare blocks.

The 9th circuit at the bottom is not a regular register but instead is used to select the active register. Whenever its value is changed, the cyan part gets activated and opens the input and output for the selected register.&lt;/p&gt;
                                
                            &lt;/div&gt;
                                                    &lt;a name=&quot;mCBfw9L&quot;&gt;&lt;/a&gt;
                            &lt;div class=&quot;image&quot; id=&quot;mCBfw9L&quot;&gt;
                                                                    &lt;h2&gt;Command dispatcher&lt;/h2&gt;
                                

                                
                                &lt;div class=&quot;wrapper&quot;&gt;
                                    &lt;div class=&quot;image-hover action-button combobox left&quot; title=&quot;Actions&quot;&gt;
    &lt;div class=&quot;options&quot;&gt;
        
        
        

        
    &lt;/div&gt;
&lt;/div&gt;


                                    &lt;a class=&quot;zoom&quot; href=&quot;http://i.imgur.com/mCBfw9L.png&quot;&gt;
                                        &lt;img class=&quot;unloaded&quot; alt=&quot;Command dispatcher&quot;&gt;
                                    &lt;/a&gt;
                                &lt;/div&gt;

                                                                    &lt;p class=&quot;description textbox&quot;&gt;This part decides which command to run, estimates how long the command takes and sends a signal back once the next command can be executed. Four commands send a signal to the registers to either switch between them ('&amp;lt;','&amp;gt;') or change the current value ('+','-'). The two IO commands activate the output ('.') or the input (',') and the jump commands ('[',']') require additional logic.&lt;/p&gt;
                                
                            &lt;/div&gt;
                                                    &lt;a name=&quot;ypyt9T2&quot;&gt;&lt;/a&gt;
                            &lt;div class=&quot;image&quot; id=&quot;ypyt9T2&quot;&gt;
                                                                    &lt;h2&gt;Condition and jump circuits&lt;/h2&gt;
                                

                                
                                &lt;div class=&quot;wrapper&quot;&gt;
                                    &lt;div class=&quot;image-hover action-button combobox left&quot; title=&quot;Actions&quot;&gt;
    &lt;div class=&quot;options&quot;&gt;
        
        
        

        
    &lt;/div&gt;
&lt;/div&gt;


                                    &lt;a class=&quot;zoom&quot; href=&quot;http://i.imgur.com/ypyt9T2.png&quot;&gt;
                                        &lt;img class=&quot;unloaded&quot; alt=&quot;Condition and jump circuits&quot;&gt;
                                    &lt;/a&gt;
                                &lt;/div&gt;

                                                                    &lt;p class=&quot;description textbox&quot;&gt;This part rewinds the instructions to jump from a closing bracket to the corresponding opening bracket. Only after reaching the opening bracket is a signal send back to resume regular execution. The same logic is used in the yellow circuit for forward jumps. Brackets could theoretically get nested until the dropper at the back is full (9*64) but it's currently set up to support only 64.&lt;/p&gt;
                                
                            &lt;/div&gt;
                                                    &lt;a name=&quot;NPRDXH4&quot;&gt;&lt;/a&gt;
                            &lt;div class=&quot;image&quot; id=&quot;NPRDXH4&quot;&gt;
                                                                    &lt;h2&gt;Output device&lt;/h2&gt;
                                

                                
                                &lt;div class=&quot;wrapper&quot;&gt;
                                    &lt;div class=&quot;image-hover action-button combobox left&quot; title=&quot;Actions&quot;&gt;
    &lt;div class=&quot;options&quot;&gt;
        
        
        

        
    &lt;/div&gt;
&lt;/div&gt;


                                    &lt;a class=&quot;zoom&quot; href=&quot;http://i.imgur.com/NPRDXH4.png&quot;&gt;
                                        &lt;img class=&quot;unloaded&quot; alt=&quot;Output device&quot;&gt;
                                    &lt;/a&gt;
                                &lt;/div&gt;

                                                                    &lt;p class=&quot;description textbox&quot;&gt;This part reads the value of the selected register and prints the corresponding character with /tellraw. I'm using a special encoding with 64 printable characters and one control character (RESET,0-9,' ','.',A-Z,a-z). The value of the registers is read using /testforblock commands (e.g. testforblock ~-8 ~ ~16 minecraft:dropper 3 {Items:[0:{Slot:0b,id:&quot;minecraft:dirt&quot;,Damage:0s,Count:2b}]}). Each layer has the same functionality but for a different register.

To keep it as small as possible I didn't add any reset functionality which means that you can't print the same character twice in a row using the same register. You'll first have to print a different character to reset the output, for instance the control character that has the value 0.&lt;/p&gt;
                                
                            &lt;/div&gt;
                                                    &lt;a name=&quot;nAOlnLt&quot;&gt;&lt;/a&gt;
                            &lt;div class=&quot;image&quot; id=&quot;nAOlnLt&quot;&gt;
                                                                    &lt;h2&gt;Input device&lt;/h2&gt;
                                

                                
                                &lt;div class=&quot;wrapper&quot;&gt;
                                    &lt;div class=&quot;image-hover action-button combobox left&quot; title=&quot;Actions&quot;&gt;
    &lt;div class=&quot;options&quot;&gt;
        
        
        

        
    &lt;/div&gt;
&lt;/div&gt;


                                    &lt;a class=&quot;zoom&quot; href=&quot;http://i.imgur.com/nAOlnLt.png&quot;&gt;
                                        &lt;img class=&quot;unloaded&quot; alt=&quot;Input device&quot;&gt;
                                    &lt;/a&gt;
                                &lt;/div&gt;

                                                                    &lt;p class=&quot;description textbox&quot;&gt;Similar to the output device, each layer of this circuit reads the value of the input sign using /testforblock commands (e.g. testforblock ~-5 ~-2 ~-8 minecraft:wall_sign 4 {Text1:&quot;0&quot;}) and sets the current register to the corresponding numerical value.&lt;/p&gt;
                                
                            &lt;/div&gt;
                                                    &lt;a name=&quot;TVTSjVh&quot;&gt;&lt;/a&gt;
                            &lt;div class=&quot;image&quot; id=&quot;TVTSjVh&quot;&gt;
                                                                    &lt;h2&gt;Example programs&lt;/h2&gt;
                                

                                
                                &lt;div class=&quot;wrapper&quot;&gt;
                                    &lt;div class=&quot;image-hover action-button combobox left&quot; title=&quot;Actions&quot;&gt;
    &lt;div class=&quot;options&quot;&gt;
        
        
        

        
    &lt;/div&gt;
&lt;/div&gt;


                                    &lt;a class=&quot;zoom&quot; href=&quot;http://i.imgur.com/TVTSjVh.png&quot;&gt;
                                        &lt;img class=&quot;unloaded&quot; alt=&quot;Example programs&quot;&gt;
                                    &lt;/a&gt;
                                &lt;/div&gt;

                                                                    &lt;p class=&quot;description textbox&quot;&gt;There are three simple example programs that can be loaded at the moment. The first goes through all values and prints them in an infinite loop. The second adds the numerical value of two input characters and prints the character corresponding to the sum. 

Finally, the most complex is a &quot;Hello World&quot; program that takes about 15 minutes to complete. Here's the full code: +++++[-&amp;gt;&amp;gt;+++++&amp;lt;&amp;lt;]&amp;gt;&amp;gt;.[-&amp;lt;++&amp;lt;++&amp;gt;&amp;gt;]&amp;lt;---.&amp;lt;++.&amp;gt;----.--.&amp;lt;++++.&amp;gt;--.+++++.&amp;lt;++.&lt;/p&gt;
                                
                            &lt;/div&gt;
                                                    &lt;a name=&quot;M8acNZY&quot;&gt;&lt;/a&gt;
                            &lt;div class=&quot;image&quot; id=&quot;M8acNZY&quot;&gt;
                                                                    &lt;h2&gt;Thank you for your attention! :)&lt;/h2&gt;
                                

                                
                                &lt;div class=&quot;wrapper&quot;&gt;
                                    &lt;div class=&quot;image-hover action-button combobox left&quot; title=&quot;Actions&quot;&gt;
    &lt;div class=&quot;options&quot;&gt;
        
        
        

        
    &lt;/div&gt;
&lt;/div&gt;


                                    &lt;a class=&quot;zoom&quot; href=&quot;http://i.imgur.com/M8acNZY.png&quot;&gt;
                                        &lt;img class=&quot;unloaded&quot; alt=&quot;Thank you for your attention! :)&quot;&gt;
                                    &lt;/a&gt;
                                &lt;/div&gt;

                                                                    &lt;p class=&quot;description textbox&quot;&gt;I hope you'll have fun playing with this and use some of the ideas in your own projects. I learned a lot during this project and already have ideas to make it both smaller and faster. I'll try to update the download if a snapshot breaks it before the release of 1.8.&lt;/p&gt;
                                
                            &lt;/div&gt;
                        
                    &lt;/div&gt;
                
            &lt;/div&gt;
</description>
<title>
Minecraft redstone computer running brainfuck (x-post from /r/Minecraft)
</title>
</item>
</channel>
</rss>
