<?xml version='1.0' encoding='UTF-8'?>
<rss version='2.0'>
<channel>
<generator>
clj-rss
</generator>
<link>
https://news.ycombinator.com
</link>
<title>
myread
</title>
<description>
myread
</description>
<item>
<link>
http://www.google.com/appsstatus#hl=en&v=status&ts=1390590318542
</link>
<description>

</description>
<title>
Gmail was down
</title>
</item>
<item>
<link>
http://gcc.gnu.org/ml/gcc/2014-01/msg00247.html
</link>
<description>
&lt;div&gt;&lt;body&gt;



&lt;p&gt;This is the mail archive of the 
&lt;tt&gt;gcc@gcc.gnu.org&lt;/tt&gt;
mailing list for the &lt;a href=&quot;http://gcc.gnu.org/&quot;&gt;GCC project&lt;/a&gt;.






&lt;/p&gt;









&lt;ul&gt;
&lt;li&gt;&lt;em&gt;From&lt;/em&gt;: Richard Stallman &amp;lt;rms at gnu dot org&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;To&lt;/em&gt;: gcc at gcc dot gnu dot org&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Date&lt;/em&gt;: Fri, 24 Jan 2014 09:54:13 -0500&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Subject&lt;/em&gt;: Re: clang vs free software&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Authentication-results&lt;/em&gt;: sourceware.org; auth=none&lt;/li&gt;
&lt;li&gt;&lt;em&gt;References&lt;/em&gt;: &amp;lt;CAJnXXoi2MLpZWxOxknR=mNR91JdZcHrKRsqYZSWY373fvwxObg at mail dot gmail dot com&amp;gt; &amp;lt;87eh439w1n dot fsf at uwakimon dot sk dot tsukuba dot ac dot jp&amp;gt; &amp;lt;CAJnXXojjSAWL8cqZp0X16xa81R73huywtTS90p6O3CpRaPOiDQ at mail dot gmail dot com&amp;gt; &amp;lt;jwvwqhu8zcg dot fsf-monnier+emacs at gnu dot org&amp;gt; &amp;lt;87ha8yqvup dot fsf at engster dot org&amp;gt; &amp;lt;E1W5cXI-0000j4-8x at fencepost dot gnu dot org&amp;gt; &amp;lt;CAJnXXoiuzZhjDGpvXY7psee=+bXn1rB+GdELYP0FS0CuWPqYeQ at mail dot gmail dot com&amp;gt; &amp;lt;E1W6HwP-0001WU-Tg at fencepost dot gnu dot org&amp;gt; &amp;lt;87r47zezcc dot fsf at fencepost dot gnu dot org&amp;gt; &amp;lt;m2eh3ykc3y dot fsf at gmail dot com&amp;gt; &amp;lt;20140123174934 dot GA10933 at thyrsus dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Reply-to&lt;/em&gt;: rms at gnu dot org&lt;/li&gt;
&lt;/ul&gt;





&lt;pre&gt;[[[ To any NSA and FBI agents reading my email: please consider    ]]]
[[[ whether defending the US Constitution against all enemies,     ]]]
[[[ foreign or domestic, requires you to follow Snowden's example. ]]]

In the free software movement, we campaign for the freedom of the
users of computing.  The values of free software are fundamentally
different from the values of open source, which make &quot;better code&quot; the
ultimate goal.  If GCC were to change from a free compiler into a
platform for nonfree compilers, it would no longer serve the goal of
freedom very well.  Therefore, we had to take care to prevent that.

(See &lt;a rel=&quot;nofollow&quot; href=&quot;http://www.gnu.org/philosophy/open-source-misses-the-point.html&quot;&gt;http://www.gnu.org/philosophy/open-source-misses-the-point.html&lt;/a&gt;
for more explanation of the difference between free software and open
source.  See also &lt;a rel=&quot;nofollow&quot; href=&quot;http://thebaffler.com/past/the_meme_hustler&quot;&gt;http://thebaffler.com/past/the_meme_hustler&lt;/a&gt; for
Evgeny Morozov's article on the same point.)

The Clang and LLVM developers reach different conclusions from ours
because they do not share our values and goals.  They object to the
measures we have taken to defend freedom because they see the
inconvenience of them and do not recognize (or don't care about) the
need for them.  I would guess they describe their work as &quot;open
source&quot; and do not talk about freedom.  They have been supported by
Apple, the company which hates our freedom so much that its app store
for the ithings _requires_ all apps to be nonfree. (*)

The nonfree compilers that are now based on LLVM prove that I was
right -- that the danger was real.  If I had &quot;opened&quot; up GCC code for
use in nonfree combinations, that would not have prevented a defeat;
rather, it would have caused that defeat to occur very soon.

For GCC to be replaced by another technically superior compiler that
defended freedom equally well would cause me some personal regret, but
I would rejoice for the community's advance.  The existence of LLVM is
a terrible setback for our community precisely because it is not
copylefted and can be used as the basis for nonfree compilers -- so
that all contribution to LLVM directly helps proprietary software as
much as it helps us.

The cause of the setback is the existence of a non-copylefted compiler
that therefore becomes the base for nonfree compilers.  The identity
of that compiler -- whether it be LLVM, GCC, or something else -- is a
secondary detail.  To make GCC available for such use would be
throwing in the towel.  If that enables GCC to &quot;win&quot;, the victory
would be hollow, because it would not be a victory for what really
matters: users' freedom.

If you think we ought to &quot;compromise&quot; on this point, please see
&lt;a rel=&quot;nofollow&quot; href=&quot;http://www.gnu.org/philosophy/compromise.html&quot;&gt;http://www.gnu.org/philosophy/compromise.html&lt;/a&gt;.

The only code that helps us and not our adversaries is copylefted
code.  Free software released under a pushover license is available
for us to use, but available to our adversaries just as well.  If you
want your work to give freedom an advantage, use the leverage
available to you -- copyleft your code.  I invite those working on
major add-ons to LLVM to release them under GNU GPL
version-3-or-later.


If you want to argue for changing the goals of the GNU Project, the
proper place to do this is gnu-misc-discuss@gnu.org.  Please move this
discussion there.


* If a binary is made from published source code, but you can't
  install your binary of a modified version of that source code, the
  binary is proprietary even if the source code is free.  (See
  &lt;a rel=&quot;nofollow&quot; href=&quot;http://www.gnu.org/philosophy/free-sw.html&quot;&gt;http://www.gnu.org/philosophy/free-sw.html&lt;/a&gt;.)  A binary in Apple's
  app store may be made from published free source code, but under
  Apple's rules and Apple's DRM, the binary can't be free.

-- 
Dr Richard Stallman
President, Free Software Foundation
51 Franklin St
Boston MA 02110
USA
www.fsf.org  www.gnu.org
Skype: No way! That's nonfree (freedom-denying) software.
  Use Ekiga or an ordinary phone call.

&lt;/pre&gt;






&lt;ul&gt;&lt;li&gt;&lt;strong&gt;References&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a name=&quot;00209&quot; href=&quot;http://gcc.gnu.org/ml/gcc/2014-01/msg00209.html&quot;&gt;Re: clang vs free software&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;









&lt;/body&gt;
&lt;/div&gt;&lt;hr class=&quot;rdb-page-break&quot; /&gt;&lt;div&gt;&lt;body&gt;



&lt;p&gt;This is the mail archive of the 
&lt;tt&gt;gcc@gcc.gnu.org&lt;/tt&gt;
mailing list for the &lt;a href=&quot;http://gcc.gnu.org/&quot;&gt;GCC project&lt;/a&gt;.






&lt;/p&gt;









&lt;ul&gt;
&lt;li&gt;&lt;em&gt;From&lt;/em&gt;: Paulo Matos &amp;lt;pmatos at broadcom dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;To&lt;/em&gt;: Richard Sandiford &amp;lt;rdsandiford at googlemail dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Cc&lt;/em&gt;: &quot;gcc at gcc dot gnu dot org&quot; &amp;lt;gcc at gcc dot gnu dot org&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Date&lt;/em&gt;: Fri, 24 Jan 2014 15:28:47 +0000&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Subject&lt;/em&gt;: RE: ICE in trunk due to MEM with address in vector mode&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Authentication-results&lt;/em&gt;: sourceware.org; auth=none&lt;/li&gt;
&lt;li&gt;&lt;em&gt;References&lt;/em&gt;: &amp;lt;19EB96622A777C4AB91610E763265F463EED53 at SJEXCHMB14 dot corp dot ad dot broadcom dot com&amp;gt;	&amp;lt;87zjmlr72j dot fsf at sandifor-thinkpad dot stglab dot manchester dot uk dot ibm dot com&amp;gt;	&amp;lt;19EB96622A777C4AB91610E763265F463EF48B at SJEXCHMB14 dot corp dot ad dot broadcom dot com&amp;gt; &amp;lt;87ob31r2op dot fsf at sandifor-thinkpad dot stglab dot manchester dot uk dot ibm dot com&amp;gt;&lt;/li&gt;
&lt;/ul&gt;





&lt;pre&gt;&amp;gt; -----Original Message-----
&amp;gt; From: Richard Sandiford [&lt;a rel=&quot;nofollow&quot; href=&quot;mailto:rdsandiford@googlemail.com&quot;&gt;mailto:rdsandiford@googlemail.com&lt;/a&gt;]
&amp;gt; Sent: 24 January 2014 12:21
&amp;gt; To: Paulo Matos
&amp;gt; Cc: gcc@gcc.gnu.org
&amp;gt; Subject: Re: ICE in trunk due to MEM with address in vector mode
&amp;gt; 
&amp;gt; Just in case: the point I was trying to make in the second paragraph
&amp;gt; was that the code in the patch only triggers (as you say) because the
&amp;gt; address isn't seen as mode-dependent.  But this kind of address does
&amp;gt; look mode-dependent to me, since it only works for MEM modes that have
&amp;gt; the same number of elements as the index vector.  So this does sound
&amp;gt; like a case where mode_dependent_address_p ought to return true.
&amp;gt; 

Yes, you're probably right. Sorry I haven't gotten back to you on that part of your initial email.

&amp;gt; If we do support vector addresses than I think the right fix is to
&amp;gt; check VECTOR_MODE_P there.
&amp;gt; 

Well, isn't it the case that a mem with vector mode is always mode dependent, in which case adding VECTOR_MODE_P to mode-dependent target hook would be enough making the patch not so useful?

Cheers,

Paulo Matos

&amp;gt; Thanks,
&amp;gt; Richard
&lt;/pre&gt;

















&lt;/body&gt;
&lt;/div&gt;&lt;hr class=&quot;rdb-page-break&quot; /&gt;&lt;div&gt;&lt;body&gt;



&lt;p&gt;This is the mail archive of the 
&lt;tt&gt;gcc@gcc.gnu.org&lt;/tt&gt;
mailing list for the &lt;a href=&quot;http://gcc.gnu.org/&quot;&gt;GCC project&lt;/a&gt;.






&lt;/p&gt;









&lt;ul&gt;
&lt;li&gt;&lt;em&gt;From&lt;/em&gt;: Prathamesh Kulkarni &amp;lt;bilbotheelffriend at gmail dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;To&lt;/em&gt;: Dodji Seketeli &amp;lt;dodji at redhat dot com&amp;gt;, gcc &amp;lt;gcc at gcc dot gnu dot org&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Date&lt;/em&gt;: Fri, 24 Jan 2014 21:19:46 +0530&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Subject&lt;/em&gt;: Re: -Wformat-security warnings generated in gcc build&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Authentication-results&lt;/em&gt;: sourceware.org; auth=none&lt;/li&gt;
&lt;li&gt;&lt;em&gt;References&lt;/em&gt;: &amp;lt;CAJXstsAMh25uwq5tCL86izSEMyvVtbUj4YNrmbZpFoFNVD=1Mg at mail dot gmail dot com&amp;gt;	&amp;lt;Pine dot LNX dot 4 dot 64 dot 1401211749001 dot 20755 at digraph dot polyomino dot org dot uk&amp;gt;	&amp;lt;CAJXstsBCTmcX0T=HQL9KmrKCwz6yZV95UXKiCPKOxRhLX8iLpA at mail dot gmail dot com&amp;gt;	&amp;lt;Pine dot LNX dot 4 dot 64 dot 1401221801080 dot 10535 at digraph dot polyomino dot org dot uk&amp;gt;	&amp;lt;87d2jjc4rx dot fsf at seketeli dot org&amp;gt;	&amp;lt;CAJXstsBrMyJ66oFM8RjRNHUyC5TZVgVGD=xkRAcVc9FzQ7PKFA at mail dot gmail dot com&amp;gt;	&amp;lt;874n4uagv0 dot fsf at redhat dot com&amp;gt;	&amp;lt;CAJXstsAJW==edLkvgXFsP1uqoBM+PTn1Lp4btwu0Ms-MyKSgeA at mail dot gmail dot com&amp;gt;&lt;/li&gt;
&lt;/ul&gt;





&lt;pre&gt;On Thu, Jan 23, 2014 at 9:09 PM, Prathamesh Kulkarni
&amp;lt;bilbotheelffriend@gmail.com&amp;gt; wrote:
&amp;gt; On Thu, Jan 23, 2014 at 8:24 PM, Dodji Seketeli &amp;lt;dodji@redhat.com&amp;gt; wrote:
&amp;gt;&amp;gt; Prathamesh Kulkarni &amp;lt;bilbotheelffriend@gmail.com&amp;gt; writes:
&amp;gt;&amp;gt;
&amp;gt;&amp;gt;&amp;gt;
&amp;gt;&amp;gt;&amp;gt; Shall it be correct then to replace calls to error() and friends,
&amp;gt;&amp;gt;&amp;gt; taking only format string with no-argument specifiers
&amp;gt;&amp;gt;&amp;gt; to error_at_no_args() ? (similarly we shall need warning_at_no_args,
&amp;gt;&amp;gt;&amp;gt; pedwarn_no_args, etc.)
&amp;gt;&amp;gt;
&amp;gt;&amp;gt; I would guess so, yes.
&amp;gt;&amp;gt;
&amp;gt;&amp;gt;&amp;gt;&amp;gt;
&amp;gt;&amp;gt;&amp;gt;&amp;gt; Also, you'd need to modify cp/error.c:cp_printer in a similar way, to
&amp;gt;&amp;gt;&amp;gt;&amp;gt; issue an internal_error each time we try to access a null test-&amp;gt;args_ptr.
&amp;gt;&amp;gt;&amp;gt;
&amp;gt;&amp;gt;&amp;gt; Shall check for text-&amp;gt;args_ptr be required in each case label of
&amp;gt;&amp;gt;&amp;gt; argument specifier in pp_format()
&amp;gt;&amp;gt;&amp;gt; and client-specific functions like cp_printer() ?
&amp;gt;&amp;gt;
&amp;gt;&amp;gt; Yes, I think so.  Maybe you can make that a bit more maintainable by
&amp;gt;&amp;gt; creating a macro like those used to access text-&amp;gt;args_ptr in cp_printer,
&amp;gt;&amp;gt; e.g:
&amp;gt;&amp;gt;
&amp;gt;&amp;gt;     #define next_int     va_arg (*text-&amp;gt;args_ptr, int)
&amp;gt;&amp;gt;
&amp;gt;&amp;gt; In that macro, make the check for text-&amp;gt;args_ptr before accessing it,
&amp;gt;&amp;gt; and then use that macro to access text-&amp;gt;args_ptr through the function.
&amp;gt;&amp;gt;
&amp;gt;
&amp;gt; I was going through diagnostic.c, it appears that many functions in
&amp;gt; (error(), error_at(), warning(), etc.) share common code (mostly
&amp;gt; contains call to diagnostic_set_info() followed by call to
&amp;gt; report_diagnostic()), which I guess can be re-written in terms of
&amp;gt; emit_diagnostic(), however since it's variadic that's not possible. I
&amp;gt; wrote a v_emit_diagnostic() function, that takes same arguments as
&amp;gt; emit_diagnostic(), with additional va_list * at end (va_list * instead
&amp;gt; of va_list, so I could pass NULL for error_no_args() and friends). Is
&amp;gt; it correct to write these other functions (emit_diagnostic(), error(),
&amp;gt; inform(), etc.) in terms of v_emit_diagnostic() ?

silly mistake in warning_at(), it should be:
ret = v_emit_diagnostic (DK_WARNING, location, opt, gmsgid, &amp;amp;ap);

&amp;gt;
&amp;gt;
&amp;gt;
&amp;gt;
&amp;gt;
&amp;gt;&amp;gt; --
&amp;gt;&amp;gt;                 Dodji

&lt;/pre&gt;
















&lt;/body&gt;
&lt;/div&gt;&lt;hr class=&quot;rdb-page-break&quot; /&gt;&lt;div&gt;&lt;body&gt;



&lt;p&gt;This is the mail archive of the 
&lt;tt&gt;gcc@gcc.gnu.org&lt;/tt&gt;
mailing list for the &lt;a href=&quot;http://gcc.gnu.org/&quot;&gt;GCC project&lt;/a&gt;.






&lt;/p&gt;









&lt;ul&gt;
&lt;li&gt;&lt;em&gt;From&lt;/em&gt;: &quot;Joseph S. Myers&quot; &amp;lt;joseph at codesourcery dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;To&lt;/em&gt;: &quot;Eric S. Raymond&quot; &amp;lt;esr at thyrsus dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Cc&lt;/em&gt;: Steven Bosscher &amp;lt;stevenb dot gcc at gmail dot com&amp;gt;, GCC Mailing List	&amp;lt;gcc at gcc dot gnu dot org&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Date&lt;/em&gt;: Fri, 24 Jan 2014 16:19:44 +0000&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Subject&lt;/em&gt;: Re: Don't shoot the messenger&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Authentication-results&lt;/em&gt;: sourceware.org; auth=none&lt;/li&gt;
&lt;li&gt;&lt;em&gt;References&lt;/em&gt;: &amp;lt;20140123212747 dot 6FE32380525 at snark dot thyrsus dot com&amp;gt; &amp;lt;CABu31nNY0tzOSK=ju44ckBVAA0OzzSA6KK60=C2XijS8RnLyfQ at mail dot gmail dot com&amp;gt; &amp;lt;20140123215825 dot GA14938 at thyrsus dot com&amp;gt;&lt;/li&gt;
&lt;/ul&gt;





&lt;pre&gt;On Thu, 23 Jan 2014, Eric S. Raymond wrote:

&amp;gt; Really, attempts to shoot the messenger *won't help*.  By ignoring the
&amp;gt; areas where clang *does* have a clear advantage, *right now*, you are
&amp;gt; displaying the exact head-in-the-sand attitude that is most likely to
&amp;gt; concede the high ground to clang.

You appear to think things are being ignored, based on a notion of FSF 
policy that is several years out of date (if it was ever accurate).

Contributions of patches to improve GCC in areas where clang has an 
advantage, such as modularity and usability as a library in editors, 
refactoring tools, static analyzers etc., are welcome and have been 
welcome for several years, at least since plugin support was added (of 
course, such tools using parts of GCC would need to be released as free 
software under GPLv3+).  See the proposed improvement projects at 
&amp;lt;&lt;a rel=&quot;nofollow&quot; href=&quot;http://gcc.gnu.org/wiki/ImprovementProjects&quot;&gt;http://gcc.gnu.org/wiki/ImprovementProjects&lt;/a&gt;&amp;gt;, and the architectural goals 
linked therefrom, for something more accurate regarding GCC developers' 
notions of current deficiencies and desired directions for GCC than an old 
notion of FSF policy.  Poorly defined interfaces, lack of modularity and 
presence of global state do not reflect some sort of policy decision; they 
reflect the history of a code base that is about twice as old as LLVM.  
Global cleanups in all these areas have been going in at least since the 
start of EGCS, and remain welcome.

Actual FSF policy is as documented at 
&amp;lt;&lt;a rel=&quot;nofollow&quot; href=&quot;http://gcc.gnu.org/gccmission.html&quot;&gt;http://gcc.gnu.org/gccmission.html&lt;/a&gt;&amp;gt;.

-- 
Joseph S. Myers
joseph@codesourcery.com

&lt;/pre&gt;
















&lt;/body&gt;
&lt;/div&gt;&lt;hr class=&quot;rdb-page-break&quot; /&gt;&lt;div&gt;&lt;body&gt;



&lt;p&gt;This is the mail archive of the 
&lt;tt&gt;gcc@gcc.gnu.org&lt;/tt&gt;
mailing list for the &lt;a href=&quot;http://gcc.gnu.org/&quot;&gt;GCC project&lt;/a&gt;.






&lt;/p&gt;









&lt;ul&gt;
&lt;li&gt;&lt;em&gt;From&lt;/em&gt;: Basile Starynkevitch &amp;lt;basile at starynkevitch dot net&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;To&lt;/em&gt;: gcc-melt at googlegroups dot com, gcc at gcc dot gnu dot org&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Cc&lt;/em&gt;: David Malcolm &amp;lt;dmalcolm at redhat dot com&amp;gt;, dnovillo at google dot com&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Date&lt;/em&gt;: Thu, 23 Jan 2014 22:28:25 +0100&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Subject&lt;/em&gt;: checking GPL compatibility in MELT meta-plugin&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Authentication-results&lt;/em&gt;: sourceware.org; auth=none&lt;/li&gt;
&lt;/ul&gt;





&lt;pre&gt;Hello All, [GCC list, MELT group, and David Malcolm -python plugin- and
Diego Novillo -plugin enthusiast &amp;amp; maintainer]

Reminder: IANAL, ie I (Basile) am not a lawyer! But I am a free software
enthusiast and I like a lot the GPLv3....

As you know, GCC has some technical devices to invite plugin developers
to make GPL compliant plugins.
&lt;a rel=&quot;nofollow&quot; href=&quot;http://gcc.gnu.org/onlinedocs/gccint/Plugin-API.html&quot;&gt;http://gcc.gnu.org/onlinedocs/gccint/Plugin-API.html&lt;/a&gt;

This is done thru the plugin_is_GPL_compatible symbol. Of course, some
dishonest person could technically have &amp;amp; distribute a proprietary GCC
plugin defining that symbol (IANAL, but I believe it won't be accepted
in court, even if technically feasible). 

MELT &lt;a rel=&quot;nofollow&quot; href=&quot;http://gcc-melt.org/&quot;&gt;http://gcc-melt.org/&lt;/a&gt; is a domain specific language (GPLv3 licensed
and FSF copyrighted, since implemented in the MELT branch of GCC and the
MELT plugin for GCC) to extend GCC and I (Basile) am the main author of
MELT. I believe that MELT should have a technical device to invite
people to make GPL compliant extensions in MELT.

It is implemented by a runtime melt-runtime.cc &amp;amp; melt-runtime.h and by a
bootstrapped MELT translator coded in MELT (files melt/warmelt*.melt)
and also distributed in generated C++ form (files
melt/generated/warmelt*.cc) 

MELT is a lisp-y language, and is generally distributed as a plugin for
GCC. &lt;a rel=&quot;nofollow&quot; href=&quot;http://gcc-melt.org/download.html&quot;&gt;http://gcc-melt.org/download.html&lt;/a&gt; ; MELT is a meta-programmed
system: MELT code is translated to C++ code, and that is translated to
*.so which is dlopen-ed by the MELT runtime; the MELT translator is
coded in MELT. MELT is (like D.Malcolm's Python plugin) a &quot;meta&quot;-plugin,
in the sense that it enables other code (for MELT, in MELT lisp-y
dialect, for the Python plugin, in Python) to be &quot;injected&quot; or &quot;glued&quot;
into GCC ...

MELT is GPLv3 and I (Basile) try hard to favor (when technically
possible) GPL software (but I do know it is *not* a technical issue at
first). Let me explain a bit:

First, when the MELT plugin is built and installed, most of the source
code is installed also, and MELT won't run without it (the MELT runtime
contains some code in melt-runtime.cc to enforce that). Typically, MELT
is installed under $(gcc -print-file-name=plugin) which contains (in
addition of the files installed by GCC, e.g. by the gcc-4.8-plugin-dev
of a Debian/Sid distribution) a directory melt-sources/ which contains
all the source files in MELT (i.e. all *.melt files like
warmelt-macro.melt etc... ) and the corresponding generated files in C++
(i.e. warmel-macro*.cc). Some code in the MELT runtime is checking that
these files are accessible (in that sense MELT is more cautious than
many other software: you need most of MELT source code to run MELT
successfully!) but the checks are not perfect.

I would very much like MELT extensions to have, if possible, a GPLv3
compatible license (AFAIK, there are not many MELT extensions
today ....). So I devised a device to &quot;help&quot; that:

a MELT extension should use the case-insensitive
MODULE_IS_GPL_COMPATIBLE macro somewhere in the *.melt source code. I'm
using myself inside MELT, for example in warmelt-macro.melt file:

  ;; This MELT module is GPL compatible since it is GPLv3+ licensed.
  (module_is_gpl_compatible &quot;GPLv3+&quot;)

The argument to module_is_gpl_compatible can be any constant string. By
human convention only that string explains a bit why the given module or
extension is GPL compatible.

when this macro is processed by the MELT translator (itself coded in
MELT) the generated C++ file contains :

   MELT_EXTERN const char melt_module_is_gpl_compatible[];
   const char melt_module_is_gpl_compatible[]= &quot;warmelt-macro: GPLv3+&quot;;

where MELT_EXTERN is simply a C++ macro from melt-runtime.h :
   #define MELT_EXTERN extern &quot;C&quot;

If the module_is_gpl_compatible macro is not used in the MELT source
code of some extension, a warning and a notice happens; in that case
(lines 2102 and following of file melt/warmelt-outobj.melt ...) I have:

    (warning_at 
      ()
      &quot;MELT module $1 does not claim GPL compatibility using
MODULE_IS_GPL_COMPATIBLE macro&quot; omodnam)
    (inform_at ()
      &quot;See &lt;a rel=&quot;nofollow&quot; href=&quot;http://www.gnu.org/licenses/gcc-exception-3.1.en.html&amp;amp;quot&quot;&gt;http://www.gnu.org/licenses/gcc-exception-3.1.en.html&amp;amp;quot&lt;/a&gt;;)

However, the MELT extension does become translated to C++ code.

The C++ code itself may have the melt_module_is_gpl_compatible symbol.
If it is missing, the MELT runtime complains (file melt-runtime.cc near
line 9628)

  if (!MELTDESCR_OPTIONAL(melt_module_is_gpl_compatible))
    warning (0, &quot;MELT module %s does not claim to be GPL compatible&quot;,
	     MELTDESCR_REQUIRED (melt_modulename));


Notice that MELT is very often generating C++ code and dlopening it.
This is the common way for MELT to function &amp;amp; run. In particular, it may
emit temporary C++ code, notably when simply evaluating a MELT
expression, or for the &quot;findgimple&quot; mode of MELT - see middle of
&lt;a rel=&quot;nofollow&quot; href=&quot;http://gcc-melt.org/tutousemelt.html&quot;&gt;http://gcc-melt.org/tutousemelt.html&lt;/a&gt; for an explanation and compile and
dlopen that code. There is no reason for that temporary C++ code to be
GPL (it is temporary and is deleted when MELT finishes, and the source
is just some program argument -fplugin-arg-melt-gimple-pattern=... to
the MELT plugin &amp;amp; to gcc).





So my concrete questions to the GCC community are:

Do meta-plugins like MELT (&amp;amp; probably Python plugin) should be concerned
about having some device to check compatibility with GPL licensing? I
believe that yes... (David Malcolm: what is your feeling on this? How do
you deal with that concern inside your Python plugin?)

Can I just leave a warning, not an error, when the MELT macro
module_is_gpl_compatible is not used in some user-provided *.melt code?

Are my warning messages good enough; should I speak of &quot;claim to be GPL
compatible&quot; in them, or should it be something else, e.g. &quot;assert to be
GPL compatible&quot; or &quot;promise to be GPL compatible&quot;, or &quot;is GPL
compatible&quot; [which cannot be technically checked, only legally!]; please
recall that English is not my native language! So any better suggestions
are welcome!

Is it ok or good to give the
&lt;a rel=&quot;nofollow&quot; href=&quot;http://www.gnu.org/licenses/gcc-exception-3.1.en.html&quot;&gt;http://www.gnu.org/licenses/gcc-exception-3.1.en.html&lt;/a&gt; URL in a notice
message?

Is the MELT macro name module_is_gpl_compatible good enough? I was also
thinking of extension_is_gpl_compatible.... (I generally speak of *.melt
extension files producing *.cc generated C++ files compiled into *.so
MELT modules which are dlopened by the MELT runtime which is itself a
GCC plugin...)

Is the C++ symbol name in the generated C++ code
melt_module_is_gpl_compatible good enough (I really want it to start
with melt_ since this is a convention for the MELT runtime, to avoid
collisions with GCC symbols)?

I just committed today (jan.23, 2014) some patches to the MELT branch of
GCC (svn rev.206976) I also make a temporary MELT plugin snapshot
available on &lt;a rel=&quot;nofollow&quot; href=&quot;http://gcc-melt.org/melt-plugin-snapshot.tar.bz2&quot;&gt;http://gcc-melt.org/melt-plugin-snapshot.tar.bz2&lt;/a&gt; which is a
symlink to  
&lt;a rel=&quot;nofollow&quot; href=&quot;http://gcc-melt.org/melt-plugin-snapshot-r206976-2014jan23.tar.bz2&quot;&gt;http://gcc-melt.org/melt-plugin-snapshot-r206976-2014jan23.tar.bz2&lt;/a&gt; 
This MELT plugin snapshot is probably buggy and instable. I barely
tested the features I just added.

If you (specially high-level members of GCC community, i.e. global
reviewers, plugin reviewers, or steering committee members, but also
other plain members like me) believe that all this is crappy or wrong,
please tell and I will revert my latest patches regarding all this. If
you believe it should be improved, please also tell. If you think it is
useful, please say so. If you have any comments about naming or
messages, please help!

Your feedback is expected and welcome!

Regards.

PS: if this is welcomed it will be part of next MELT plugin (i.e. MELT
plugin 1.1 - but I don't promise any date for its future release).

PPS: I have some meeting tomorrow and might not have time to read or
answer emails.

-- 
Basile STARYNKEVITCH         &lt;a rel=&quot;nofollow&quot; href=&quot;http://starynkevitch.net/Basile/&quot;&gt;http://starynkevitch.net/Basile/&lt;/a&gt;
email: basile&amp;lt;at&amp;gt;starynkevitch&amp;lt;dot&amp;gt;net mobile: +33 6 8501 2359
8, rue de la Faiencerie, 92340 Bourg La Reine, France
*** opinions {are only mine, sont seulement les miennes} ***


&lt;/pre&gt;
















&lt;/body&gt;
&lt;/div&gt;&lt;hr class=&quot;rdb-page-break&quot; /&gt;&lt;div&gt;&lt;body&gt;



&lt;p&gt;This is the mail archive of the 
&lt;tt&gt;gcc@gcc.gnu.org&lt;/tt&gt;
mailing list for the &lt;a href=&quot;http://gcc.gnu.org/&quot;&gt;GCC project&lt;/a&gt;.






&lt;/p&gt;









&lt;ul&gt;
&lt;li&gt;&lt;em&gt;From&lt;/em&gt;: Steven Bosscher &amp;lt;stevenb dot gcc at gmail dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;To&lt;/em&gt;: &quot;Eric S. Raymond&quot; &amp;lt;esr at thyrsus dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Cc&lt;/em&gt;: GCC Mailing List &amp;lt;gcc at gcc dot gnu dot org&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Date&lt;/em&gt;: Thu, 23 Jan 2014 22:37:26 +0100&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Subject&lt;/em&gt;: Re: Don't shoot the messenger&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Authentication-results&lt;/em&gt;: sourceware.org; auth=none&lt;/li&gt;
&lt;li&gt;&lt;em&gt;References&lt;/em&gt;: &amp;lt;20140123212747 dot 6FE32380525 at snark dot thyrsus dot com&amp;gt;&lt;/li&gt;
&lt;/ul&gt;





&lt;pre&gt;On Thu, Jan 23, 2014 at 10:27 PM, Eric S. Raymond wrote:
&amp;gt; I have not run direct checks on the quality of the optimized code, but
&amp;gt; reports from others that it is improved seem plausible in light of
&amp;gt; the fact that GCC's optimization technology is two decades older in
&amp;gt; origin.

Yay, another &quot;fact&quot;.

You must have missed the almost complete rewrite of GCC's optimization
framework that was merged in 2004 and that's been continuously
improved since than: &lt;a rel=&quot;nofollow&quot; href=&quot;http://gcc.gnu.org/projects/tree-ssa/&quot;&gt;http://gcc.gnu.org/projects/tree-ssa/&lt;/a&gt;

Really. Do your homework.

Ciao!
Steven

&lt;/pre&gt;




&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Follow-Ups&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a name=&quot;00217&quot; href=&quot;http://gcc.gnu.org/ml/gcc/2014-01/msg00217.html&quot;&gt;Re: Don't shoot the messenger&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;


&lt;ul&gt;&lt;li&gt;&lt;strong&gt;References&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a name=&quot;00214&quot; href=&quot;http://gcc.gnu.org/ml/gcc/2014-01/msg00214.html&quot;&gt;Don't shoot the messenger&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;









&lt;/body&gt;
&lt;/div&gt;&lt;hr class=&quot;rdb-page-break&quot; /&gt;&lt;div&gt;&lt;body&gt;



&lt;p&gt;This is the mail archive of the 
&lt;tt&gt;gcc@gcc.gnu.org&lt;/tt&gt;
mailing list for the &lt;a href=&quot;http://gcc.gnu.org/&quot;&gt;GCC project&lt;/a&gt;.






&lt;/p&gt;









&lt;ul&gt;
&lt;li&gt;&lt;em&gt;From&lt;/em&gt;: &quot;Eric S. Raymond&quot; &amp;lt;esr at thyrsus dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;To&lt;/em&gt;: Steven Bosscher &amp;lt;stevenb dot gcc at gmail dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Cc&lt;/em&gt;: GCC Mailing List &amp;lt;gcc at gcc dot gnu dot org&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Date&lt;/em&gt;: Thu, 23 Jan 2014 16:58:25 -0500&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Subject&lt;/em&gt;: Re: Don't shoot the messenger&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Authentication-results&lt;/em&gt;: sourceware.org; auth=none&lt;/li&gt;
&lt;li&gt;&lt;em&gt;References&lt;/em&gt;: &amp;lt;20140123212747 dot 6FE32380525 at snark dot thyrsus dot com&amp;gt; &amp;lt;CABu31nNY0tzOSK=ju44ckBVAA0OzzSA6KK60=C2XijS8RnLyfQ at mail dot gmail dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Reply-to&lt;/em&gt;: esr at thyrsus dot com&lt;/li&gt;
&lt;/ul&gt;





&lt;pre&gt;Steven Bosscher &amp;lt;stevenb.gcc@gmail.com&amp;gt;:
&amp;gt; On Thu, Jan 23, 2014 at 10:27 PM, Eric S. Raymond wrote:
&amp;gt; &amp;gt; I have not run direct checks on the quality of the optimized code, but
&amp;gt; &amp;gt; reports from others that it is improved seem plausible in light of
&amp;gt; &amp;gt; the fact that GCC's optimization technology is two decades older in
&amp;gt; &amp;gt; origin.
&amp;gt; 
&amp;gt; Yay, another &quot;fact&quot;.
&amp;gt; 
&amp;gt; You must have missed the almost complete rewrite of GCC's optimization
&amp;gt; framework that was merged in 2004 and that's been continuously
&amp;gt; improved since than: &lt;a rel=&quot;nofollow&quot; href=&quot;http://gcc.gnu.org/projects/tree-ssa/&quot;&gt;http://gcc.gnu.org/projects/tree-ssa/&lt;/a&gt;
&amp;gt; 
&amp;gt; Really. Do your homework.
&amp;gt; 
&amp;gt; Ciao!
&amp;gt; Steven

And another bullet whizzes by my head.

Really, attempts to shoot the messenger *won't help*.  By ignoring the
areas where clang *does* have a clear advantage, *right now*, you are
displaying the exact head-in-the-sand attitude that is most likely to
concede the high ground to clang.

That outcome wouldn't be a problem for me.  It would hurt the FSF's 
prestige pretty badly, though.  It's not really my job to care about that, 
but I thought someone here would. Perhaps I was wrong.
-- 
		&amp;lt;a href=&quot;&lt;a rel=&quot;nofollow&quot; href=&quot;http://www.catb.org/~esr/&amp;amp;quot&quot;&gt;http://www.catb.org/~esr/&amp;amp;quot&lt;/a&gt;;&amp;gt;Eric S. Raymond&amp;lt;/a&amp;gt;

&lt;/pre&gt;

















&lt;/body&gt;
&lt;/div&gt;&lt;hr class=&quot;rdb-page-break&quot; /&gt;&lt;div&gt;&lt;body&gt;



&lt;p&gt;This is the mail archive of the 
&lt;tt&gt;gcc@gcc.gnu.org&lt;/tt&gt;
mailing list for the &lt;a href=&quot;http://gcc.gnu.org/&quot;&gt;GCC project&lt;/a&gt;.






&lt;/p&gt;









&lt;ul&gt;
&lt;li&gt;&lt;em&gt;From&lt;/em&gt;: Jonathan Wakely &amp;lt;jwakely dot gcc at gmail dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;To&lt;/em&gt;: esr at thyrsus dot com&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Cc&lt;/em&gt;: Steven Bosscher &amp;lt;stevenb dot gcc at gmail dot com&amp;gt;, GCC Mailing List &amp;lt;gcc at gcc dot gnu dot org&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Date&lt;/em&gt;: Thu, 23 Jan 2014 22:22:34 +0000&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Subject&lt;/em&gt;: Re: Don't shoot the messenger&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Authentication-results&lt;/em&gt;: sourceware.org; auth=none&lt;/li&gt;
&lt;li&gt;&lt;em&gt;References&lt;/em&gt;: &amp;lt;20140123212747 dot 6FE32380525 at snark dot thyrsus dot com&amp;gt;	&amp;lt;CABu31nNY0tzOSK=ju44ckBVAA0OzzSA6KK60=C2XijS8RnLyfQ at mail dot gmail dot com&amp;gt;	&amp;lt;20140123215825 dot GA14938 at thyrsus dot com&amp;gt;&lt;/li&gt;
&lt;/ul&gt;





&lt;pre&gt;On 23 January 2014 21:58, Eric S. Raymond &amp;lt;esr@thyrsus.com&amp;gt; wrote:
&amp;gt; Steven Bosscher &amp;lt;stevenb.gcc@gmail.com&amp;gt;:
&amp;gt;&amp;gt; On Thu, Jan 23, 2014 at 10:27 PM, Eric S. Raymond wrote:
&amp;gt;&amp;gt; &amp;gt; I have not run direct checks on the quality of the optimized code, but
&amp;gt;&amp;gt; &amp;gt; reports from others that it is improved seem plausible in light of
&amp;gt;&amp;gt; &amp;gt; the fact that GCC's optimization technology is two decades older in
&amp;gt;&amp;gt; &amp;gt; origin.
&amp;gt;&amp;gt;
&amp;gt;&amp;gt; Yay, another &quot;fact&quot;.
&amp;gt;&amp;gt;
&amp;gt;&amp;gt; You must have missed the almost complete rewrite of GCC's optimization
&amp;gt;&amp;gt; framework that was merged in 2004 and that's been continuously
&amp;gt;&amp;gt; improved since than: &lt;a rel=&quot;nofollow&quot; href=&quot;http://gcc.gnu.org/projects/tree-ssa/&quot;&gt;http://gcc.gnu.org/projects/tree-ssa/&lt;/a&gt;
&amp;gt;&amp;gt;
&amp;gt;&amp;gt; Really. Do your homework.
&amp;gt;&amp;gt;
&amp;gt;&amp;gt; Ciao!
&amp;gt;&amp;gt; Steven
&amp;gt;
&amp;gt; And another bullet whizzes by my head.
&amp;gt;
&amp;gt; Really, attempts to shoot the messenger *won't help*.

Then stop trying to &quot;help&quot; us, please.

&amp;gt;  By ignoring the
&amp;gt; areas where clang *does* have a clear advantage, *right now*, you are
&amp;gt; displaying the exact head-in-the-sand attitude that is most likely to
&amp;gt; concede the high ground to clang.

It's not about having our head-in-the-sand and not wanting to hear the message.

You seem to think you're doing us a favour by telling us something we
need to hear.

We've heard it. It's not a new message. You can stop telling us now, thanks.

&amp;gt; That outcome wouldn't be a problem for me.

In that case you can stop trying to pass on the message now. We've heard it.

&amp;gt;  It would hurt the FSF's
&amp;gt; prestige pretty badly, though.  It's not really my job to care about that,
&amp;gt; but I thought someone here would. Perhaps I was wrong.

I know you think you're trying to help, but you're just yet another
person standing outside the tent pissing in, thinking you're helping
us win a war with Clang.  But there is no war.

There's room for two high-quality open source compilers. They will
distinguish themselves in different ways, one of which is licensing.

Now please, stop trying to help.

&lt;/pre&gt;




&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Follow-Ups&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a name=&quot;00224&quot; href=&quot;http://gcc.gnu.org/ml/gcc/2014-01/msg00224.html&quot;&gt;Re: Don't shoot the messenger&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;












&lt;/body&gt;
&lt;/div&gt;&lt;hr class=&quot;rdb-page-break&quot; /&gt;&lt;div&gt;&lt;body&gt;



&lt;p&gt;This is the mail archive of the 
&lt;tt&gt;gcc@gcc.gnu.org&lt;/tt&gt;
mailing list for the &lt;a href=&quot;http://gcc.gnu.org/&quot;&gt;GCC project&lt;/a&gt;.






&lt;/p&gt;









&lt;ul&gt;
&lt;li&gt;&lt;em&gt;From&lt;/em&gt;: David Malcolm &amp;lt;dmalcolm at redhat dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;To&lt;/em&gt;: Basile Starynkevitch &amp;lt;basile at starynkevitch dot net&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Cc&lt;/em&gt;: gcc-melt at googlegroups dot com, gcc at gcc dot gnu dot org, dnovillo at google dot com&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Date&lt;/em&gt;: Thu, 23 Jan 2014 17:31:09 -0500&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Subject&lt;/em&gt;: Re: checking GPL compatibility in MELT meta-plugin&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Authentication-results&lt;/em&gt;: sourceware.org; auth=none&lt;/li&gt;
&lt;li&gt;&lt;em&gt;References&lt;/em&gt;: &amp;lt;1390512505 dot 17048 dot 61 dot camel at glinka dot lesours&amp;gt;&lt;/li&gt;
&lt;/ul&gt;





&lt;pre&gt;On Thu, 2014-01-23 at 22:28 +0100, Basile Starynkevitch wrote:
&amp;gt; Hello All, [GCC list, MELT group, and David Malcolm -python plugin- and
&amp;gt; Diego Novillo -plugin enthusiast &amp;amp; maintainer]
&amp;gt; 
&amp;gt; Reminder: IANAL, ie I (Basile) am not a lawyer! But I am a free software
&amp;gt; enthusiast and I like a lot the GPLv3....
&amp;gt; 
&amp;gt; As you know, GCC has some technical devices to invite plugin developers
&amp;gt; to make GPL compliant plugins.
&amp;gt; &lt;a rel=&quot;nofollow&quot; href=&quot;http://gcc.gnu.org/onlinedocs/gccint/Plugin-API.html&quot;&gt;http://gcc.gnu.org/onlinedocs/gccint/Plugin-API.html&lt;/a&gt;
&amp;gt; 
&amp;gt; This is done thru the plugin_is_GPL_compatible symbol. Of course, some
&amp;gt; dishonest person could technically have &amp;amp; distribute a proprietary GCC
&amp;gt; plugin defining that symbol (IANAL, but I believe it won't be accepted
&amp;gt; in court, even if technically feasible). 

[...]

&amp;gt; So my concrete questions to the GCC community are:
&amp;gt; 
&amp;gt; Do meta-plugins like MELT (&amp;amp; probably Python plugin) should be concerned
&amp;gt; about having some device to check compatibility with GPL licensing? I
&amp;gt; believe that yes... (David Malcolm: what is your feeling on this? How do
&amp;gt; you deal with that concern inside your Python plugin?)

[I am also not a lawyer, and I don't speak for Red Hat in this]

The Python plugin contains the symbol &quot;plugin_is_GPL_compatible&quot;, and
is, as far as I know, GPL compatible.  The source code declares itself
to be under the GPLv3 with the &quot;(at your option) any later version&quot;
clause.

However it doesn't make any technical attempts to enforce that the code
running within it is license-compatible.

FWIW, I am skeptical of the ability of a computer to correctly (I)
determine which licenses are applicable on any given code and (II)
interpret these licenses.  Hence I believe that any such attempt to
enforce licensing would be both (a) doomed to have both false positives
and false negatives, and (b) be irritating for the end-user, for only
marginal benefit.

(My 2 cents; hope it's helpful)

Dave

&lt;/pre&gt;
















&lt;/body&gt;
&lt;/div&gt;&lt;hr class=&quot;rdb-page-break&quot; /&gt;&lt;div&gt;&lt;body&gt;



&lt;p&gt;This is the mail archive of the 
&lt;tt&gt;gcc@gcc.gnu.org&lt;/tt&gt;
mailing list for the &lt;a href=&quot;http://gcc.gnu.org/&quot;&gt;GCC project&lt;/a&gt;.






&lt;/p&gt;









&lt;ul&gt;
&lt;li&gt;&lt;em&gt;From&lt;/em&gt;: Ian Lance Taylor &amp;lt;iant at google dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;To&lt;/em&gt;: Basile Starynkevitch &amp;lt;basile at starynkevitch dot net&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Cc&lt;/em&gt;: gcc-melt at googlegroups dot com, GCC Development &amp;lt;gcc at gcc dot gnu dot org&amp;gt;, 	David Malcolm &amp;lt;dmalcolm at redhat dot com&amp;gt;, Diego Novillo &amp;lt;dnovillo at google dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Date&lt;/em&gt;: Thu, 23 Jan 2014 17:42:59 -0800&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Subject&lt;/em&gt;: Re: checking GPL compatibility in MELT meta-plugin&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Authentication-results&lt;/em&gt;: sourceware.org; auth=none&lt;/li&gt;
&lt;li&gt;&lt;em&gt;References&lt;/em&gt;: &amp;lt;1390512505 dot 17048 dot 61 dot camel at glinka dot lesours&amp;gt;&lt;/li&gt;
&lt;/ul&gt;





&lt;pre&gt;On Thu, Jan 23, 2014 at 1:28 PM, Basile Starynkevitch
&amp;lt;basile@starynkevitch.net&amp;gt; wrote:
&amp;gt;
&amp;gt; Reminder: IANAL, ie I (Basile) am not a lawyer! But I am a free software
&amp;gt; enthusiast and I like a lot the GPLv3....
&amp;gt;
&amp;gt; As you know, GCC has some technical devices to invite plugin developers
&amp;gt; to make GPL compliant plugins.
&amp;gt; &lt;a rel=&quot;nofollow&quot; href=&quot;http://gcc.gnu.org/onlinedocs/gccint/Plugin-API.html&quot;&gt;http://gcc.gnu.org/onlinedocs/gccint/Plugin-API.html&lt;/a&gt;
&amp;gt;
&amp;gt; This is done thru the plugin_is_GPL_compatible symbol. Of course, some
&amp;gt; dishonest person could technically have &amp;amp; distribute a proprietary GCC
&amp;gt; plugin defining that symbol (IANAL, but I believe it won't be accepted
&amp;gt; in court, even if technically feasible).

The plugin_is_GPL_compatible symbol is implemented by GCC and may
serve as an indication of intent by plugin developers.  But it does
not by itself indicate whether a plugin may be used.  The rules for
plugins are spelled out in the GCC Runtime Library Exception
(&lt;a rel=&quot;nofollow&quot; href=&quot;http://www.gnu.org/licenses/gcc-exception-3.1.html&quot;&gt;http://www.gnu.org/licenses/gcc-exception-3.1.html&lt;/a&gt;).  A plugin that
follows those rules adds no restrictions to the generated code.  A
plugin that does not follow those rules does add restrictions to the
generated code.  This is true whether or not the plugin does anything
with the plugin_is_GPL_compatible symbol.


&amp;gt; Do meta-plugins like MELT (&amp;amp; probably Python plugin) should be concerned
&amp;gt; about having some device to check compatibility with GPL licensing? I
&amp;gt; believe that yes... (David Malcolm: what is your feeling on this? How do
&amp;gt; you deal with that concern inside your Python plugin?)

I think it would be reasonable for you to use something like
plugin_is_GPL_compatible.


&amp;gt; Can I just leave a warning, not an error, when the MELT macro
&amp;gt; module_is_gpl_compatible is not used in some user-provided *.melt code?

If you are going to use it, then use it.  Make it an error.


&amp;gt; Are my warning messages good enough; should I speak of &quot;claim to be GPL
&amp;gt; compatible&quot; in them, or should it be something else, e.g. &quot;assert to be
&amp;gt; GPL compatible&quot; or &quot;promise to be GPL compatible&quot;, or &quot;is GPL
&amp;gt; compatible&quot; [which cannot be technically checked, only legally!]; please
&amp;gt; recall that English is not my native language! So any better suggestions
&amp;gt; are welcome!

Hard to give an opinion on an incomplete phrase, but copying the error
message in gcc/plugin.c ought to be fine.


&amp;gt; Is it ok or good to give the
&amp;gt; &lt;a rel=&quot;nofollow&quot; href=&quot;http://www.gnu.org/licenses/gcc-exception-3.1.en.html&quot;&gt;http://www.gnu.org/licenses/gcc-exception-3.1.en.html&lt;/a&gt; URL in a notice
&amp;gt; message?

Yes, I think that is a good idea.

Hope this helps.

Ian

&lt;/pre&gt;

















&lt;/body&gt;
&lt;/div&gt;&lt;hr class=&quot;rdb-page-break&quot; /&gt;&lt;div&gt;&lt;body&gt;



&lt;p&gt;This is the mail archive of the 
&lt;tt&gt;gcc@gcc.gnu.org&lt;/tt&gt;
mailing list for the &lt;a href=&quot;http://gcc.gnu.org/&quot;&gt;GCC project&lt;/a&gt;.






&lt;/p&gt;









&lt;ul&gt;
&lt;li&gt;&lt;em&gt;From&lt;/em&gt;: Basile Starynkevitch &amp;lt;basile at starynkevitch dot net&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;To&lt;/em&gt;: Ian Lance Taylor &amp;lt;iant at google dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Cc&lt;/em&gt;: gcc-melt at googlegroups dot com, GCC Development &amp;lt;gcc at gcc dot gnu dot org&amp;gt;, David Malcolm &amp;lt;dmalcolm at redhat dot com&amp;gt;, Diego Novillo &amp;lt;dnovillo at google dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Date&lt;/em&gt;: Fri, 24 Jan 2014 07:32:13 +0100&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Subject&lt;/em&gt;: Re: checking GPL compatibility in MELT meta-plugin&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Authentication-results&lt;/em&gt;: sourceware.org; auth=none&lt;/li&gt;
&lt;li&gt;&lt;em&gt;References&lt;/em&gt;: &amp;lt;1390512505 dot 17048 dot 61 dot camel at glinka dot lesours&amp;gt;	 &amp;lt;CAKOQZ8zYqw_ggdhxb5pasmGei=GBoVmxi6PdvKNDfsM9Z-ZAQQ at mail dot gmail dot com&amp;gt;&lt;/li&gt;
&lt;/ul&gt;





&lt;pre&gt;On Thu, 2014-01-23 at 17:42 -0800, Ian Lance Taylor wrote:
&amp;gt; On Thu, Jan 23, 2014 at 1:28 PM, Basile Starynkevitch
&amp;gt; &amp;lt;basile@starynkevitch.net&amp;gt; wrote:
&amp;gt; &amp;gt;
&amp;gt; &amp;gt; Reminder: IANAL, ie I (Basile) am not a lawyer! But I am a free software
&amp;gt; &amp;gt; enthusiast and I like a lot the GPLv3....
&amp;gt; &amp;gt;
&amp;gt; &amp;gt; As you know, GCC has some technical devices to invite plugin developers
&amp;gt; &amp;gt; to make GPL compliant plugins.
&amp;gt; &amp;gt; &lt;a rel=&quot;nofollow&quot; href=&quot;http://gcc.gnu.org/onlinedocs/gccint/Plugin-API.html&quot;&gt;http://gcc.gnu.org/onlinedocs/gccint/Plugin-API.html&lt;/a&gt;
&amp;gt; &amp;gt;
&amp;gt; &amp;gt; This is done thru the plugin_is_GPL_compatible symbol. Of course, some
&amp;gt; &amp;gt; dishonest person could technically have &amp;amp; distribute a proprietary GCC
&amp;gt; &amp;gt; plugin defining that symbol (IANAL, but I believe it won't be accepted
&amp;gt; &amp;gt; in court, even if technically feasible).
&amp;gt; 
&amp;gt; The plugin_is_GPL_compatible symbol is implemented by GCC and may
&amp;gt; serve as an indication of intent by plugin developers.  But it does
&amp;gt; not by itself indicate whether a plugin may be used.  The rules for
&amp;gt; plugins are spelled out in the GCC Runtime Library Exception
&amp;gt; (&lt;a rel=&quot;nofollow&quot; href=&quot;http://www.gnu.org/licenses/gcc-exception-3.1.html&quot;&gt;http://www.gnu.org/licenses/gcc-exception-3.1.html&lt;/a&gt;).  A plugin that
&amp;gt; follows those rules adds no restrictions to the generated code.  A
&amp;gt; plugin that does not follow those rules does add restrictions to the
&amp;gt; generated code.  This is true whether or not the plugin does anything
&amp;gt; with the plugin_is_GPL_compatible symbol.

In addition, and this might perhaps be more true for some future MELT
extensions than for other plugins, a plugin could be used for code
checking purposes (i.e. as a super-lint). In that view, one compile
his/her application with some MELT extension -or some other plugin- for
heuristic static analysis purposes - and won't distribute code so
compiled, but only distribute code compiled without any plugin (or MELT
extension).
Probably &lt;a rel=&quot;nofollow&quot; href=&quot;http://clang-analyzer.llvm.org/&quot;&gt;http://clang-analyzer.llvm.org/&lt;/a&gt; is used this way also. And also
&lt;a rel=&quot;nofollow&quot; href=&quot;http://frama-c.com&quot;&gt;http://frama-c.com&lt;/a&gt; (developed by my colleagues from CEA, LIST)  which is
a LGPL static analyzer separate from any compiler. 

BTW, this is probably also the case (for proprietary software compiled
with plain GCC) regarding the debugging -g flag: I imagine that it is
more used by developers than on the finally released or distributed
binary...
I understand that &lt;a rel=&quot;nofollow&quot; href=&quot;http://www.gnu.org/licenses/gcc-exception-3.1.en.html&quot;&gt;http://www.gnu.org/licenses/gcc-exception-3.1.en.html&lt;/a&gt;
is only relevant for distribution (i.e. propagation or conveying, in
terms of GPLv3) of [binary] software compiled with GCC.... (If the
compiled binary is discarded or only internally used, does it apply?)
&amp;gt; 
&amp;gt; 
&amp;gt; &amp;gt; Do meta-plugins like MELT (&amp;amp; probably Python plugin) should be concerned
&amp;gt; &amp;gt; about having some device to check compatibility with GPL licensing? I
&amp;gt; &amp;gt; believe that yes... (David Malcolm: what is your feeling on this? How do
&amp;gt; &amp;gt; you deal with that concern inside your Python plugin?)
&amp;gt; 
&amp;gt; I think it would be reasonable for you to use something like
&amp;gt; plugin_is_GPL_compatible.
&amp;gt; 
&amp;gt; 
&amp;gt; &amp;gt; Can I just leave a warning, not an error, when the MELT macro
&amp;gt; &amp;gt; module_is_gpl_compatible is not used in some user-provided *.melt code?
&amp;gt; 
&amp;gt; If you are going to use it, then use it.  Make it an error.


The reason I was using a warning not an error is that MELT could perhaps
in the future be used for static analysis of code (as or with -g), but
that in that scenario the real released executable would very probably
be compiled without MELT (and without -g) - and perhaps even by an older
version of GCC! But I could make it an error if you wish. I just believe
it should stay a warning....

&amp;gt; 
&amp;gt; 
&amp;gt; &amp;gt; Are my warning messages good enough; should I speak of &quot;claim to be GPL
&amp;gt; &amp;gt; compatible&quot; in them, or should it be something else, e.g. &quot;assert to be
&amp;gt; &amp;gt; GPL compatible&quot; or &quot;promise to be GPL compatible&quot;, or &quot;is GPL
&amp;gt; &amp;gt; compatible&quot; [which cannot be technically checked, only legally!]; please
&amp;gt; &amp;gt; recall that English is not my native language! So any better suggestions
&amp;gt; &amp;gt; are welcome!
&amp;gt; 
&amp;gt; Hard to give an opinion on an incomplete phrase, but copying the error
&amp;gt; message in gcc/plugin.c ought to be fine.

Here are the precise messages for a given example. Assume you translate
an hypothetical your-foo.melt extension into your-foo.so module and that
file your-foo.melt does not use the MODULE_IS_GPL_COMPATIBLE macro to
claim GPL compatibility:

You'll first translate that your-foo.melt extension into a binary MELT
module using something like [see &lt;a rel=&quot;nofollow&quot; href=&quot;http://gcc-melt.org/tutousemelt.html&quot;&gt;http://gcc-melt.org/tutousemelt.html&lt;/a&gt;
for details]

    gcc -fplugin=melt -fplugin-arg-melt-mode=translatetomodule \
        -fplugin-arg-melt-arg=your-foo.melt \
        -c emptyfile.c -o /dev/null

During this translation you'll get messages from warmelt-outobj.melt:

    warning: MELT module your-foo does not claim GPL compatibility
             using MODULE_IS_GPL_COMPATIBLE macro
    notice: see &lt;a rel=&quot;nofollow&quot; href=&quot;http://www.gnu.org/licenses/gcc-exception-3.1.en.html&quot;&gt;http://www.gnu.org/licenses/gcc-exception-3.1.en.html&lt;/a&gt;

and MELT would have produced a your-foo.so MELT binary module. Later on,
(perhaps a week after) you'll use that module to analyze (or perhaps
even optimize - which is against the GCC runtime exception if you
distribute the so compiled binary) some other-bar.cc file 

   g++ -fplugin=melt -fplugin-arg-melt-extra=your-foo \
       -fplugin-arg-melt-mode=fooanalysis \
       -c -O2 -Wall other-bar.cc

then you'll get from melt-runtime.cc:

   warning: MELT module your-foo does not claim to be GPL compatible
   notice: see &lt;a rel=&quot;nofollow&quot; href=&quot;http://www.gnu.org/licenses/gcc-exception-3.1.en.html&quot;&gt;http://www.gnu.org/licenses/gcc-exception-3.1.en.html&lt;/a&gt;

(I just added also the notice in svn.rev 207025.), should that be

   warning: MELT module your-foo is not licensed under 
            a GPL-compatible license

or even
warning: MELT module your-foo is not licensed under 
         a GPL-compatible license, so usage of compiled binary 
         could be restricted see 
         &lt;a rel=&quot;nofollow&quot; href=&quot;http://www.gnu.org/licenses/gcc-exception-3.1.en.html&quot;&gt;http://www.gnu.org/licenses/gcc-exception-3.1.en.html&lt;/a&gt;

    
instead?

&amp;gt; 
&amp;gt; 
&amp;gt; &amp;gt; Is it ok or good to give the
&amp;gt; &amp;gt; &lt;a rel=&quot;nofollow&quot; href=&quot;http://www.gnu.org/licenses/gcc-exception-3.1.en.html&quot;&gt;http://www.gnu.org/licenses/gcc-exception-3.1.en.html&lt;/a&gt; URL in a notice
&amp;gt; &amp;gt; message?
&amp;gt; 
&amp;gt; Yes, I think that is a good idea.
&amp;gt; 
&amp;gt; Hope this helps.


It did help a lot. Thanks Ian!


Cheers

-- 
Basile STARYNKEVITCH         &lt;a rel=&quot;nofollow&quot; href=&quot;http://starynkevitch.net/Basile/&quot;&gt;http://starynkevitch.net/Basile/&lt;/a&gt;
email: basile&amp;lt;at&amp;gt;starynkevitch&amp;lt;dot&amp;gt;net mobile: +33 6 8501 2359
8, rue de la Faiencerie, 92340 Bourg La Reine, France
*** opinions {are only mine, sont seulement les miennes} ***


&lt;/pre&gt;
















&lt;/body&gt;
&lt;/div&gt;&lt;hr class=&quot;rdb-page-break&quot; /&gt;&lt;div&gt;&lt;body&gt;



&lt;p&gt;This is the mail archive of the 
&lt;tt&gt;gcc@gcc.gnu.org&lt;/tt&gt;
mailing list for the &lt;a href=&quot;http://gcc.gnu.org/&quot;&gt;GCC project&lt;/a&gt;.






&lt;/p&gt;









&lt;ul&gt;
&lt;li&gt;&lt;em&gt;From&lt;/em&gt;: Jakub Jelinek &amp;lt;jakub at redhat dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;To&lt;/em&gt;: Vladimir Makarov &amp;lt;vmakarov at redhat dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Cc&lt;/em&gt;: Chris Lattner &amp;lt;clattner at apple dot com&amp;gt;,        Steven Bosscher &amp;lt;stevenb dot gcc at gmail dot com&amp;gt;, esr at thyrsus dot com,        Helmut Eller &amp;lt;eller dot helmut at gmail dot com&amp;gt;,        GCC Mailing List &amp;lt;gcc at gcc dot gnu dot org&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Date&lt;/em&gt;: Fri, 24 Jan 2014 08:21:45 +0100&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Subject&lt;/em&gt;: Re: clang vs free software&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Authentication-results&lt;/em&gt;: sourceware.org; auth=none&lt;/li&gt;
&lt;li&gt;&lt;em&gt;References&lt;/em&gt;: &amp;lt;87ha8yqvup dot fsf at engster dot org&amp;gt; &amp;lt;E1W5cXI-0000j4-8x at fencepost dot gnu dot org&amp;gt; &amp;lt;CAJnXXoiuzZhjDGpvXY7psee=+bXn1rB+GdELYP0FS0CuWPqYeQ at mail dot gmail dot com&amp;gt; &amp;lt;E1W6HwP-0001WU-Tg at fencepost dot gnu dot org&amp;gt; &amp;lt;87r47zezcc dot fsf at fencepost dot gnu dot org&amp;gt; &amp;lt;m2eh3ykc3y dot fsf at gmail dot com&amp;gt; &amp;lt;20140123174934 dot GA10933 at thyrsus dot com&amp;gt; &amp;lt;CABu31nMSPdsGU-sAcO_HnFRetqQDgk5fQ3R12aYA0aqTvgdx+A at mail dot gmail dot com&amp;gt; &amp;lt;8E23EFFC-88C3-48BE-97AB-77207DA32499 at apple dot com&amp;gt; &amp;lt;52E1F170 dot 603 at redhat dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Reply-to&lt;/em&gt;: Jakub Jelinek &amp;lt;jakub at redhat dot com&amp;gt;&lt;/li&gt;
&lt;/ul&gt;





&lt;pre&gt;On Thu, Jan 23, 2014 at 11:52:00PM -0500, Vladimir Makarov wrote:
&amp;gt; o IMHO, the data in articles lack credability may be because a wrong
&amp;gt; setup (by me or by phoronix).  E.g. I tried to reproduce Scimark
&amp;gt; results for GCC4.8 and LLVM3.3 from his article &quot;LLVM Clang 3.4
&amp;gt; Already Has Some Performance Changes&quot;:
&amp;gt; 
&amp;gt; &lt;a rel=&quot;nofollow&quot; href=&quot;http://www.phoronix.com/scan.php?page=article&amp;amp;item=llvm_clang34_first&amp;amp;num=2&quot;&gt;http://www.phoronix.com/scan.php?page=article&amp;amp;item=llvm_clang34_first&amp;amp;num=2&lt;/a&gt;
&amp;gt; 
&amp;gt; Phoronix used i7-4770K for this.  I used the closest machine I found
&amp;gt; i5-4670 (with switched turbo mode off).  The important difference is
&amp;gt; 0.1Ghz in frequency (3.5Ghz vs. 3.4 Ghz).  I got GCC Scimark
&amp;gt; (-large) composite score close to the article when I used -O and
&amp;gt; still on my machine the composite score was 20% higher than the
&amp;gt; article reports although the article says that -O3 -march=core-avx
&amp;gt; were used.

Yeah, that is my experience too, e.g. on
&lt;a rel=&quot;nofollow&quot; href=&quot;http://www.phoronix.com/scan.php?page=article&amp;amp;item=llvm34_gcc49_compilers&amp;amp;num=3&quot;&gt;http://www.phoronix.com/scan.php?page=article&amp;amp;item=llvm34_gcc49_compilers&amp;amp;num=3&lt;/a&gt;
Phoronix claims the LU benchmark improved 80% with LLVM 3.4 and ahead of GCC,
but I couldn't reproduce anything close to that, while LLVM 3.4 slightly
improved compared to LLVM 3.3, it was still comparable to GCC 4.8 and behind
GCC 4.9.  All that matters in the benchmark is a single loop though:
                for (jj=j+1; jj&amp;lt;N; jj++)
                  Aii[jj] -= AiiJ * Aj[jj];
vectorized by all tested compilers, so clearly a microbenchmark.

It is not that long that Phoronix used to compile some of the benchmarks
e.g. with -O0 and claim they were compiled with -O3, or tune for a
completely different CPU than what it has been tested on, their articles often
comment on the numbers in quite biased way without actually bothering
to look at why are the numbers changing, what number changes are within the
noise and if something changes more than that and is repeatable, why it
happened, so their numbers and benchmarks can't be considered the most
credible benchmarks out there.

	Jakub

&lt;/pre&gt;
















&lt;/body&gt;
&lt;/div&gt;&lt;hr class=&quot;rdb-page-break&quot; /&gt;&lt;div&gt;&lt;body&gt;



&lt;p&gt;This is the mail archive of the 
&lt;tt&gt;gcc@gcc.gnu.org&lt;/tt&gt;
mailing list for the &lt;a href=&quot;http://gcc.gnu.org/&quot;&gt;GCC project&lt;/a&gt;.






&lt;/p&gt;









&lt;ul&gt;
&lt;li&gt;&lt;em&gt;From&lt;/em&gt;: Lars Hagstr&amp;#xF6;m &amp;lt;lars at foldspace dot nu&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;To&lt;/em&gt;: gcc at gcc dot gnu dot org&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Date&lt;/em&gt;: Fri, 24 Jan 2014 10:18:28 +0100&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Subject&lt;/em&gt;: Is C++11 to be default for GCC 4.9?&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Authentication-results&lt;/em&gt;: sourceware.org; auth=none&lt;/li&gt;
&lt;/ul&gt;





&lt;pre&gt;Hi,

I'm wondering whether GCC 4.9 will switch to -std=gnu++11 as default?

I did download and build 4.9 from git (through archlinux AUR) to see
if I could answer this myself, but I got slightly contradictory
results:

I got an error that implies that &quot;auto&quot; is not usable, which would
mean that C++11 is not enabled, but I also got a warning that implied
that gnu++11 is &quot;enabled by default&quot;.

&amp;gt; error: &amp;#x2018;xdir&amp;#x2019; does not name a type

&amp;gt; warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default]

Or does the &quot;enabled by default&quot; bit mean something other than I think it means?

Thanks in advance for any insight you can offer.
/Lars

&lt;/pre&gt;




&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Follow-Ups&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a name=&quot;00235&quot; href=&quot;http://gcc.gnu.org/ml/gcc/2014-01/msg00235.html&quot;&gt;Re: Is C++11 to be default for GCC 4.9?&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;











&lt;/body&gt;
&lt;/div&gt;&lt;hr class=&quot;rdb-page-break&quot; /&gt;&lt;div&gt;&lt;body&gt;



&lt;p&gt;This is the mail archive of the 
&lt;tt&gt;gcc@gcc.gnu.org&lt;/tt&gt;
mailing list for the &lt;a href=&quot;http://gcc.gnu.org/&quot;&gt;GCC project&lt;/a&gt;.






&lt;/p&gt;









&lt;ul&gt;
&lt;li&gt;&lt;em&gt;From&lt;/em&gt;: Marc Glisse &amp;lt;marc dot glisse at inria dot fr&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;To&lt;/em&gt;: Lars Hagstr&amp;#xF6;m &amp;lt;lars at foldspace dot nu&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Cc&lt;/em&gt;: gcc at gcc dot gnu dot org&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Date&lt;/em&gt;: Fri, 24 Jan 2014 10:26:07 +0100 (CET)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Subject&lt;/em&gt;: Re: Is C++11 to be default for GCC 4.9?&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Authentication-results&lt;/em&gt;: sourceware.org; auth=none&lt;/li&gt;
&lt;li&gt;&lt;em&gt;References&lt;/em&gt;: &amp;lt;CABUYEh9Rvwg7mu1GfP8bCoGveSR=UDpxd2QSBH8fr_6bPArzcg at mail dot gmail dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Reply-to&lt;/em&gt;: gcc-help at gcc dot gnu dot org&lt;/li&gt;
&lt;/ul&gt;





&lt;pre&gt;
Wrong list, please send any follow-ups to gcc-help@gcc.gnu.org only.

On Fri, 24 Jan 2014, Lars Hagstr&amp;#xF6;m wrote:

&lt;/pre&gt;&lt;blockquote&gt;&lt;pre&gt;
I'm wondering whether GCC 4.9 will switch to -std=gnu++11 as default?
&lt;/pre&gt;&lt;/blockquote&gt;&lt;pre&gt;

No. This is asked regularly, google should find the answer easily.

&lt;/pre&gt;&lt;blockquote&gt;&lt;pre&gt;
I got an error that implies that &quot;auto&quot; is not usable, which would
mean that C++11 is not enabled, but I also got a warning that implied
that gnu++11 is &quot;enabled by default&quot;.

&lt;/pre&gt;&lt;blockquote&gt;&lt;pre&gt;
error: &amp;#x2018;xdir&amp;#x2019; does not name a type
&lt;/pre&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;pre&gt;
warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default]
&lt;/pre&gt;&lt;/blockquote&gt;&lt;pre&gt;

Or does the &quot;enabled by default&quot; bit mean something other than I think it means?
&lt;/pre&gt;&lt;/blockquote&gt;&lt;tt&gt;It is the warning that is enabled by default (in other messages you would 
&lt;/tt&gt;&lt;tt&gt;see [-Wunused] or [-Wformat] etc to tell you which option controls this 
&lt;/tt&gt;&lt;tt&gt;warning).
&lt;/tt&gt;&lt;pre&gt;

--
Marc Glisse

&lt;/pre&gt;




&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Follow-Ups&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a name=&quot;00236&quot; href=&quot;http://gcc.gnu.org/ml/gcc/2014-01/msg00236.html&quot;&gt;Re: Is C++11 to be default for GCC 4.9?&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;


&lt;ul&gt;&lt;li&gt;&lt;strong&gt;References&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a name=&quot;00234&quot; href=&quot;http://gcc.gnu.org/ml/gcc/2014-01/msg00234.html&quot;&gt;Is C++11 to be default for GCC 4.9?&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;









&lt;/body&gt;
&lt;/div&gt;&lt;hr class=&quot;rdb-page-break&quot; /&gt;&lt;div&gt;&lt;body&gt;



&lt;p&gt;This is the mail archive of the 
&lt;tt&gt;gcc@gcc.gnu.org&lt;/tt&gt;
mailing list for the &lt;a href=&quot;http://gcc.gnu.org/&quot;&gt;GCC project&lt;/a&gt;.






&lt;/p&gt;









&lt;ul&gt;
&lt;li&gt;&lt;em&gt;From&lt;/em&gt;: pinskia at gmail dot com&lt;/li&gt;
&lt;li&gt;&lt;em&gt;To&lt;/em&gt;: &quot;gcc-help at gcc dot gnu dot org&quot; &amp;lt;gcc-help at gcc dot gnu dot org&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Cc&lt;/em&gt;: Lars Hagstr&amp;#xC3;m &amp;lt;lars at foldspace dot nu&amp;gt;, &quot;gcc at gcc dot gnu dot org&quot; &amp;lt;gcc at gcc dot gnu dot org&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Date&lt;/em&gt;: Fri, 24 Jan 2014 01:36:39 -0800&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Subject&lt;/em&gt;: Re: Is C++11 to be default for GCC 4.9?&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Authentication-results&lt;/em&gt;: sourceware.org; auth=none&lt;/li&gt;
&lt;li&gt;&lt;em&gt;References&lt;/em&gt;: &amp;lt;CABUYEh9Rvwg7mu1GfP8bCoGveSR=UDpxd2QSBH8fr_6bPArzcg at mail dot gmail dot com&amp;gt; &amp;lt;alpine dot DEB dot 2 dot 10 dot 1401241021120 dot 3643 at laptop-mg dot saclay dot inria dot fr&amp;gt;&lt;/li&gt;
&lt;/ul&gt;





&lt;pre&gt;

&amp;gt; On Jan 24, 2014, at 1:26 AM, Marc Glisse &amp;lt;marc.glisse@inria.fr&amp;gt; wrote:
&amp;gt; 
&amp;gt; Wrong list, please send any follow-ups to gcc-help@gcc.gnu.org only.
&amp;gt; 
&amp;gt;&amp;gt; On Fri, 24 Jan 2014, Lars Hagstr&amp;#xC3;m wrote:
&amp;gt;&amp;gt; 
&amp;gt;&amp;gt; I'm wondering whether GCC 4.9 will switch to -std=gnu++11 as default?
&amp;gt; 
&amp;gt; No. This is asked regularly, google should find the answer easily.

Considering GCC has not switched to c99 by default what makes someone think GCC should switch to c++11 by default?

-- Andrew

&amp;gt; 
&amp;gt;&amp;gt; I got an error that implies that &quot;auto&quot; is not usable, which would
&amp;gt;&amp;gt; mean that C++11 is not enabled, but I also got a warning that implied
&amp;gt;&amp;gt; that gnu++11 is &quot;enabled by default&quot;.
&amp;gt;&amp;gt; 
&amp;gt;&amp;gt;&amp;gt; error: &amp;#xE2;xdir&amp;#xE2; does not name a type
&amp;gt;&amp;gt; 
&amp;gt;&amp;gt;&amp;gt; warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default]
&amp;gt;&amp;gt; 
&amp;gt;&amp;gt; Or does the &quot;enabled by default&quot; bit mean something other than I think it means?
&amp;gt; 
&amp;gt; It is the warning that is enabled by default (in other messages you would see [-Wunused] or [-Wformat] etc to tell you which option controls this warning).
&amp;gt; 
&amp;gt; -- 
&amp;gt; Marc Glisse

&lt;/pre&gt;
















&lt;/body&gt;
&lt;/div&gt;&lt;hr class=&quot;rdb-page-break&quot; /&gt;&lt;div&gt;&lt;body&gt;



&lt;p&gt;This is the mail archive of the 
&lt;tt&gt;gcc@gcc.gnu.org&lt;/tt&gt;
mailing list for the &lt;a href=&quot;http://gcc.gnu.org/&quot;&gt;GCC project&lt;/a&gt;.






&lt;/p&gt;









&lt;ul&gt;
&lt;li&gt;&lt;em&gt;From&lt;/em&gt;: Matthias Klose &amp;lt;doko at ubuntu dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;To&lt;/em&gt;: gcc Development &amp;lt;gcc at gcc dot gnu dot org&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Cc&lt;/em&gt;: Debian GCC Maintainers &amp;lt;debian-gcc at lists dot debian dot org&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Date&lt;/em&gt;: Fri, 24 Jan 2014 11:08:24 +0100&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Subject&lt;/em&gt;: Debian test rebuild on x86_64-linux-gnu with trunk 20140118&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Authentication-results&lt;/em&gt;: sourceware.org; auth=none&lt;/li&gt;
&lt;/ul&gt;





&lt;pre&gt;Here are some preliminary results of a test rebuild on x86_64-linux-gnu with
trunk 20140118, for all 10755 source packages building architecture dependent
binary packages.  Compared to the current gcc-4.8 in Debian unstable, there were
103 new build failures. The gcc-4.9 packages used can be found in Debian
experimental (apt-get -t experimental install g++ g++-4.9). Binutils 2.24 branch
was used, and glibc-2.17. The only changed components in the test rebuild were
the binary packages produced by the gcc-4.9 source package.

The build logs for the builds failing with 4.9 but succeeding with 4.8 can be
found at &lt;a rel=&quot;nofollow&quot; href=&quot;http://people.debian.org/~doko/tmp/logs-20140122/&quot;&gt;http://people.debian.org/~doko/tmp/logs-20140122/&lt;/a&gt;

 - filed issues for GCC after reproducing ICE's with trunk 20140122.
   59917, 59918, 59918, 59920, 59924, 59925, 59927.

 - There are 13 packages failing with link errors, all C++ related,
   and many of these with undefined references to vtables.

 - There are 9 packages with test failures, the most prominent ones
   perl, pcre3 and mysql-5.5 (see below).

The following build failures are triggered by the new GCC:

 - More strict C++, see below for the packages failing with the same
   error messages.

 - Some packages fail with -Werror and new warnings.
   Werror=maybe-uninitialized, -Werror=unused-function

 - missing symbols in debian symbols files

 - gfortran module version mismatches. These seem to go away once
   the dependencies of these packages are rebuilt with the new gfortran.

Planning to do the same for arm-linux-gnueabihf as soon as 59913 is fixed.

Thanks to David Suarez for actually doing the test rebuild.

  Matthias


ace, calligra, digikam, indigo, kdeconnect, kdepim, libreoffice,
objcryst-fox, onscripter, ostinato, schroot, scummvm, vavoom:
  link error, undefined reference to some c++ symbols
  often undefined reference to `vtable for ...'

paraview:
  link error. reason?

gmsh:
  memory hog?
  cc1: out of memory allocating 104 bytes after a total of 8847925248 bytes
  make[4]: *** [CMakeFiles/gmsh.dir/contrib/Chaco/eigen/warnings.c.o] Error 1

aspectc++:
  Weaving aspects into CCSemExpr.cc...
  pure virtual method called
  terminate called without an active exception
  make[3]: ***
[/build/aspectc++-Thyask/aspectc++-1.2/Puma.copy/gen-release/step2/src/CScanner.cc]
Aborted
  make[3]: *** Waiting for unfinished jobs....
  pure virtual method called
  terminate called without an active exception
  make[3]: ***
[/build/aspectc++-Thyask/aspectc++-1.2/Puma.copy/gen-release/step2/src/UnitManager.cc]
Aborted
  pure virtual method called
  terminate called without an active exception
  pure virtual method called
  make[3]: ***
[/build/aspectc++-Thyask/aspectc++-1.2/Puma.copy/gen-release/step2/src/PreFileIncluder.cc]
Aborted
  terminate called without an active exception
  pure virtual method called

botan1.10:
  test failure
  Testing Block Ciphers: ...
  Testing Cipher Modes: ..........................
  Segmentation fault

glib2.0:
  test failure
  /gvariant/serialiser/array:                                          FAIL
  GTester: last random seed: R02S3c7e13660160155b748b31e3e25479e9

libapache2-mod-perl2
  test failures
  [  error] oh jeez, server dumped core
  [  error] oh shucks, server dumped core

matplotlib:
  test timeout after 60min

mia:
  test failure
  The following tests FAILED:
        192 - 3dimage-filter-mlv (Failed)

mysql-5.5:
  Too many failed: Failed 10/436 tests, 97.71% were successful.

pcre3:
  test failures
  FAIL: RunTest

perl:
  test failures
  t/op/numconvert ................................ FAILED at test 104
  t/op/range ..................................... FAILED at test 84
  Failed 2 tests out of 2329, 99.91% okay.

roboptim-core:
  test failures
  88% tests passed, 3 tests failed out of 24

brainparty, igstk:
  error: redeclaration of '...' may not have default arguments [-fpermissive]

0ad, aria2, cupt, dssp, fish, fldigi, iverilog, mednafen, mkvtoolnix, mrs,
nmap, v4l-utils:
  error: converting to '...' from initializer list would use explicit
constructor '...'


activiz.net:
  a function call cannot appear in a constant-expression

apron, cadabra:
  error: 'ptrdiff_t' does not name a type

aptitude, curlpp, diagnostics, mongodb, qtwebkit:
  -Werror &amp;amp; -Werror=unused-function

beast:
  error: '...' is protected within this context

binutils-msp430, xorp:
  -Werror &amp;amp; -Werror=maybe-uninitialized

blackbox, libgtextutils, owncloud-client, qapt, wfmath:
  symbols in debian symbols file missing

cdftools, elkcode, flexpart, slepc:
  Cannot read module file '...' opened at (1),
  because it was created by a different version of GNU Fortran

etsf-io:
  GNU Fortran module version mismatch

faumachine:
  ./dyngen -p chip_intel_80286_op_ -o cpu_286_jit_op_gen.h.tmp
libqemu_gen_286_a-cpu_286_jit_op.o
  dyngen: Multiple return instructions in chip_intel_80286_op_ldub_kernel_T0_A0
  make[6]: *** [cpu_286_jit_op_gen.h] Error 1

cutter-testing-framework:
  unreproducible build failure

feel++, llvm-toolchain-3.3, llvm-toolchain-3.4:
  In file included from .../contrib/ginac/ginac/ptr.h:28:
  /usr/include/c++/4.9/cstddef:51:11: error: no member named 'max_align_t' in
the global namespace
    using ::max_align_t;
          ~~^
  1 error generated.

gccxml:
  error: '__builtin_va_arg_pack' was not declared in this scope

glob2.0:
  error: 'struct Game::BuildProject' is private

grail:
  ext/new_allocator.h:120:4: error: use of deleted function

iceweasel/firefox:
  error: failure memory model cannot be stronger than success memory model for
'__atomic_compare_exchange'

insighttoolkit4:
  The following tests FAILED:
        260 - itkShapedNeighborhoodIteratorTest (SEGFAULT)

isdnutils:
  error: assignment to expression with array type

itksnap:
    UserInterfaceLogic.h: At global scope:
    UserInterfaceLogic.h:799:8: error: 'enum UserInterfaceLogic::UIStateFlags'
is protected
     enum UIStateFlags {
          ^
  UserInterfaceLogic.cxx:171:58: error: within this context

kumofs:
  ../logic/rpc_server.h:135:62: note: in definition of macro 'RPC_REPLY_IMPL'
    void MOD::res_##NAME(basic_shared_session from, rpc::msgobj res, rpc::msgobj
err, \
                                                                ^
  gateway/mod_store.cc:275:16: error: redeclaration of 'kumo::gate::res_get res'
[-fpermissive]

lcalc, sofa-framework:
 error: redeclaration of '...' may not have default arguments [-fpermissive]

libapache2-mod-auth-openid, libopkele:
  error: invalid abstract return type '...'
  note:   because the following virtual functions are pure within

matanza:
  compiler memory hog

molds:
  error: no match for 'operator&amp;lt;&amp;lt;'

mysql-workbench:
  unknown build failure

postgresql-hll:
  error: inlining failed in call to always_inline 'uint32_t fmix(uint32_t)':
  function body can be overwritten at link time

rtfilter:
  error: inlining failed in call to always_inline '_mm_loaddup_pd.isra.1':
  target specific option mismatch

ppl:
  error: no type named 'difference_type' in 'class ...'
  error: no matching function for call to 'distance(...)'

supercollider:
  error: no matching function for call

sslsniff:
  error: redeclaration of 'std::string error' [-fpermissive]

tripwire:
  archive.cpp:889:28: error: redeclaration of 'eArchiveOpen e' [-fpermissive]
             eArchiveOpen e(strTempFile, errStr);
                            ^
  archive.cpp:886:29: note: 'eFSServices&amp;amp; e' previously declared here
         catch( eFSServices&amp;amp; e)

uhd:
  error: invalid use of qualified-name

&lt;/pre&gt;
















&lt;/body&gt;
&lt;/div&gt;&lt;hr class=&quot;rdb-page-break&quot; /&gt;&lt;div&gt;&lt;body&gt;



&lt;p&gt;This is the mail archive of the 
&lt;tt&gt;gcc@gcc.gnu.org&lt;/tt&gt;
mailing list for the &lt;a href=&quot;http://gcc.gnu.org/&quot;&gt;GCC project&lt;/a&gt;.






&lt;/p&gt;









&lt;ul&gt;
&lt;li&gt;&lt;em&gt;From&lt;/em&gt;: Duncan Sands &amp;lt;baldrick at free dot fr&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;To&lt;/em&gt;: gcc at gcc dot gnu dot org&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Date&lt;/em&gt;: Fri, 24 Jan 2014 11:14:52 +0100&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Subject&lt;/em&gt;: Re: clang vs free software&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Authentication-results&lt;/em&gt;: sourceware.org; auth=none&lt;/li&gt;
&lt;li&gt;&lt;em&gt;References&lt;/em&gt;: &amp;lt;CAJnXXoi2MLpZWxOxknR=mNR91JdZcHrKRsqYZSWY373fvwxObg at mail dot gmail dot com&amp;gt; &amp;lt;87eh439w1n dot fsf at uwakimon dot sk dot tsukuba dot ac dot jp&amp;gt; &amp;lt;CAJnXXojjSAWL8cqZp0X16xa81R73huywtTS90p6O3CpRaPOiDQ at mail dot gmail dot com&amp;gt; &amp;lt;jwvwqhu8zcg dot fsf-monnier+emacs at gnu dot org&amp;gt; &amp;lt;87ha8yqvup dot fsf at engster dot org&amp;gt; &amp;lt;E1W5cXI-0000j4-8x at fencepost dot gnu dot org&amp;gt; &amp;lt;CAJnXXoiuzZhjDGpvXY7psee=+bXn1rB+GdELYP0FS0CuWPqYeQ at mail dot gmail dot com&amp;gt; &amp;lt;E1W6HwP-0001WU-Tg at fencepost dot gnu dot org&amp;gt; &amp;lt;87r47zezcc dot fsf at fencepost dot gnu dot org&amp;gt; &amp;lt;m2eh3ykc3y dot fsf at gmail dot com&amp;gt; &amp;lt;20140123174934 dot GA10933 at thyrsus dot com&amp;gt; &amp;lt;CABu31nMSPdsGU-sAcO_HnFRetqQDgk5fQ3R12aYA0aqTvgdx+A at mail dot gmail dot com&amp;gt; &amp;lt;8E23EFFC-88C3-48BE-97AB-77207DA32499 at apple dot com&amp;gt; &amp;lt;52E1F170 dot 603 at redhat dot com&amp;gt;&lt;/li&gt;
&lt;/ul&gt;





&lt;pre&gt;
Hi Vladimir,
&lt;/pre&gt;&lt;blockquote&gt;&lt;pre&gt;
o Comparing LLVM and GCC on Fortran benchmarks.  LLVM has no fortran FE and just
quietly call system GCC.  So comparison of LLVM and GCC on Fortran benchmarks
means comparison of system GCC and a given GCC.
&lt;/pre&gt;&lt;/blockquote&gt;&lt;tt&gt;a few people are working on LLVM based Fortran compilers.  I'm not sure how far 
&lt;/tt&gt;&lt;tt&gt;they got though.  I think the one farthest along is this one:
&lt;/tt&gt;&lt;pre&gt;
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.com/hfinkel/lfort/&quot;&gt;https://github.com/hfinkel/lfort/&lt;/a&gt;
There is also:
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.com/isanbard/flang/&quot;&gt;https://github.com/isanbard/flang/&lt;/a&gt;
&lt;/pre&gt;&lt;tt&gt;Of course you can always cheat and use the GCC Fortran front-end, using the 
&lt;/tt&gt;&lt;tt&gt;dragonegg plugin bridging it to LLVM, but as I'm not maintaining dragonegg any 
&lt;/tt&gt;&lt;tt&gt;more (no time) this solution is likely to bitrot fast unless someone else picks 
&lt;/tt&gt;&lt;tt&gt;up the project.
&lt;/tt&gt;&lt;pre&gt;

Best wishes, Duncan.

&lt;/pre&gt;
















&lt;/body&gt;
&lt;/div&gt;&lt;hr class=&quot;rdb-page-break&quot; /&gt;&lt;div&gt;&lt;body&gt;



&lt;p&gt;This is the mail archive of the 
&lt;tt&gt;gcc@gcc.gnu.org&lt;/tt&gt;
mailing list for the &lt;a href=&quot;http://gcc.gnu.org/&quot;&gt;GCC project&lt;/a&gt;.






&lt;/p&gt;









&lt;ul&gt;
&lt;li&gt;&lt;em&gt;From&lt;/em&gt;: Richard Sandiford &amp;lt;rdsandiford at googlemail dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;To&lt;/em&gt;: Paulo Matos &amp;lt;pmatos at broadcom dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Cc&lt;/em&gt;: &quot;gcc\ at gcc dot gnu dot org&quot; &amp;lt;gcc at gcc dot gnu dot org&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Date&lt;/em&gt;: Fri, 24 Jan 2014 10:46:12 +0000&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Subject&lt;/em&gt;: Re: ICE in trunk due to MEM with address in vector mode&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Authentication-results&lt;/em&gt;: sourceware.org; auth=none&lt;/li&gt;
&lt;li&gt;&lt;em&gt;References&lt;/em&gt;: &amp;lt;19EB96622A777C4AB91610E763265F463EED53 at SJEXCHMB14 dot corp dot ad dot broadcom dot com&amp;gt;&lt;/li&gt;
&lt;/ul&gt;





&lt;pre&gt;Paulo Matos &amp;lt;pmatos@broadcom.com&amp;gt; writes:
&amp;gt; Hello,
&amp;gt;
&amp;gt; I have found a strange case of an ICE due to a MEM with an address
&amp;gt; with vector mode.

AFAIK that isn't supported.  Addresses are assumed to be MODE_INT or
MODE_PARTIAL_INT.  Hopefully someone will correct me if this has changed
without me noticing it.

Is this for some kind of gather load?  I think an address like that
would have to be mode-dependent anyway, since the number of units
in the MEM mode and the address mode would need to match.

Thanks,
Richard

&lt;/pre&gt;

















&lt;/body&gt;
&lt;/div&gt;&lt;hr class=&quot;rdb-page-break&quot; /&gt;&lt;div&gt;&lt;body&gt;



&lt;p&gt;This is the mail archive of the 
&lt;tt&gt;gcc@gcc.gnu.org&lt;/tt&gt;
mailing list for the &lt;a href=&quot;http://gcc.gnu.org/&quot;&gt;GCC project&lt;/a&gt;.






&lt;/p&gt;









&lt;ul&gt;
&lt;li&gt;&lt;em&gt;From&lt;/em&gt;: Jonathan Wakely &amp;lt;jwakely dot gcc at gmail dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;To&lt;/em&gt;: Matthias Klose &amp;lt;doko at ubuntu dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Cc&lt;/em&gt;: gcc Development &amp;lt;gcc at gcc dot gnu dot org&amp;gt;, Debian GCC Maintainers &amp;lt;debian-gcc at lists dot debian dot org&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Date&lt;/em&gt;: Fri, 24 Jan 2014 10:57:46 +0000&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Subject&lt;/em&gt;: Re: Debian test rebuild on x86_64-linux-gnu with trunk 20140118&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Authentication-results&lt;/em&gt;: sourceware.org; auth=none&lt;/li&gt;
&lt;li&gt;&lt;em&gt;References&lt;/em&gt;: &amp;lt;52E23B98 dot 20604 at ubuntu dot com&amp;gt;&lt;/li&gt;
&lt;/ul&gt;





&lt;pre&gt;On 24 January 2014 10:08, Matthias Klose wrote:
&amp;gt;
&amp;gt; 0ad, aria2, cupt, dssp, fish, fldigi, iverilog, mednafen, mkvtoolnix, mrs,
&amp;gt; nmap, v4l-utils:
&amp;gt;   error: converting to '...' from initializer list would use explicit
&amp;gt; constructor '...'

That one was a GCC problem, fixed by
&lt;a rel=&quot;nofollow&quot; href=&quot;http://gcc.gnu.org/viewcvs/gcc?view=revision&amp;amp;revision=206939&quot;&gt;http://gcc.gnu.org/viewcvs/gcc?view=revision&amp;amp;revision=206939&lt;/a&gt;

&lt;/pre&gt;
















&lt;/body&gt;
&lt;/div&gt;&lt;hr class=&quot;rdb-page-break&quot; /&gt;&lt;div&gt;&lt;body&gt;



&lt;p&gt;This is the mail archive of the 
&lt;tt&gt;gcc@gcc.gnu.org&lt;/tt&gt;
mailing list for the &lt;a href=&quot;http://gcc.gnu.org/&quot;&gt;GCC project&lt;/a&gt;.






&lt;/p&gt;









&lt;ul&gt;
&lt;li&gt;&lt;em&gt;From&lt;/em&gt;: Paulo Matos &amp;lt;pmatos at broadcom dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;To&lt;/em&gt;: Richard Sandiford &amp;lt;rdsandiford at googlemail dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Cc&lt;/em&gt;: &quot;gcc at gcc dot gnu dot org&quot; &amp;lt;gcc at gcc dot gnu dot org&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Date&lt;/em&gt;: Fri, 24 Jan 2014 11:54:20 +0000&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Subject&lt;/em&gt;: RE: ICE in trunk due to MEM with address in vector mode&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Authentication-results&lt;/em&gt;: sourceware.org; auth=none&lt;/li&gt;
&lt;li&gt;&lt;em&gt;References&lt;/em&gt;: &amp;lt;19EB96622A777C4AB91610E763265F463EED53 at SJEXCHMB14 dot corp dot ad dot broadcom dot com&amp;gt; &amp;lt;87zjmlr72j dot fsf at sandifor-thinkpad dot stglab dot manchester dot uk dot ibm dot com&amp;gt;&lt;/li&gt;
&lt;/ul&gt;





&lt;pre&gt;
&amp;gt; -----Original Message-----
&amp;gt; From: Richard Sandiford [&lt;a rel=&quot;nofollow&quot; href=&quot;mailto:rdsandiford@googlemail.com&quot;&gt;mailto:rdsandiford@googlemail.com&lt;/a&gt;]
&amp;gt; Sent: 24 January 2014 10:46
&amp;gt; To: Paulo Matos
&amp;gt; Cc: gcc@gcc.gnu.org
&amp;gt; Subject: Re: ICE in trunk due to MEM with address in vector mode
&amp;gt; 
&amp;gt; Paulo Matos &amp;lt;pmatos@broadcom.com&amp;gt; writes:
&amp;gt; &amp;gt; Hello,
&amp;gt; &amp;gt;
&amp;gt; &amp;gt; I have found a strange case of an ICE due to a MEM with an address
&amp;gt; &amp;gt; with vector mode.
&amp;gt; 
&amp;gt; AFAIK that isn't supported.  Addresses are assumed to be MODE_INT or
&amp;gt; MODE_PARTIAL_INT.  Hopefully someone will correct me if this has changed
&amp;gt; without me noticing it.
&amp;gt; 
&amp;gt; Is this for some kind of gather load?  I think an address like that
&amp;gt; would have to be mode-dependent anyway, since the number of units
&amp;gt; in the MEM mode and the address mode would need to match.
&amp;gt;

Thanks for your comment.
We have an instruction that loads two 32 bit values into a lower and upper parts of a 64bit register using a base register and a 64 bit register used as a double index.
So,
r1 &amp;lt;- [r0, r2] 
means:
low(r1) = [r0 + low(r2)]
high(r1) = [r0 + high(r2)]

In this case we use vector addresses. If it is indeed not allowed then I need another solution. Used to work well in 4.8 and before. In trunk it breaks, but works with the patch I included before.
Can't find anything in the documentation regarding this case so it would be good to make it clear one way or the other.

Paulo Matos

 
&amp;gt; Thanks,
&amp;gt; Richard
&lt;/pre&gt;

















&lt;/body&gt;
&lt;/div&gt;&lt;hr class=&quot;rdb-page-break&quot; /&gt;&lt;div&gt;&lt;body&gt;



&lt;p&gt;This is the mail archive of the 
&lt;tt&gt;gcc@gcc.gnu.org&lt;/tt&gt;
mailing list for the &lt;a href=&quot;http://gcc.gnu.org/&quot;&gt;GCC project&lt;/a&gt;.






&lt;/p&gt;









&lt;ul&gt;
&lt;li&gt;&lt;em&gt;From&lt;/em&gt;: Richard Sandiford &amp;lt;rdsandiford at googlemail dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;To&lt;/em&gt;: Paulo Matos &amp;lt;pmatos at broadcom dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Cc&lt;/em&gt;: &quot;gcc\ at gcc dot gnu dot org&quot; &amp;lt;gcc at gcc dot gnu dot org&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Date&lt;/em&gt;: Fri, 24 Jan 2014 12:20:54 +0000&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Subject&lt;/em&gt;: Re: ICE in trunk due to MEM with address in vector mode&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Authentication-results&lt;/em&gt;: sourceware.org; auth=none&lt;/li&gt;
&lt;li&gt;&lt;em&gt;References&lt;/em&gt;: &amp;lt;19EB96622A777C4AB91610E763265F463EED53 at SJEXCHMB14 dot corp dot ad dot broadcom dot com&amp;gt;	&amp;lt;87zjmlr72j dot fsf at sandifor-thinkpad dot stglab dot manchester dot uk dot ibm dot com&amp;gt;	&amp;lt;19EB96622A777C4AB91610E763265F463EF48B at SJEXCHMB14 dot corp dot ad dot broadcom dot com&amp;gt;&lt;/li&gt;
&lt;/ul&gt;





&lt;pre&gt;Paulo Matos &amp;lt;pmatos@broadcom.com&amp;gt; writes:
&amp;gt;&amp;gt; -----Original Message-----
&amp;gt;&amp;gt; From: Richard Sandiford [&lt;a rel=&quot;nofollow&quot; href=&quot;mailto:rdsandiford@googlemail.com&quot;&gt;mailto:rdsandiford@googlemail.com&lt;/a&gt;]
&amp;gt;&amp;gt; Sent: 24 January 2014 10:46
&amp;gt;&amp;gt; To: Paulo Matos
&amp;gt;&amp;gt; Cc: gcc@gcc.gnu.org
&amp;gt;&amp;gt; Subject: Re: ICE in trunk due to MEM with address in vector mode
&amp;gt;&amp;gt; 
&amp;gt;&amp;gt; Paulo Matos &amp;lt;pmatos@broadcom.com&amp;gt; writes:
&amp;gt;&amp;gt; &amp;gt; Hello,
&amp;gt;&amp;gt; &amp;gt;
&amp;gt;&amp;gt; &amp;gt; I have found a strange case of an ICE due to a MEM with an address
&amp;gt;&amp;gt; &amp;gt; with vector mode.
&amp;gt;&amp;gt; 
&amp;gt;&amp;gt; AFAIK that isn't supported.  Addresses are assumed to be MODE_INT or
&amp;gt;&amp;gt; MODE_PARTIAL_INT.  Hopefully someone will correct me if this has changed
&amp;gt;&amp;gt; without me noticing it.
&amp;gt;&amp;gt; 
&amp;gt;&amp;gt; Is this for some kind of gather load?  I think an address like that
&amp;gt;&amp;gt; would have to be mode-dependent anyway, since the number of units
&amp;gt;&amp;gt; in the MEM mode and the address mode would need to match.
&amp;gt;&amp;gt;
&amp;gt;
&amp;gt; Thanks for your comment.
&amp;gt; We have an instruction that loads two 32 bit values into a lower and
&amp;gt; upper parts of a 64bit register using a base register and a 64 bit
&amp;gt; register used as a double index.
&amp;gt; So,
&amp;gt; r1 &amp;lt;- [r0, r2] 
&amp;gt; means:
&amp;gt; low(r1) = [r0 + low(r2)]
&amp;gt; high(r1) = [r0 + high(r2)]
&amp;gt;
&amp;gt; In this case we use vector addresses. If it is indeed not allowed then I
&amp;gt; need another solution. Used to work well in 4.8 and before. In trunk it
&amp;gt; breaks, but works with the patch I included before.

Just in case: the point I was trying to make in the second paragraph
was that the code in the patch only triggers (as you say) because the
address isn't seen as mode-dependent.  But this kind of address does
look mode-dependent to me, since it only works for MEM modes that have
the same number of elements as the index vector.  So this does sound
like a case where mode_dependent_address_p ought to return true.

If we do support vector addresses than I think the right fix is to
check VECTOR_MODE_P there.

Thanks,
Richard

&lt;/pre&gt;

















&lt;/body&gt;
&lt;/div&gt;&lt;hr class=&quot;rdb-page-break&quot; /&gt;&lt;div&gt;&lt;body&gt;



&lt;p&gt;This is the mail archive of the 
&lt;tt&gt;gcc@gcc.gnu.org&lt;/tt&gt;
mailing list for the &lt;a href=&quot;http://gcc.gnu.org/&quot;&gt;GCC project&lt;/a&gt;.






&lt;/p&gt;









&lt;ul&gt;
&lt;li&gt;&lt;em&gt;From&lt;/em&gt;: Jan de Haan &amp;lt;haan dot j dot de at gmail dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;To&lt;/em&gt;: gcc at gcc dot gnu dot org&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Date&lt;/em&gt;: Fri, 24 Jan 2014 13:35:59 +0100&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Subject&lt;/em&gt;: compiling multi file project&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Authentication-results&lt;/em&gt;: sourceware.org; auth=none&lt;/li&gt;
&lt;/ul&gt;





&lt;pre&gt;Hi All,

    banging my head, exhausted google, don't know where I make the mistake,
can somebody please tell me the errors of my ways?

Project layout:

projectheader.h
   #ifndef PROJECTHEADER
   #define PROJECTHEADER
   #include &amp;lt;projectwidesystemheaders&amp;gt;
   #include &quot;class1header&quot;
main.cpp
   #include &quot;projectheader&quot;
class1header.h
   #ifndef CLASS1HEADER
   #define CLASS1HEADER
   #include &amp;lt;class1specificsystemheaders&amp;gt;
   #include &amp;lt;tr1/memory&amp;gt;
   typedef shared_ptr&amp;lt;Class1&amp;gt; Class1Ptr;
class1source.cpp
   #include &quot;class1header&quot;
   definitions

A sound and logical layout, as far as I know.

Problem: class1source.cpp fails to compile on it's header with
&quot;error: &amp;#x2018;shared_ptr&amp;#x2019; does not name a type&quot;

What is wrong with my layout (because including the projectheader in
class1source compiles) and what is the best thing I can do about it?

Sincerely,

Jan de Haan.

-- 
&quot;Piracy is simply demand where supply does not exist.&quot;

&lt;/pre&gt;




&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Follow-Ups&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a name=&quot;00244&quot; href=&quot;http://gcc.gnu.org/ml/gcc/2014-01/msg00244.html&quot;&gt;Re: compiling multi file project&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;











&lt;/body&gt;
&lt;/div&gt;&lt;hr class=&quot;rdb-page-break&quot; /&gt;&lt;div&gt;&lt;body&gt;



&lt;p&gt;This is the mail archive of the 
&lt;tt&gt;gcc@gcc.gnu.org&lt;/tt&gt;
mailing list for the &lt;a href=&quot;http://gcc.gnu.org/&quot;&gt;GCC project&lt;/a&gt;.






&lt;/p&gt;









&lt;ul&gt;
&lt;li&gt;&lt;em&gt;From&lt;/em&gt;: Marc Glisse &amp;lt;marc dot glisse at inria dot fr&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;To&lt;/em&gt;: Jan de Haan &amp;lt;haan dot j dot de at gmail dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Cc&lt;/em&gt;: gcc at gcc dot gnu dot org&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Date&lt;/em&gt;: Fri, 24 Jan 2014 13:42:35 +0100 (CET)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Subject&lt;/em&gt;: Re: compiling multi file project&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Authentication-results&lt;/em&gt;: sourceware.org; auth=none&lt;/li&gt;
&lt;li&gt;&lt;em&gt;References&lt;/em&gt;: &amp;lt;CAL488o+SoTaqSjwsX_PLbhCTqq9WTKbVjLqxe3WxuKroUyEHUg at mail dot gmail dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Reply-to&lt;/em&gt;: gcc-help at gcc dot gnu dot org&lt;/li&gt;
&lt;/ul&gt;





&lt;tt&gt;Wrong list, please send any follow-ups to gcc-help ONLY, or better yet to 
&lt;/tt&gt;&lt;tt&gt;some C++ forum wherever since this has little to do with gcc in 
&lt;/tt&gt;&lt;tt&gt;particular.
&lt;/tt&gt;&lt;pre&gt;

On Fri, 24 Jan 2014, Jan de Haan wrote:

&lt;/pre&gt;&lt;blockquote&gt;&lt;pre&gt;
   banging my head, exhausted google, don't know where I make the mistake,
can somebody please tell me the errors of my ways?

Project layout:
&lt;/pre&gt;&lt;/blockquote&gt;&lt;pre&gt;

Irrelevant.

&lt;/pre&gt;&lt;blockquote&gt;&lt;pre&gt;
Problem: class1source.cpp fails to compile on it's header with
&quot;error: &amp;#x2BD;shared_ptr&amp;#x2BC; does not name a type&quot;
&lt;/pre&gt;&lt;/blockquote&gt;&lt;pre&gt;

Have you heard of namespaces?

--
Marc Glisse

&lt;/pre&gt;






&lt;ul&gt;&lt;li&gt;&lt;strong&gt;References&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a name=&quot;00243&quot; href=&quot;http://gcc.gnu.org/ml/gcc/2014-01/msg00243.html&quot;&gt;compiling multi file project&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;









&lt;/body&gt;
&lt;/div&gt;&lt;hr class=&quot;rdb-page-break&quot; /&gt;&lt;div&gt;&lt;body&gt;



&lt;p&gt;This is the mail archive of the 
&lt;tt&gt;gcc@gcc.gnu.org&lt;/tt&gt;
mailing list for the &lt;a href=&quot;http://gcc.gnu.org/&quot;&gt;GCC project&lt;/a&gt;.






&lt;/p&gt;









&lt;ul&gt;
&lt;li&gt;&lt;em&gt;From&lt;/em&gt;: Jonathan Wakely &amp;lt;jwakely dot gcc at gmail dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;To&lt;/em&gt;: Matthias Klose &amp;lt;doko at ubuntu dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Cc&lt;/em&gt;: gcc Development &amp;lt;gcc at gcc dot gnu dot org&amp;gt;, Debian GCC Maintainers &amp;lt;debian-gcc at lists dot debian dot org&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Date&lt;/em&gt;: Fri, 24 Jan 2014 12:44:39 +0000&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Subject&lt;/em&gt;: Re: Debian test rebuild on x86_64-linux-gnu with trunk 20140118&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Authentication-results&lt;/em&gt;: sourceware.org; auth=none&lt;/li&gt;
&lt;li&gt;&lt;em&gt;References&lt;/em&gt;: &amp;lt;52E23B98 dot 20604 at ubuntu dot com&amp;gt;&lt;/li&gt;
&lt;/ul&gt;





&lt;pre&gt;On 24 January 2014 10:08, Matthias Klose wrote:
&amp;gt;
&amp;gt; brainparty, igstk:
&amp;gt;   error: redeclaration of '...' may not have default arguments [-fpermissive]

G++ was fixed to reject this, the code is invalid.

&amp;gt;
&amp;gt; apron, cadabra:
&amp;gt;   error: 'ptrdiff_t' does not name a type

These should be qualifying the type as std::ptrdiff_t.

&amp;gt; grail:
&amp;gt;   ext/new_allocator.h:120:4: error: use of deleted function

That's another bug I fixed yesterday:
&lt;a rel=&quot;nofollow&quot; href=&quot;http://gcc.gnu.org/viewcvs?rev=206994&amp;amp;root=gcc&amp;amp;view=rev&quot;&gt;http://gcc.gnu.org/viewcvs?rev=206994&amp;amp;root=gcc&amp;amp;view=rev&lt;/a&gt;


&amp;gt; lcalc, sofa-framework:
&amp;gt;  error: redeclaration of '...' may not have default arguments [-fpermissive]

Looks like the same issue as brainparty and isgtk.

&amp;gt; ppl:
&amp;gt;   error: no type named 'difference_type' in 'class ...'
&amp;gt;   error: no matching function for call to 'distance(...)'

The root cause is using ptrdiff_t not std::ptrdiff_t again.

&amp;gt; supercollider:
&amp;gt;   error: no matching function for call

I thought that might be my fault so looked into it, but it's an
upstream bug in SuperCollider, fixed in the latest release. It only
used to work with GCC 4.8 because our std::map was non-conforming in
exactly the right way for supercollider's non-conforming allocator to
do the right thing.

&amp;gt; sslsniff:
&amp;gt;   error: redeclaration of 'std::string error' [-fpermissive]
&amp;gt;
&amp;gt; tripwire:
&amp;gt;   archive.cpp:889:28: error: redeclaration of 'eArchiveOpen e' [-fpermissive]
&amp;gt;              eArchiveOpen e(strTempFile, errStr);
&amp;gt;                             ^
&amp;gt;   archive.cpp:886:29: note: 'eFSServices&amp;amp; e' previously declared here
&amp;gt;          catch( eFSServices&amp;amp; e)

The sslsniff and tripwire failures are the same issue, G++ no longer
allows this:

try {
} catch (int var) {
  int var;
}


So several cases are real bugs that G++ now catches, and some were
known libstdc++ regressions that were fixed yesterday.

&lt;/pre&gt;
















&lt;/body&gt;
&lt;/div&gt;&lt;hr class=&quot;rdb-page-break&quot; /&gt;&lt;div&gt;&lt;body&gt;



&lt;p&gt;This is the mail archive of the 
&lt;tt&gt;gcc@gcc.gnu.org&lt;/tt&gt;
mailing list for the &lt;a href=&quot;http://gcc.gnu.org/&quot;&gt;GCC project&lt;/a&gt;.






&lt;/p&gt;









&lt;ul&gt;
&lt;li&gt;&lt;em&gt;From&lt;/em&gt;: kenner at vlsi1 dot ultra dot nyu dot edu (Richard Kenner)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;To&lt;/em&gt;: iant at google dot com&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Cc&lt;/em&gt;: ebotcazou at libertysurf dot fr, esr at thyrsus dot com, gcc at gcc dot gnu dot org,    greg dot casamento at gmail dot com, jwakely dot gcc at gmail dot com,    stevenb dot gcc at gmail dot com&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Date&lt;/em&gt;: Fri, 24 Jan 2014 07:49:29 EST&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Subject&lt;/em&gt;: Re: Don't shoot the messenger&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Authentication-results&lt;/em&gt;: sourceware.org; auth=none&lt;/li&gt;
&lt;li&gt;&lt;em&gt;References&lt;/em&gt;: &amp;lt;20140123212747 dot 6FE32380525 at snark dot thyrsus dot com&amp;gt;    &amp;lt;CAH6eHdQoUtBC5kXWW5KDTBr=8pE8s258sck+3E9Me_ybU+atkA at mail dot gmail dot com&amp;gt;    &amp;lt;9CE797A6-7F95-435A-8F5D-EF93B9DA165A at gmail dot com&amp;gt;    &amp;lt;1931157 dot XNBpQ8mPhG at polaris&amp;gt;    &amp;lt;7E84FF6E-CBB4-4217-B14F-8867BCCDBE56 at gmail dot com&amp;gt;    &amp;lt;CAKOQZ8x36ZR7FiNn=eauSpgrbud9idjUWhnT9SVOYr4rjA9OhA at mail dot gmail dot com&amp;gt;&lt;/li&gt;
&lt;/ul&gt;





&lt;pre&gt;&amp;gt; To the extent that clang/LLVM and GCC are fighting, which is not
&amp;gt; really the case, then I think it makes sense for GCC to focus on its
&amp;gt; strengths, not its weaknesses.  Objective C is not a strength.  I'm
&amp;gt; not sure it makes sense for the GCC project to encourage its limited
&amp;gt; volunteer resources to work on it.

I agree.  Competition is a good thing.  But it's best when it's not
&quot;head to head&quot;.  Instead each should have what it's best at.

&lt;/pre&gt;
















&lt;/body&gt;
&lt;/div&gt;
</description>
<title>
Richard Stallman - Re: clang vs free software
</title>
</item>
<item>
<link>
https://gist.github.com/orls/8596094
</link>
<description>
&lt;div&gt;&lt;article class=&quot;markdown-body js-file &quot;&gt;
        &lt;h2&gt;
&lt;a name=&quot;1&quot; class=&quot;anchor&quot; href=&quot;https://gist.github.com/orls/8596094#1&quot;&gt;&lt;/a&gt;1&lt;/h2&gt;

&lt;div class=&quot;highlight highlight-cpp&quot;&gt;&lt;pre&gt;    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;phoenix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;phoenix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key_comp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://www.imdb.com/title/tt0373889&quot;&gt;http://www.imdb.com/title/tt0373889&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
&lt;a name=&quot;2&quot; class=&quot;anchor&quot; href=&quot;https://gist.github.com/orls/8596094#2&quot;&gt;&lt;/a&gt;2&lt;/h2&gt;

&lt;div class=&quot;highlight highlight-cpp&quot;&gt;&lt;pre&gt;    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Ryan&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fwrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://www.imdb.com/title/tt0120815&quot;&gt;http://www.imdb.com/title/tt0120815&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
&lt;a name=&quot;3&quot; class=&quot;anchor&quot; href=&quot;https://gist.github.com/orls/8596094#3&quot;&gt;&lt;/a&gt;3&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;/lib/modules/2.6.32/kernel/taxi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;http://www.imdb.com/title/tt0075314&quot;&gt;http://www.imdb.com/title/tt0075314&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
&lt;a name=&quot;4&quot; class=&quot;anchor&quot; href=&quot;https://gist.github.com/orls/8596094#4&quot;&gt;&lt;/a&gt;4&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;    Metres(1609.344).setColour(0x00ff00);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;http://www.imdb.com/title/tt0120689/&quot;&gt;http://www.imdb.com/title/tt0120689/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
&lt;a name=&quot;5&quot; class=&quot;anchor&quot; href=&quot;https://gist.github.com/orls/8596094#5&quot;&gt;&lt;/a&gt;5&lt;/h2&gt;

&lt;div class=&quot;highlight highlight-cpp&quot;&gt;&lt;pre&gt;    &lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dawn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://www.imdb.com/title/tt0363547&quot;&gt;http://www.imdb.com/title/tt0363547&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
&lt;a name=&quot;6&quot; class=&quot;anchor&quot; href=&quot;https://gist.github.com/orls/8596094#6&quot;&gt;&lt;/a&gt;6&lt;/h2&gt;

&lt;div class=&quot;highlight highlight-cpp&quot;&gt;&lt;pre&gt;    &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Dusk&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Dawn&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://www.imdb.com/title/tt0116367&quot;&gt;http://www.imdb.com/title/tt0116367&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
&lt;a name=&quot;7&quot; class=&quot;anchor&quot; href=&quot;https://gist.github.com/orls/8596094#7&quot;&gt;&lt;/a&gt;7&lt;/h2&gt;

&lt;div class=&quot;highlight highlight-javascript&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'e'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://www.imdb.com/title/tt0088323/&quot;&gt;http://www.imdb.com/title/tt0088323/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
&lt;a name=&quot;8&quot; class=&quot;anchor&quot; href=&quot;https://gist.github.com/orls/8596094#8&quot;&gt;&lt;/a&gt;8&lt;/h2&gt;



&lt;p&gt;&lt;a href=&quot;http://www.imdb.com/title/tt0357413/&quot;&gt;http://www.imdb.com/title/tt0357413/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
&lt;a name=&quot;9&quot; class=&quot;anchor&quot; href=&quot;https://gist.github.com/orls/8596094#9&quot;&gt;&lt;/a&gt;9&lt;/h2&gt;

&lt;div class=&quot;highlight highlight-bash&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;ANSI_COLOUR in &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;0..7&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;10
    &lt;span class=&quot;nv&quot;&gt;FOUND&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;$ANSI_COLOUR&quot;&lt;/span&gt; -eq 1 &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;FOUND&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' &amp;lt;- Found it'&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;M_NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;date -jnu -f &lt;span class=&quot;s1&quot;&gt;'%m'&lt;/span&gt; +&lt;span class=&quot;s1&quot;&gt;'%B'&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$M&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&quot;\033[3${ANSI_COLOUR}m $M_NAME \033[0m$FOUND&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://www.imdb.com/title/tt0099810/&quot;&gt;http://www.imdb.com/title/tt0099810/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
&lt;a name=&quot;10&quot; class=&quot;anchor&quot; href=&quot;https://gist.github.com/orls/8596094#10&quot;&gt;&lt;/a&gt;10&lt;/h2&gt;

&lt;div class=&quot;highlight highlight-python&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;mind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;spots&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sunshine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sunshine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://www.imdb.com/title/tt0338013/&quot;&gt;http://www.imdb.com/title/tt0338013/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
&lt;a name=&quot;11&quot; class=&quot;anchor&quot; href=&quot;https://gist.github.com/orls/8596094#11&quot;&gt;&lt;/a&gt;11&lt;/h2&gt;

&lt;div class=&quot;highlight highlight-scala&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nc&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;321&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;33&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;33&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;89&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;98&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;55&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zipWithIndex&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://www.imdb.com/title/tt0416449/&quot;&gt;http://www.imdb.com/title/tt0416449/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
&lt;a name=&quot;12&quot; class=&quot;anchor&quot; href=&quot;https://gist.github.com/orls/8596094#12&quot;&gt;&lt;/a&gt;12&lt;/h2&gt;

&lt;div class=&quot;highlight highlight-python&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;correct_illumination&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dusk&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sunset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sunrise&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dawn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://www.imdb.com/title/tt1099212/&quot;&gt;http://www.imdb.com/title/tt1099212/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
&lt;a name=&quot;13&quot; class=&quot;anchor&quot; href=&quot;https://gist.github.com/orls/8596094#13&quot;&gt;&lt;/a&gt;13&lt;/h2&gt;

&lt;div class=&quot;highlight highlight-python&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;string&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;translate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;tha      &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maketrans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ABCDEFGHIJKLMabcdefghijklmNOPQRSTUVWXYZnopqrstuvwxyz&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;NOPQRSTUVWXYZnopqrstuvwxyzABCDEFGHIJKLMabcdefghijklm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rstrip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://www.imdb.com/title/tt0095705/&quot;&gt;http://www.imdb.com/title/tt0095705/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
&lt;a name=&quot;14&quot; class=&quot;anchor&quot; href=&quot;https://gist.github.com/orls/8596094#14&quot;&gt;&lt;/a&gt;14&lt;/h2&gt;

&lt;div class=&quot;highlight highlight-python&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;string&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timedelta&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timedelta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;days&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ascii_letters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://www.imdb.com/title/tt0289043/&quot;&gt;http://www.imdb.com/title/tt0289043/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
&lt;a name=&quot;15&quot; class=&quot;anchor&quot; href=&quot;https://gist.github.com/orls/8596094#15&quot;&gt;&lt;/a&gt;15&lt;/h2&gt;

&lt;div class=&quot;highlight highlight-javascript&quot;&gt;&lt;pre&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Apocalypse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;schedule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://www.imdb.com/title/tt0078788/&quot;&gt;http://www.imdb.com/title/tt0078788/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
&lt;a name=&quot;16&quot; class=&quot;anchor&quot; href=&quot;https://gist.github.com/orls/8596094#16&quot;&gt;&lt;/a&gt;16&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$('*')[4]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;http://www.imdb.com/title/tt0119116/&quot;&gt;http://www.imdb.com/title/tt0119116/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
&lt;a name=&quot;17&quot; class=&quot;anchor&quot; href=&quot;https://gist.github.com/orls/8596094#17&quot;&gt;&lt;/a&gt;17&lt;/h2&gt;

&lt;div class=&quot;highlight highlight-python&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*=-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://www.imdb.com/title/tt0138704&quot;&gt;http://www.imdb.com/title/tt0138704&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
&lt;a name=&quot;18&quot; class=&quot;anchor&quot; href=&quot;https://gist.github.com/orls/8596094#18&quot;&gt;&lt;/a&gt;18&lt;/h2&gt;

&lt;div class=&quot;highlight highlight-php&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;die&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;substr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;array_filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;get_declared_classes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;preg_match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/Phar./'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://www.imdb.com/title/tt0095016&quot;&gt;http://www.imdb.com/title/tt0095016&lt;/a&gt;&lt;/p&gt;
      &lt;/article&gt;
    &lt;/div&gt;
</description>
<title>
Try to work out the movie title based on the code
</title>
</item>
<item>
<author>
Sarah Perez
</author>
<link>
http://techcrunch.com/2014/01/24/gmail-glitch-is-causing-thousands-of-emails-to-be-sent-to-one-mans-hotmail-account/
</link>
<description>
&lt;div&gt;&lt;div class=&quot;article-entry text&quot;&gt;


&lt;img src=&quot;http://tctechcrunch2011.files.wordpress.com/2014/01/gmail-dead.jpg?w=400&quot; class=&quot;article-img-feature&quot;&gt;&lt;p&gt;David S. Peck is getting a lot of emails. In a glitch possibly related to the &lt;a href=&quot;http://techcrunch.com/2014/01/24/gmail-goes-down-across-the-world/&quot;&gt;massive Gmail outage&lt;/a&gt; underway right now, there&amp;#x2019;s an odd bug in Google search which is pointing users directly to his personal email address. The address appears in a &amp;#x201C;Compose&amp;#x201D; window that pops up when the top search result for Gmail is clicked.&amp;#xA0;Yes, it&amp;#x2019;s bizarre. Very, very bizarre.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Several of us at TechCrunch have been able to duplicate this bug, first brought to our attention by a tipster. Given whatever is going on with Gmail right now, your mileage, as they say, may vary.&amp;#xA0;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;To reproduce the bug, first search for keyword &amp;#x201C;gmail&amp;#x201D; on Google. The top organic search result says &amp;#x201C;Gmail &amp;#x2013; Email from Google,&amp;#x201D; and beneath that are two other sub-links, one that says &amp;#x201C;Email&amp;#x201D; on the left, and the other which reads &amp;#x201C;Gmail &amp;#x2013; Google.&amp;#x201D; Click the one on the left (where the text reads &amp;#x201C;10+ GB of storage, less spam, and mobile access. Gmail is email &amp;#x2026;&amp;#x201D;)&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-large wp-image-946375&quot; alt=&quot;gmail - Google Search&quot; src=&quot;http://tctechcrunch2011.files.wordpress.com/2014/01/gmail-google-search.png?w=640&amp;amp;h=242&quot; width=&quot;640&quot;&gt;&lt;/p&gt;
&lt;p&gt;A Gmail compose window appears, and the email address dsp559 at hotmail &amp;#x2013; which none of us have in our address books &amp;#x2013; is automatically filled in.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-large wp-image-946376&quot; alt=&quot;Screen Shot 2014-01-24 at 3.07.49 PM&quot; src=&quot;http://tctechcrunch2011.files.wordpress.com/2014/01/screen-shot-2014-01-24-at-3-07-49-pm.png?w=640&amp;amp;h=379&quot; width=&quot;640&quot;&gt;&lt;/p&gt;
&lt;p&gt;Another Google search surfaces who this address belongs to: one David S. Peck of Fresno, California. We even found his resume.&lt;/p&gt;
&lt;p&gt;We spoke to Mr. Peck on the phone just now, and he says he&amp;#x2019;s been receiving thousands of emails, the majority of which are blank.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&amp;#x201C;I&amp;#x2019;ve been getting thousands of no-subject, blank emails,&amp;#x201D; he says. &amp;#x201C;500 of them come every hour, I can&amp;#x2019;t stop them.&amp;#x201D; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The issue actually started yesterday, he says, and he contacted Hotmail support this morning to try to get help. Ironically, he asked them to contact him at his alternate email address, which is Gmail. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Peck will not see their reply anytime soon, it seems. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The Hotmail address is his main account, and he&amp;#x2019;s now missing his important emails while under this deluge. &amp;#x201C;They&amp;#x2019;re coming so fast, I want to stop them. I deleted everything last night and woke up this morning and had 1,900 new emails&amp;#x201D; he says. &amp;#x201C;Only two of them were emails I cared about,&amp;#x201D; he says.&amp;#xA0;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Though most of the emails are blank, a few say things like &amp;#x201C;who is this?,&amp;#x201D; or &amp;#x201C;why are you sending me these emails?,&amp;#x201D; something which has Mr. Peck concerned his address has been used in a hack or attack of some sort. Most of those who have written something to him appear to be foreign, based on their names.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;We&amp;#x2019;re trying to reach someone at Google about this, and will update with more as we have it.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Update: This article and headline were edited to clarify this is a glitch and related to Gmail, but until we can confirm with Google we won&amp;#x2019;t assume it&amp;#x2019;s the &lt;em&gt;same&lt;/em&gt; glitch that caused the Gmail outage or is related to that outage. A variation of this bug was spotted earlier,&amp;#xA0;according to &lt;a target=&quot;_blank&quot; href=&quot;http://searchengineland.com/searching-for-gmail-in-google-links-you-to-compose-a-message-to-a-google-apps-user-182099&quot;&gt;Search Engine Land&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Since publication, we&amp;#x2019;ve received tips that a number of other users may be affected in similar ways as Mr. Peck &amp;#x2013; that is, it&amp;#x2019;s their address that is appearing when the link is clicked by Google searchers.&lt;/p&gt;
&lt;p&gt;UPDATE, 6 PM ET: A Google spokesperson provided the following:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&amp;#x201C;Due to a technical glitch, some email addresses on public webpages appeared too prominently in search results. We&amp;#x2019;ve fixed the issue and are sorry for any inconvenience caused.&amp;#x201D;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Google has also confirmed that today&amp;#x2019;s glitch was not related to today&amp;#x2019;s Gmail outage.&lt;/p&gt;

&lt;h2&gt;More Top Stories From TechCrunch&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://techcrunch.com/2014/01/24/gmail-goes-down-across-the-world/&quot;&gt;Gmail And Google+ Go Down Across The World, Service Returns After Roughly 50 Minutes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://techcrunch.com/2014/01/24/gmail-goes-down-across-the-world/&quot;&gt;&lt;img class=&quot;size-large wp-image-946489&quot; alt=&quot;gmail-globe&quot; src=&quot;http://tctechcrunch2011.files.wordpress.com/2014/01/gmail-globe1.jpg?w=640&amp;amp;h=480&quot; width=&quot;640&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://techcrunch.com/2014/01/24/talk-about-timing-googles-reliability-team-sat-down-for-an-ama-right-as-gmail-exploded/?ncid=fb&quot;&gt;Talk About Timing: Google&amp;#x2019;s Reliability Team Sat Down For An AMA Right Before Gmail Exploded&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://techcrunch.com/2014/01/24/talk-about-timing-googles-reliability-team-sat-down-for-an-ama-right-as-gmail-exploded/?ncid=fb&quot;&gt;&lt;img alt=&quot;gmail-fire&quot; src=&quot;http://tctechcrunch2011.files.wordpress.com/2014/01/gmail-fire.jpg?w=640&amp;amp;h=480&quot; width=&quot;640&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://techcrunch.com/2014/01/23/facebook-losing-users-princeton-losing-credibility/&quot;&gt;Facebook Hilariously Debunks Princeton Study Saying It Will Lose 80% Of Users&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://techcrunch.com/2014/01/23/facebook-losing-users-princeton-losing-credibility/&quot;&gt;&lt;img alt=&quot;science_by_egophiliac-d4n2gxa&quot; src=&quot;http://tctechcrunch2011.files.wordpress.com/2014/01/science_by_egophiliac-d4n2gxa.png?w=640&amp;amp;h=303&quot; width=&quot;640&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://techcrunch.com/2014/01/23/snowden-answers-our-burning-data-collection-question-whats-the-worst-that-could-happen/&quot;&gt;Snowden Answers Our Burning Data Collection Question: What&amp;#x2019;s The Worst That Could Happen?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://techcrunch.com/2014/01/23/snowden-answers-our-burning-data-collection-question-whats-the-worst-that-could-happen/&quot;&gt;&lt;img alt=&quot;snowden_web&quot; src=&quot;http://tctechcrunch2011.files.wordpress.com/2014/01/snowden_web.jpg?w=640&amp;amp;h=360&quot; width=&quot;640&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://techcrunch.com/2014/01/23/apple-is-working-on-two-larger-iphones-per-wsj/&quot;&gt;Apple Said To Be Working On Two Larger iPhones&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://techcrunch.com/2014/01/23/apple-is-working-on-two-larger-iphones-per-wsj/&quot;&gt;&lt;img alt=&quot;3-dog-costume&quot; src=&quot;http://tctechcrunch2011.files.wordpress.com/2014/01/3-dog-costume.jpg?w=531&amp;amp;h=411&quot; width=&quot;531&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://techcrunch.com/2014/01/23/google-awarded-patent-for-free-rides-to-advertisers-locations/&quot;&gt;Google Awarded Patent For Free Rides To Advertisers&amp;#x2019; Locations&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://techcrunch.com/2014/01/23/google-awarded-patent-for-free-rides-to-advertisers-locations/&quot;&gt;&lt;img alt=&quot;Screen Shot 2014-01-24 at 12.01.57 PM 1&quot; src=&quot;http://tctechcrunch2011.files.wordpress.com/2014/01/screen-shot-2014-01-24-at-12-01-57-pm-1.png?w=640&amp;amp;h=316&quot; width=&quot;640&quot;&gt;&lt;/a&gt;&lt;/p&gt;


								
							&lt;/div&gt;


&lt;/div&gt;
</description>
<title>
Gmail Glitch Is Causing 1000s Of Emails To Be Sent To One Man’s Hotmail Account
</title>
</item>
<item>
<author>
Hannes Verschore
</author>
<link>
https://blog.mozilla.org/javascript/2014/01/23/the-monkeys-in-2013/
</link>
<description>
&lt;div&gt;&lt;div class=&quot;entry-content&quot;&gt;  
        &lt;p dir=&quot;ltr&quot;&gt;A monkey. That&amp;#x2019;s the default name a part in the JavaScript Engine of Mozilla Firefox gets. Even the full engine has its own monkey name, called Spidermonkey. 2013 has been a transformative year for the monkeys. New species have been born and others have gone extinct. I&amp;#x2019;ll give a small but incomplete overview into the developments that happened.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Before 2013 JaegerMonkey had established itself as the leader of the pack (i.e. the superior engine in Spidermonkey) and was the default &lt;a href=&quot;http://en.wikipedia.org/wiki/Just-in-time_compilation&quot; target=&quot;_blank&quot;&gt;JIT compiler&lt;/a&gt; in the engine. It was successfully introduced in Firefox 4.0 on March 22nd, 2011. Its original purpose was to augment the first JIT Monkey, TraceMonkey. Two years later it had kicked TraceMonkey out of the door and was absolute ruler in monkey land. Along the ride it had totally changed. A lot of optimizations had been added, the most important being &lt;a href=&quot;https://wiki.mozilla.org/TypeInference&quot; target=&quot;_blank&quot;&gt;Type Inference&lt;/a&gt;. Though there were also drawbacks. JaegerMonkey wasn&amp;#x2019;t really designed to host all those optimizations and it was becoming harder and harder to add new flashy things and easier and easier to add faults. JaegerMonkey had always been a worthy monkey but was starting to cripple under age.&lt;/p&gt;
&lt;div id=&quot;attachment_660&quot; class=&quot;wp-caption alignnone&quot;&gt;&lt;a href=&quot;https://blog.mozilla.org/javascript/files/2014/01/fe033d265dc38f3f.png&quot;&gt;&lt;img class=&quot;size-full wp-image-660&quot; alt=&quot;Improvement of Firefox on the octane benchmark&quot; src=&quot;https://blog.mozilla.org/javascript/files/2014/01/fe033d265dc38f3f.png&quot; width=&quot;672&quot;&gt;&lt;/a&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;Improvement of Firefox on the octane benchmark&lt;/p&gt;&lt;/div&gt;
&lt;p dir=&quot;ltr&quot;&gt;The year 2013 was only eight days old and together with the release of &lt;strong&gt;Firefox 18&lt;/strong&gt;, a new bad boy was in town, IonMonkey. It had received education from the elder monkeys, as well as from its competitors and inherited the good ideas, while trying to avoid the old mistakes. IonMonkey became a textbook compiler with regular optimization passes only adjusted to work in a JIT environment. I would recommend reading &lt;a href=&quot;https://blog.mozilla.org/javascript/2012/09/12/ionmonkey-in-firefox-18/&quot; target=&quot;_blank&quot;&gt;the blogpost of the release&lt;/a&gt; for more information about it.&amp;#xA0;Simultaneously, JaegerMonkey was downgraded to a startup JIT to warm up scripts before IonMonkey took over responsibility.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;But that wasn&amp;#x2019;t the only big change. After the release of IonMonkey in Firefox 18 the year 2013 saw the release of Firefox 19, 20, all the way to number 26. Also Firefox 27, 28 and (partly) 29 were developed in 2013. All those releases brought their own set of performance improvements:&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;- &lt;strong&gt;Firefox 19&lt;/strong&gt; was the second release with IonMonkey enabled. Most work went into improving the new infrastructure of IonMonkey. Another notable improvement was updating Yarr (the engine that executes regular expressions imported from JSC) to the newest release.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;- &lt;strong&gt;Firefox 20&lt;/strong&gt; saw range analysis, one of the optimization passes of IonMonkey, refactored. It was improved and augmented with symbolic range analysis. Also this was the first release containing JavaScript self-hosting infrastructure that allows standard, builtin functions to be implemented in JavaScript instead of C++. These functions get the same treatment as normal functions, including JIT compilation. This helps a lot with removing the overhead from calling between C++ and JavaScript and even allows builtin JS functions to be inlined in the caller.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;- &lt;strong&gt;Firefox 21&lt;/strong&gt; is the first release where off-thread compilation for IonMonkey was enabled. This moves most of the compilation to a background thread, so that the main thread can happily continue executing JavaScript code.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;- &lt;strong&gt;Firefox 22&lt;/strong&gt; saw a big refactoring of how we inline and made it possible to inline a subset of callees at a polymorphic callsite, instead of everything or nothing.&amp;#xA0;A new monkey was also welcomed, called OdinMonkey. OdinMonkey acts as an &lt;a href=&quot;https://blog.mozilla.org/luke/2014/01/14/asm-js-aot-compilation-and-startup-performance&quot;&gt;Ahead of Time compiler&lt;/a&gt; optimization pass that reuses most of IonMonkey, kicking in for specific scripts that have been declared to conform to the &lt;a href=&quot;http://asmjs.org/&quot;&gt;asm.js&lt;/a&gt; subset of JavaScript. OdinMonkey showed immediate progress on the &lt;a href=&quot;http://unrealengine.com/html5&quot;&gt;Epic Citadel demo&lt;/a&gt;. More recently, Google added an asm.js workload to &lt;a href=&quot;https://developers.google.com/octane/benchmark&quot;&gt;Octane 2.0&lt;/a&gt; where OdinMonkey provides a nice boost.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;- &lt;strong&gt;Firefox 23&lt;/strong&gt; brought another first. The first compiler without a monkey name was released: the &lt;a href=&quot;https://blog.mozilla.org/javascript/2013/04/05/the-baseline-compiler-has-landed/&quot; target=&quot;_blank&quot;&gt;Baseline Compiler&lt;/a&gt;. It was designed from scratch to take over the role of JaegerMonkey. It is the proper startup JIT JaegerMonkey was forced to be when IonMonkey was released. No recompilations or invalidations in the Baseline Compiler: only saving type information and make it easy for IonMonkey to kick in. With this release IonMonkey was also allowed to kick in 10 times earlier. At this point, Type Inference was now only needed for IonMonkey. Consequently, major parts of Type Inference were moved and integrated directly into IonMonkey improving memory usage.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;- &lt;strong&gt;Firefox 24&lt;/strong&gt; added lazy bytecode generation. One of the first steps in JS execution is parsing the functions in a script and creating bytecode for them. (The whole engine consumes bytecodes instead of a raw JavaScript string.) With the use of big libraries, a lot of functions aren&amp;#x2019;t used and therefore creating bytecode for all these functions adds unnecessary overhead. Lazy bytecode generation allow us to wait until the first execution before parsing a function and avoids parsing functions that are never executed.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;- &lt;strong&gt;Firefox 25 to Firefox 28&lt;/strong&gt;: No real big performance improvements that stand out. A lot of smaller changes under the hood have landed. Goal: polishing existing features or implementing small improvements. A lot of preparation work went into &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/SpiderMonkey/Internals/GC/Exact_Stack_Rooting&quot;&gt;Exact Rooting&lt;/a&gt;. This is needed for more advanced garbage collection algorithms, like Generational GC. Also a lot of DOM improvements were added.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;- &lt;strong&gt;Firefox 29&lt;/strong&gt;. Just before 2014 Off-thread MIR Construction landed. Now the whole compilation process in IonMonkey can be run off the main thread. No delays during execution due to compiling if you have two or more processors anymore.&lt;/p&gt;
&lt;div id=&quot;attachment_662&quot; class=&quot;wp-caption alignnone&quot;&gt;&lt;a href=&quot;https://blog.mozilla.org/javascript/files/2014/01/2e0adcc65d4a9ffc.png&quot;&gt;&lt;img class=&quot;size-full wp-image-662&quot; alt=&quot;Improvement of Firefox on the Dromaeo benchmark&quot; src=&quot;https://blog.mozilla.org/javascript/files/2014/01/2e0adcc65d4a9ffc.png&quot; width=&quot;688&quot;&gt;&lt;/a&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;Improvement of Firefox on the Dromaeo benchmark&lt;/p&gt;&lt;/div&gt;
&lt;p dir=&quot;ltr&quot;&gt;All these things resulted in improved JavaScript speed. Our score on Octane v1.0 has increased considerably compared to the start of the year. We now are again competitive on the benchmark. Towards the end of the year, Octane v2.0 was released and we took a small hit, but we were very efficient in finding the opportunities to improve our engine and our score on Octane v2.0 has almost surpassed our Octane v1.0 score. Another example on how the speed of Spidermonkey has increased a lot is the score on the Web Browser Grand Prix on &lt;a href=&quot;http://www.tomshardware.com&quot; target=&quot;_blank&quot;&gt;Tom&amp;#x2019;s Hardware&lt;/a&gt;. In those reports, Chrome, Firefox, Internet Explorer and Opera are tested on multiple benchmarks, including Browsermark, Peacekeeper, Dromaeo and a dozen others. During 2013, Firefox was in a steady second place behind Chrome. Unexpectedly, the hard work brought us to the first place on the Web Browser Grand Prix of June 30th.&amp;#xA0; &lt;a href=&quot;http://www.tomshardware.com/reviews/chrome-27-firefox-21-opera-next,3534.html&quot; target=&quot;_blank&quot;&gt;Firefox 22 was crowned&lt;/a&gt; above Chrome and Opera Next. More importantly than all these benchmarks are the reports we get about overall improved JavaScript performance, which is very encouraging.&lt;/p&gt;
&lt;p&gt;A new year starts and improving performance is never finished. In 2014 we will try to improve the JavaScript engine even more. The usual fixes and adding of fast paths continues, but also the higher-level work continues. One of the biggest changes we will welcome this year is the landing of &lt;a href=&quot;http://en.wikipedia.org/wiki/Garbage_collection_%28computer_science%29#Generational_GC_.28ephemeral_GC.29&quot;&gt;Generational GC&lt;/a&gt;. This should bring big benefits in reducing the long GC pauses and improving heap usage. This has been an enormous task, but we are close to landing. Other expected boosts include improving DOM access even more, possibly a lightweight way to do chunked compilation in the form of loop compilation, different optimization levels for scripts with different hotness, adding a new optimization pass called escape analysis &amp;#x2026; and possibly much more.&lt;/p&gt;
&lt;p&gt;A happy new year from the JavaScript team!&lt;/p&gt;
      &lt;/div&gt;

  
&lt;/div&gt;
</description>
<title>
JavaScript – The monkeys in 2013
</title>
</item>
</channel>
</rss>
