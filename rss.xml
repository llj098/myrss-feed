<?xml version='1.0' encoding='UTF-8'?>
<rss version='2.0'>
<channel>
<generator>
clj-rss
</generator>
<link>
https://news.ycombinator.com
</link>
<title>
myread
</title>
<description>
myread
</description>
<item>
<author>
Kurt Mackey
</author>
<link>
http://blog.mongohq.com/making-remote-work-work-an-adventure-in-time-and-space/
</link>
<description>
&lt;div&gt;&lt;article id=&quot;post-368&quot; class=&quot;post-368 post type-post status-publish format-standard hentry category-mongohq-2&quot;&gt;  &lt;p&gt;Mon&amp;#xAD;goHQ is a dis&amp;#xAD;trib&amp;#xAD;uted com&amp;#xAD;pany, with 21 employ&amp;#xAD;ees scat&amp;#xAD;tered across Cal&amp;#xAD;i&amp;#xAD;for&amp;#xAD;nia, Alabama, Utah, Wind&amp;#xAD;sor Ontario, Que&amp;#xAD;bec, and Lon&amp;#xAD;don. This isn&amp;#x2019;t rare, by any means, and is becom&amp;#xAD;ing more com&amp;#xAD;mon as tech&amp;#xAD;nol&amp;#xAD;ogy cor&amp;#xAD;po&amp;#xAD;ra&amp;#xAD;tions evolve &amp;#x2026; par&amp;#xAD;tic&amp;#xAD;u&amp;#xAD;larly when they real&amp;#xAD;ize that the inter&amp;#xAD;sec&amp;#xAD;tion of the entire pop&amp;#xAD;u&amp;#xAD;la&amp;#xAD;tion of good hack&amp;#xAD;ers and the area that&amp;#x2019;s rea&amp;#xAD;son&amp;#xAD;ably acces&amp;#xAD;si&amp;#xAD;ble to their office looks some&amp;#xAD;thing like&amp;#xA0;this:&lt;/p&gt;&lt;img class=&quot;aligncenter&quot; alt=&quot;Good Hacker intersection with office area&quot; src=&quot;http://blog.mongohq.com/wp-content/uploads/2014/01/good-hacker-sf-venn-diagram.png&quot;&gt;&lt;p&gt;Most posts like this talk a lot about the tools, which is under&amp;#xAD;stand&amp;#xAD;able because they&amp;#x2019;re so much fun to futz around with. At their best, though, tools that help with dis&amp;#xAD;trib&amp;#xAD;uted teams are an exten&amp;#xAD;sion of a remote friendly work&amp;#xAD;place, and get&amp;#xAD;ting to that is *hard*. We&amp;#x2019;re prob&amp;#xAD;a&amp;#xAD;bly 80% of the way there, and with enough dili&amp;#xAD;gence will be 82% of the way there by the end of this&amp;#xA0;year.&lt;/p&gt;&lt;h2&gt;Work&amp;#xAD;ing well remotely takes&amp;#xA0;practice&lt;/h2&gt;&lt;p&gt;We&amp;#x2019;ve started ask&amp;#xAD;ing about remote work expe&amp;#xAD;ri&amp;#xAD;ence and skills very early in a promis&amp;#xAD;ing inter&amp;#xAD;view cycle. We expect a lot from peo&amp;#xAD;ple, and the &amp;#x201C;remote require&amp;#xAD;ment&amp;#x201D; just adds another dimen&amp;#xAD;sion of dif&amp;#xAD;fi&amp;#xAD;culty to their jobs. The nor&amp;#xAD;mal response, par&amp;#xAD;tic&amp;#xAD;u&amp;#xAD;larly from peo&amp;#xAD;ple who&amp;#x2019;ve been phys&amp;#xAD;i&amp;#xAD;cally present at offices all their lives, is a bit non&amp;#xAD;cha&amp;#xAD;lant. They assume that &amp;#x201C;remote work&amp;#x201D; means &amp;#x201C;I can spend a lot of time ski&amp;#xAD;ing and work from the&amp;#xA0;lodge&amp;#x201D;.&lt;/p&gt;&lt;img class=&quot;aligncenter&quot; alt=&quot;Steve somewhere exotic, and snowy&quot; src=&quot;http://blog.mongohq.com/wp-content/uploads/2014/01/steve-telecommuting.jpg&quot;&gt;&lt;p&gt;So that&amp;#x2019;s true, kind of, as evi&amp;#xAD;denced by Steve up there. He does go ski&amp;#xAD;ing a lot and has been known to work from the lodge. He also, when not ski&amp;#xAD;ing, starts his days roughly 6 hours later than a nor&amp;#xAD;mal Lon&amp;#xAD;doner to make sure he&amp;#x2019;s around to talk to peo&amp;#xAD;ple on the supe&amp;#xAD;rior Amer&amp;#xAD;i&amp;#xAD;can time zones (except Pacific time, Pacific time is&amp;#xA0;awful).&lt;/p&gt;&lt;p&gt;What they don&amp;#x2019;t always think about, though, is the inher&amp;#xAD;ent fire&amp;#xAD;wall a com&amp;#xAD;mute cre&amp;#xAD;ates between &amp;#x201C;work&amp;#x201D; and &amp;#x201C;per&amp;#xAD;sonal life&amp;#x201D;. Work&amp;#xAD;ing out of a home office opens up an entire world of sur&amp;#xAD;pris&amp;#xAD;ingly difficult-&amp;#x200B;&amp;#x200B;to-&amp;#x200B;&amp;#x200B;handle dis&amp;#xAD;trac&amp;#xAD;tions, par&amp;#xAD;tic&amp;#xAD;u&amp;#xAD;larly for those of us with fam&amp;#xAD;i&amp;#xAD;lies. It&amp;#x2019;s easy to avoid a gui&amp;#xAD;tar wield&amp;#xAD;ing tod&amp;#xAD;dler when the office is 5 miles away and he has no driver&amp;#x2019;s license. It&amp;#x2019;s harder when the wall between the liv&amp;#xAD;ing room and the office makes a delight&amp;#xAD;ful bang&amp;#xAD;ing noise when struck with a&amp;#xA0;guitar.&lt;/p&gt;&lt;h2&gt;Every&amp;#xAD;one works remotely, even from an&amp;#xA0;office&lt;/h2&gt;&lt;p&gt;If you did the math, you noticed we have about four times as many peo&amp;#xAD;ple as we do loca&amp;#xAD;tions. Mon&amp;#xAD;goHQ has offices in both San Mateo, CA (about 15 miles south of San Fran&amp;#xAD;cisco) and Birm&amp;#xAD;ing&amp;#xAD;ham, AL. Hav&amp;#xAD;ing cen&amp;#xAD;tral&amp;#xAD;ized offices can wreck a bud&amp;#xAD;ding remote friendly cul&amp;#xAD;ture. Work&amp;#xAD;ing in a way that&amp;#x2019;s inclu&amp;#xAD;sive of peo&amp;#xAD;ple who aren&amp;#x2019;t phys&amp;#xAD;i&amp;#xAD;cally (or even tem&amp;#xAD;po&amp;#xAD;rally) present is not entirely nat&amp;#xAD;ural, and exclud&amp;#xAD;ing remote employ&amp;#xAD;ees from impor&amp;#xAD;tant inter&amp;#xAD;ac&amp;#xAD;tions is a quick path to&amp;#xA0;agony.&lt;/p&gt;&lt;img alt=&quot;Watercooler gossip&quot; src=&quot;https://blog.mongohq.com/wp-content/uploads/2014/01/4798856225_497f8a1566_b-700x468.jpg&quot;&gt;&lt;p&gt;We&amp;#x2019;ve expe&amp;#xAD;ri&amp;#xAD;enced some vari&amp;#xAD;ant of this prob&amp;#xAD;lem every time a new hire has joined in one of our offices, and are now very explicit about the &amp;#x201C;work as if you&amp;#x2019;re not here&amp;#x201D; stan&amp;#xAD;dard. We expect every&amp;#xAD;one to work with the remote col&amp;#xAD;lab&amp;#xAD;o&amp;#xAD;ra&amp;#xAD;tion tools, be avail&amp;#xAD;able via the same chan&amp;#xAD;nels, and pro&amp;#xAD;duce writ&amp;#xAD;ten arti&amp;#xAD;facts of inter&amp;#xAD;ac&amp;#xAD;tions that are impor&amp;#xAD;tant to share. This is a tough require&amp;#xAD;ment to stick to. We&amp;#x2019;ve encoun&amp;#xAD;tered peo&amp;#xAD;ple who func&amp;#xAD;tion very well in an office envi&amp;#xAD;ron&amp;#xAD;ment, but can&amp;#x2019;t seem to func&amp;#xAD;tion&amp;#xA0;remotely.&lt;/p&gt;&lt;h2&gt;Hyper&amp;#xAD;sen&amp;#xAD;si&amp;#xAD;tiv&amp;#xAD;ity to &amp;#x201C;the&amp;#xA0;feels&amp;#x201D;&lt;/h2&gt;&lt;p&gt;Like most decep&amp;#xAD;tively sim&amp;#xAD;ple ideas, remote work is easy and amaz&amp;#xAD;ing when every&amp;#xAD;thing is going well. If your com&amp;#xAD;pany is killing it, all the hockey sticks point up, and every&amp;#xAD;one gets along amaz&amp;#xAD;ingly well, the remote work cul&amp;#xAD;ture is prob&amp;#xAD;a&amp;#xAD;bly good. There is dan&amp;#xAD;ger, how&amp;#xAD;ever, when things go south. We&amp;#x2019;ve expe&amp;#xAD;ri&amp;#xAD;enced the emo&amp;#xAD;tional troughs as a com&amp;#xAD;pany, and had indi&amp;#xAD;vid&amp;#xAD;u&amp;#xAD;als fight their own per&amp;#xAD;sonal&amp;#xA0;battles.&lt;/p&gt;&lt;p&gt;The real&amp;#xAD;ity of a remote work&amp;#xAD;place is that the con&amp;#xAD;nec&amp;#xAD;tions are largely arti&amp;#xAD;fi&amp;#xAD;cial con&amp;#xAD;structs. Peo&amp;#xAD;ple can be very, very iso&amp;#xAD;lated. A person&amp;#x2019;s default behav&amp;#xAD;ior when they go into a funk is to avoid seek&amp;#xAD;ing out inter&amp;#xAD;ac&amp;#xAD;tions, which is effec&amp;#xAD;tively the same as actively with&amp;#xAD;draw&amp;#xAD;ing in a remote work envi&amp;#xAD;ron&amp;#xAD;ment. It takes a tremen&amp;#xAD;dous effort to get on video chats, use our text based com&amp;#xAD;mu&amp;#xAD;ni&amp;#xAD;ca&amp;#xAD;tion tools, or even call some&amp;#xAD;one dur&amp;#xAD;ing a dark&amp;#xA0;time.&lt;/p&gt;&lt;p&gt;We&amp;#x2019;re learn&amp;#xAD;ing how to inter&amp;#xAD;pret the emo&amp;#xAD;tional state of peo&amp;#xAD;ple we only rarely see, and started work&amp;#xAD;ing to delib&amp;#xAD;er&amp;#xAD;ately draw peo&amp;#xAD;ple out of iso&amp;#xAD;la&amp;#xAD;tion with com&amp;#xAD;pany wide video events. We&amp;#x2019;ve even tried record&amp;#xAD;ing bits of these events (a recent one had a series of light&amp;#xAD;ning talks) and shar&amp;#xAD;ing them around after&amp;#xAD;ward in an effort to get face time, even if just one way. This is a hard prob&amp;#xAD;lem, though, and there&amp;#x2019;s really very lit&amp;#xAD;tle we can do about it other than notice that it&amp;#x2019;s&amp;#xA0;happening.&lt;/p&gt;&lt;h2&gt;The prac&amp;#xAD;ti&amp;#xAD;cal (and the&amp;#xA0;tools!)&lt;/h2&gt;&lt;p&gt;In gen&amp;#xAD;eral, a dis&amp;#xAD;trib&amp;#xAD;uted team is a series of com&amp;#xAD;mu&amp;#xAD;ni&amp;#xAD;ca&amp;#xAD;tion prob&amp;#xAD;lems. We tackle this in two gen&amp;#xAD;eral ways. First, we favor async com&amp;#xAD;mu&amp;#xAD;ni&amp;#xAD;ca&amp;#xAD;tion when&amp;#xA0;possible:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;We have a cen&amp;#xAD;tral &amp;#x201C;work tool&amp;#x201D; (it&amp;#x2019;s home grown, we call it Com&amp;#xAD;pose) we use to record what we&amp;#x2019;re pro&amp;#xAD;duc&amp;#xAD;ing each day. Any&amp;#xAD;one who wants to know what some&amp;#xAD;one is up to, or what&amp;#x2019;s been accom&amp;#xAD;plished on project X, can find out here &amp;#x2026; assum&amp;#xAD;ing everyone&amp;#x2019;s doing their&amp;#xA0;job.&lt;/li&gt;&lt;li&gt;Most day to day com&amp;#xAD;mu&amp;#xAD;ni&amp;#xAD;ca&amp;#xAD;tion hap&amp;#xAD;pens in &lt;a href=&quot;http://hipchat.com&quot; target=&quot;_blank&quot;&gt;Hipchat&lt;/a&gt;, with some work hap&amp;#xAD;pen&amp;#xAD;ing in project spe&amp;#xAD;cific rooms. It&amp;#x2019;s rea&amp;#xAD;son&amp;#xAD;ably easy to catch up on a day or two of activ&amp;#xAD;ity most of the&amp;#xA0;time.&lt;/li&gt;&lt;li&gt;When we do have meet&amp;#xAD;ings (this is a whole post by itself), we like to have pre-&amp;#x200B;&amp;#x200B;reads avail&amp;#xAD;able on a Wiki. These get updated with use&amp;#xAD;ful infor&amp;#xAD;ma&amp;#xAD;tion as the meet&amp;#xAD;ing pro&amp;#xAD;gresses, with the goal of mak&amp;#xAD;ing the actual meet&amp;#xAD;ings optional. We use &lt;a href=&quot;http://hackpad.com&quot; target=&quot;_blank&quot;&gt;Hack&amp;#xAD;pad&lt;/a&gt; for this, mostly, but have also used Con&amp;#xAD;flu&amp;#xAD;ence and Github&amp;#x2019;s&amp;#xA0;wikis.&lt;/li&gt;&lt;li&gt;Email is a bit of a beast, but we do have &amp;#x201C;open&amp;#x201D; mail&amp;#xAD;ing lists and try to include those on most email com&amp;#xAD;mu&amp;#xAD;ni&amp;#xAD;ca&amp;#xAD;tions. The caveat is &amp;#x201C;try&amp;#x201D;, though, we haven&amp;#x2019;t been com&amp;#xAD;pletely suc&amp;#xAD;cess&amp;#xAD;ful in build&amp;#xAD;ing good com&amp;#xAD;pany email&amp;#xA0;habits.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;We also encour&amp;#xAD;age face&amp;#xA0;time:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://sqwiggle.com&quot; target=&quot;_blank&quot;&gt;Sqwig&amp;#xAD;gle&lt;/a&gt; is really good for this, and there are any&amp;#xAD;where from 3 to 10 peo&amp;#xAD;ple on our Sqwig&amp;#xAD;gle setup at any given time. Sqwig&amp;#xAD;gle takes a pic&amp;#xAD;ture of whoever&amp;#x2019;s on every so often, and gets bonus points for help&amp;#xAD;ing us record peo&amp;#xAD;ples&amp;#x2019; embar&amp;#xAD;rass&amp;#xAD;ing poses for&amp;#xA0;posterity:&lt;/li&gt;&lt;/ul&gt;&lt;img class=&quot;aligncenter&quot; alt=&quot;Derp&quot; src=&quot;http://blog.mongohq.com/wp-content/uploads/2014/01/sqwiggle-shenanigans.png&quot;&gt;&lt;ul&gt;&lt;li&gt;Google Hang&amp;#xAD;outs come in handy for sched&amp;#xAD;uled events. We used to have a per&amp;#xAD;pet&amp;#xAD;ual Hang&amp;#xAD;out on wall mounted tele&amp;#xAD;vi&amp;#xAD;sions in both offices, but that cre&amp;#xAD;ated a sort of audi&amp;#xAD;ence /&amp;#x200B; pre&amp;#xAD;sen&amp;#xAD;ter vibe that was a lit&amp;#xAD;tle&amp;#xA0;odd.&lt;/li&gt;&lt;li&gt;We have a &lt;a href=&quot;http://doublerobotics.com&quot; target=&quot;_blank&quot;&gt;Dou&amp;#xAD;ble Robot&amp;#xAD;ics&lt;/a&gt; robot in each office. Remote employ&amp;#xAD;ees can &amp;#x201C;drop in&amp;#x201D;, drive around, and even pull off low level&amp;#xA0;pranks.&lt;/li&gt;&lt;li&gt;Does real estate count as a tool? We have an apart&amp;#xAD;ment near our San Mateo office that any&amp;#xAD;one can use when they&amp;#x2019;re in town. Peo&amp;#xAD;ple tend to travel to San Mateo about once every 6 weeks on&amp;#xA0;average.&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;It&amp;#x2019;s a&amp;#xA0;process&lt;/h2&gt;&lt;p&gt;If you are try&amp;#xAD;ing to build a remote friendly cul&amp;#xAD;ture, the best advice we have for you is &amp;#x201C;just keep iter&amp;#xAD;at&amp;#xAD;ing&amp;#x201D;. It&amp;#x2019;s not an easy thing to do, but it&amp;#x2019;s an amaz&amp;#xAD;ing capa&amp;#xAD;bil&amp;#xAD;ity for a com&amp;#xAD;pany to have. Our con&amp;#xAD;tin&amp;#xAD;ued attempts to do it well have resulted in some phe&amp;#xAD;nom&amp;#xAD;e&amp;#xAD;nal peo&amp;#xAD;ple join&amp;#xAD;ing we never would have met oth&amp;#xAD;er&amp;#xAD;wise. We&amp;#x2019;ve mostly been able to get this far by pow&amp;#xAD;er&amp;#xAD;ing through the tough stuff, com&amp;#xAD;mit&amp;#xAD;ting to un-&amp;#x200B;&amp;#x200B;natural but valu&amp;#xAD;able habits, and &lt;a href=&quot;http://joel.is/post/59525266381/the-joys-and-benefits-of-working-as-a-distributed-team&quot; target=&quot;_blank&quot;&gt;learn&amp;#xAD;ing&lt;/a&gt; from other &lt;a href=&quot;https://zapier.com/blog/how-manage-remote-team/&quot; target=&quot;_blank&quot;&gt;com&amp;#xAD;pa&amp;#xAD;nies&lt;/a&gt; who are &lt;a href=&quot;http://zachholman.com/posts/how-github-works-asynchronous/&quot; target=&quot;_blank&quot;&gt;try&amp;#xAD;ing&lt;/a&gt; to do&amp;#xA0;similar.&lt;/p&gt;    &lt;/article&gt; &lt;/div&gt;
</description>
<title>
Making remote work work: An adventure in time and space
</title>
</item>
<item>
<link>
http://jorendorff.github.io/hackday/2013/tutoring/
</link>
<description>
&lt;div&gt;&lt;div class=&quot;inbody&quot;&gt;

&lt;section&gt;
  &lt;p&gt;Imagine some software to teach basic math to grade-school kids.&lt;/p&gt;

  &lt;p&gt;It&amp;#x2019;s a research project. Cutting edge stuff&amp;#x2026; in the year 1985.&lt;/p&gt;

  &lt;p&gt;It presents a math problem.&lt;/p&gt;

  &lt;pre&gt;
        87
      x 43
      ----
  &lt;/pre&gt;

  &lt;p&gt;You put in the answer.
  The program checks your work.
  And here&amp;#x2019;s the clever part.
  If you miss it, the program analyzes your answer
  and helpfully tells you where you screwed up.
  Like if I type, &lt;kbd&gt;32&lt;/kbd&gt;, Enter:

  &lt;/p&gt;&lt;pre&gt;
  Your answer is wrong.

  Possible causes of error:

  1. You multiplied the number in the multiplicand
  by the number directly beneath it in the multiplier,
  and you wrote down the carried number,
  ignoring the units number.
  &lt;/pre&gt;

  &lt;p&gt;See, there&amp;#x2019;s your problem right there.
  Your answer is wrong.
  It&amp;#x2019;s the, you know, multiplicand&amp;#x2026;&lt;/p&gt;

  &lt;p&gt;Well.
  I imagine you&amp;#x2019;re thinking,
  &lt;em&gt;This is an &lt;strong&gt;awful&lt;/strong&gt; error message.
  Computers can&amp;#x2019;t talk to human beings like that.
  You need to tweak the wording,
  fix the tone,
  tighten up the explanation&amp;#x2026;&lt;/em&gt;&lt;/p&gt;

  &lt;p&gt;But that&amp;#x2019;s because you and I, we&amp;#x2019;re software people.
  We have lots of experience, too much experience, with error messages.
  It turns out the error message
  is not the key thing that&amp;#x2019;s wrong here.&lt;/p&gt;

  &lt;p&gt;This story starts with a program.
  But it&amp;#x2019;s not about software or software people at all.&lt;/p&gt;
&lt;/section&gt;


&lt;section id=&quot;sec-problem&quot;&gt;
  &lt;h2&gt;The problem&lt;/h2&gt;

  &lt;p&gt;The error message quoted above is real.
  This story is about a real person
  and what happened when he read that error message.&lt;/p&gt;

  &lt;p&gt;His name is Mark Lepper.
  And he&amp;#x2019;s not a software person.
  He&amp;#x2019;s a social psychologist. An academic.
  In the late 1980s and early &amp;#x2019;90s,
  computer-based education was a big topic due to the PC,
  much as it is today due to rich Web apps.
  Lepper was interested.
  He saw a lot of these programs,
  and like us, he found them lacking.
  But he saw a different reason, a different underlying problem.&lt;/p&gt;

  &lt;p&gt;Lepper thought: &lt;i&gt;the root problem here is that these programmers 
  just don&amp;#x2019;t have the slightest idea what they&amp;#x2019;re doing.
  They clearly don&amp;#x2019;t understand the psychology
  of one-on-one teaching situations.
  Particularly how a kid&amp;#x2019;s motivation can be undermined.
  I should have pity on them, send them a few papers on this.&lt;/i&gt;&lt;/p&gt;

  &lt;p&gt;So he did a literature search.
  And came up empty.&lt;/p&gt;

  &lt;p&gt;A lot of research had been done on classroom teaching.
  But of one-on-one teaching&amp;#x2014;tutoring&amp;#x2014;almost nothing was known.&lt;/p&gt;
&lt;/section&gt;


&lt;section id=&quot;sec-plan&quot;&gt;
  &lt;h2&gt;The plan&lt;/h2&gt;

  &lt;p&gt;Naturally, Lepper went to work building a team of researchers,
  and they ran studies and wrote papers on tutoring for the next decade.&lt;/p&gt;

  &lt;p&gt;All the research had the same basic plan.
  First, they would pick a topic in basic math.
  Say, fractions.
  They&amp;#x2019;d find kids in need of remedial tutoring in that topic
  and tutors with experience teaching it.
  They&amp;#x2019;d pre-test the kids for both math skills and motivation.
  The tutoring sessions would be videotaped.
  And they&amp;#x2019;d test the kids again afterwards.
  Sometimes they&amp;#x2019;d have the tutors watch the tape
  and provide a running commentary.&lt;/p&gt;

  &lt;p&gt;Note how this is set up.
  Because they measured the student&amp;#x2019;s skills and motivation before and after,
  they could objectively distinguish effective sessions from ineffective ones.
  Did the scores go up? or stay flat?&lt;/p&gt;

  &lt;p&gt;Then, they could watch the video
  and identify the strategies or techniques used in the good sessions.&lt;/p&gt;
&lt;/section&gt;

&lt;section id=&quot;sec-findings&quot;&gt;
  &lt;h2&gt;The findings&lt;/h2&gt;

  &lt;p&gt;So what did they find? Two things.&lt;/p&gt;

  &lt;p&gt;One, there is such a thing as a highly effective tutor.
  The best tutors were amazing.&lt;/p&gt;

  &lt;blockquote&gt;
    &lt;p&gt;At their best, they were able to turn initially resistant,
    alienated, and seemingly helpless students
    into interested and excited participants in the learning process.
    At their best, they were able to help remedial students
    to progress through what would normally have been
    weeks or months of curriculum material
    in a very short time.
    Moreover, gains in students' learning remained apparent
    following and outside of the tutoring situation, showing that these gains
    were not simply the result of [&amp;#x2026;]
    scaffolding that tutors provided [directly].&lt;/p&gt;
  &lt;/blockquote&gt;

  &lt;p&gt;Two. The best tutors had a surprisingly consistent approach to tutoring.
  In fact, Lepper and Woolverton list about twenty
  specific qualities and techniques of good tutors.
  We&amp;#x2019;ll just touch on a few of them here.&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;
      &lt;p&gt;&lt;strong&gt;Math knowledge.&lt;/strong&gt;&lt;/p&gt;

      &lt;p&gt;The best tutors knew the subject matter surprisingly well,
      even for math tutors.
      They knew why things work the way they work.
      They knew details of math history.
      They had a deep pool of real-world analogies and examples to draw from.
      They knew what the likely misunderstandings were in advance.&lt;/p&gt;
    &lt;/li&gt;

    &lt;li&gt;
      &lt;p&gt;&lt;strong&gt;Questions, not directions.&lt;/strong&gt;&lt;/p&gt;

      &lt;p&gt;Good tutors ask questions.
      They don&amp;#x2019;t tell the student what to do.&lt;/p&gt;

      &lt;p&gt;The researchers counted what percentage
      of the remarks their best tutors made were questions,
      as opposed to statements or instructions.
      Eighty to ninety percent.&lt;/p&gt;

      &lt;p&gt;This number is insane! Ninety percent questions!
      You can&amp;#x2019;t talk like that. Nobody talks like that.
      Except the very best tutors.&lt;/p&gt;
    &lt;/li&gt;

    &lt;li&gt;
      &lt;p&gt;&lt;strong&gt;Hints, not answers.&lt;/strong&gt;&lt;/p&gt;

      &lt;p&gt;The best tutors never give away an answer.
      Instead, they give a hint, the tiniest hint they can think of,
      let you think it over,
      and if you&amp;#x2019;re still stuck,
      they&amp;#x2019;ll give you another hint.
      And they&amp;#x2019;re very patient.
      They want you to take the next step on your own.
      Good tutors may offer five or six hints in a row.&lt;/p&gt;

      &lt;p&gt;The researchers wrote: &amp;#x201C;if we did not have clear outcome data
      establishing the great success of these same tutors, it would be easy to
      believe that such [a] strategy [was] dysfunctional.&amp;#x201D;&lt;/p&gt;
    &lt;/li&gt;

    &lt;li&gt;
      &lt;p&gt;&lt;strong&gt;Productive vs. nonproductive errors&lt;/strong&gt;&lt;/p&gt;

      &lt;p&gt;My favorite.&lt;/p&gt;

      &lt;p&gt;Good tutors would just ignore trivial errors.
      Quote: &amp;#x201C;Our less successful tutors, however,
      seemed unable to let any error pass,
      no matter how trivial or inconsequential.&amp;#x201D;&lt;/p&gt;

      &lt;p&gt;Furthermore:
      good tutors distinguished between errors
      that would lead to a wild goose chase
      and errors that would lead to a teaching moment.
      &amp;#x201C;[T]o these tutors,
      some student errors seemed &amp;#x2018;productive&amp;#x2019; [&amp;#x2026;]
      [They] would provide good occasions for students [&amp;#x2026;]
      to discover their own mistakes[.]
      Such errors were therefore deliberately allowed by the tutors,
      so that they could then be systematically &amp;#x2018;debugged&amp;#x2019;.&amp;#x201D;
      Some tutors even &lt;em&gt;intentionally chose problems&lt;/em&gt;
      that would reveal particular errors
      in the student&amp;#x2019;s understanding.&lt;/p&gt;

      &lt;p&gt;So. Devious.
      Like white-hat hackers,
      expert tutors are taking valuable supervillain skills
      and using them for good.&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;OK. There are some other things too,
  but first let&amp;#x2019;s review. We have&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;an expert teacher who knows the material thoroughly,&lt;/li&gt;
    &lt;li&gt;asking lots of questions&lt;/li&gt;
    &lt;li&gt;and giving hints, instead of presenting answers from authority, and&lt;/li&gt;
    &lt;li&gt;leading the student into and out of the classic errors.&lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;Does this sound familiar? Does it have a name?&lt;/p&gt;

  &lt;p&gt;This is the Socratic method.
  Popularized by Plato around 380&amp;#xA0;BCE.
  This educational technology is over two thousand years old.&lt;/p&gt;

  &lt;p&gt;It&amp;#x2019;s the state of the art.&lt;/p&gt;

  &lt;p&gt;Computers can&amp;#x2019;t do this yet!
  I think we&amp;#x2019;re fairly close to being able to do a little of it in a very shallow way.
  Doing this well requires a model of the student&amp;#x2019;s understanding of the material.
  You have to understand their misunderstandings
  and systematically debug them.&lt;/p&gt;

  &lt;p&gt;I like this picture of how we really learn.&lt;/p&gt;

  &lt;p&gt;But this isn&amp;#x2019;t the whole picture.
  There&amp;#x2019;s a much more important lesson to learn here.&lt;/p&gt;
&lt;/section&gt;


&lt;section id=&quot;sec-deeper&quot;&gt;
  &lt;h2&gt;The deeper lesson&lt;/h2&gt;

  &lt;p&gt;What else do good tutors do?&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;
      &lt;p&gt;They take a few minutes in each lesson
      to chat with the student.
      Not about math. Small talk.&lt;/p&gt;
    &lt;/li&gt;

    &lt;li&gt;
      &lt;p&gt;They exhibit warmth and concern,
      and confidence that the student can succeed.&lt;/p&gt;
    &lt;/li&gt;

    &lt;li&gt;
      &lt;p&gt;They present challenging problems,
      always problems that are just at the edge
      of what they think the student can do.&lt;/p&gt;
    &lt;/li&gt;

    &lt;li&gt;
      &lt;p&gt;They are extremely careful with negative feedback.
      Some tutors &lt;em&gt;never&lt;/em&gt; explicitly told a student that they got something wrong!
      Instead, they&amp;#x2019;d ask a question.
      &amp;#x201C;Did you remember to carry the one?&amp;#x201D;
      They&amp;#x2019;re also careful not to overdo it with positive feedback.&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;Now these traits are interesting because none of these are teaching techniques at all.
  They point at something else about learning.&lt;/p&gt;

  &lt;p&gt;Tutoring, apparently, is about motivation.&lt;/p&gt;

  &lt;p&gt;It turns out your mind has to be in a very specific state
  in order for you to learn.&lt;/p&gt;

  &lt;p&gt;Good tutors not only track the student&amp;#x2019;s understanding.
  They also track the student&amp;#x2019;s motivation.
  They know if a kid is bored, discouraged, frustrated, tired, distracted.
  And they act on that knowledge.
  Because if your mind is not engaged, you&amp;#x2019;re not learning.&lt;/p&gt;

  &lt;p&gt;Even the Socratic techniques are all about motivation!
  Let&amp;#x2019;s go back to them.&lt;/p&gt;

  &lt;p&gt;Why do good tutors allow students to make errors, even lead them into errors?
  Because once you gain a little confidence,
  detecting a bug in your own understanding is super motivating.
  You&amp;#x2019;re engaged. You want to fix it.&lt;/p&gt;

  &lt;p&gt;Why do good tutors give hints and not answers?
  Well, partly because struggling with a problem is how you learn.
  But just as importantly, giving the student the answer
  ends the exercise in failure.
  It tells the student, &lt;i&gt;I give up on you.&lt;/i&gt;
  Whereas slowly guiding the student all the way through
  ends with them earning a win.&lt;/p&gt;

  &lt;p&gt;Why do good tutors ask questions?
  In a one-on-one situation, a question does something almost magical.
  It compels a response. It turns on the brain.
  A question makes us care.&lt;/p&gt;
&lt;/section&gt;


&lt;section id=&quot;sec-so-what&quot;&gt;
  &lt;h2&gt;So what?&lt;/h2&gt;

  &lt;p&gt;And that&amp;#x2019;s what I know about tutoring.
  All of this comes from one chapter of one book:
  &amp;#x201C;The Wisdom of Practice:
  Lessons Learned from the Study of Highly Effective Tutors&amp;#x201D;
  by Mark Lepper and Maria Woolverton, in
  &lt;a href=&quot;https://www.amazon.com/dp/012064455X&quot;&gt;&lt;i&gt;Improving Academic Achievement&lt;/i&gt;&lt;/a&gt;.
  It is packed with amazing discoveries,
  much more than I could write about here.&lt;/p&gt;

  &lt;p&gt;But&amp;#x2026; so what? Why should we, as programmers,
  care about all this?&lt;/p&gt;

  &lt;iframe width=&quot;640&quot; height=&quot;360&quot; src=&quot;http://www.youtube.com/embed/3buhHvy3t5U&quot;&gt;&lt;/iframe&gt;

  &lt;p&gt;This is a recording of a popular Web site that helps kids learn math.
  Millions of kids use this site. I recorded this in January 2014.
  I decided to pretend I was a kid who really didn&amp;#x2019;t get it,
  and see what it would do if I put in the wrong answer.&lt;/p&gt;

  &lt;p&gt;Note the behavior when I click the button to submit the wrong answer.&lt;/p&gt;

  &lt;p&gt;Now&amp;#x2026; this is really no better or worse
  than the error message I showed you at the beginning,
  the one with the multiplicand.
  But to me, it&amp;#x2019;s really sad,
  because it&amp;#x2019;s so much less ambitious.&lt;/p&gt;

  &lt;p&gt;Think this over.
  Now that you know: what would an expert tutor do?
  What if it was you tutoring the kid in this movie?
  Is this a productive or nonproductive error?
  At what point would you intervene?
  What would you say?&lt;/p&gt;

  &lt;p&gt;Is the computer doing it right?&lt;/p&gt;

  &lt;p&gt;Does it even have the information it would need to do it right?&lt;/p&gt;

  &lt;p&gt;I don&amp;#x2019;t want to pick on this web site.
  They never claimed to be a substitute for a human tutor.
  They&amp;#x2019;ve put a lot of work in, and the site does some
  things quite well.&lt;/p&gt;

  &lt;p&gt;My point is that educational software
  is not approaching a stable state where it&amp;#x2019;s good enough
  and we can work on other things.
  If we take human tutors as the gold standard,
  we have to admit that
  &lt;em&gt;educational software just isn&amp;#x2019;t very good yet.&lt;/em&gt;
  There is something exciting about this.
  We&amp;#x2019;re doing it wrong;
  and doing it right looks very hard
  given programming as we know it.
  New techniques may be needed.&lt;/p&gt;

  &lt;p&gt;Excellent teaching technology
  seemed just around the corner in the 1960s.
  But I expect we will be laboriously catching up to Socrates
  for another hundred years.&lt;/p&gt;
&lt;/section&gt;


&lt;section id=&quot;sec-volunteer&quot;&gt;
  &lt;h2&gt;Use your supervillain powers for good&lt;/h2&gt;

  &lt;p&gt;Is a hundred years too long to wait?
  You can make a difference now.&lt;/p&gt;

  &lt;p&gt;Help teach a bit of what you know
  to middle school students in the Nashville Metro schools.
  &lt;a href=&quot;http://emilynbristow.wix.com/digitalexposure&quot;&gt;You can
  get started here.&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;





&lt;/div&gt;
&lt;/div&gt;
</description>
<title>
What's known about tutoring (and why programmers should care)
</title>
</item>
<item>
<link>
http://blog.coverity.com/2014/01/13/inconsistent-equality/
</link>
<description>
&lt;div&gt;&lt;div class=&quot;entry-content&quot;&gt;
		&lt;p&gt;Today&amp;#x2019;s episode of &lt;a href=&quot;http://blog.coverity.com/category/ask-the-bug-guys/&quot;&gt;Ask The Bug Guys&lt;/a&gt; features a C# question from reader Jan:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;Hi Bug Guys! We recently had a bug in our code comparing &lt;code&gt;int&lt;/code&gt;s and &lt;code&gt;short&lt;/code&gt;s, where calling &lt;code&gt;Equals() &lt;/code&gt;produced different results from using the &lt;code&gt;== &lt;/code&gt;operator. Also, the behaviour of &lt;code&gt;Equals()&lt;/code&gt; was not symmetric. Here&amp;#x2019;s a code snippet that reproduces the behaviour we observed:&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;pre class=&quot;brush: csharp; gutter: false; title: ; notranslate&quot; title=&quot;&quot;&gt;
int myInt = 1;
short myShort = 1;
Console.WriteLine(myInt == myShort);      // true
Console.WriteLine(myShort == myInt);      // true
Console.WriteLine(myInt.Equals(myShort)); // true
Console.WriteLine(myShort.Equals(myInt)); // false!
&lt;/pre&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;We were quite surprised when we found this. What explains this difference? Is it better to use &lt;code&gt;==&lt;/code&gt; instead of &lt;code&gt;Equals()&lt;/code&gt; when comparing integer types?&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Hi Jan! Thanks for the great question.&lt;/p&gt;
&lt;p&gt;C# was designed to be a &amp;#x201C;pit of success&amp;#x201D; language: that is, a language where the &lt;em&gt;obvious &lt;/em&gt;technique and the &lt;em&gt;correct &lt;/em&gt;technique are the same. And for the most part, that&amp;#x2019;s true. Unfortunately, equality is one of the areas where there are significant pits of failure, and you&amp;#x2019;ve fallen right into one of them.&lt;/p&gt;
&lt;p&gt;I&amp;#x2019;m going to add some additional cases to your program to illustrate a number of different equalities.&lt;/p&gt;
&lt;pre class=&quot;brush: csharp; gutter: false; title: ; notranslate&quot; title=&quot;&quot;&gt;
int myInt = 1;
short myShort = 1;
object objInt1 = myInt;
object objInt2 = myInt;
object objShort = myShort;
Console.WriteLine(myInt == myShort);          // scenario 1 true
Console.WriteLine(myShort == myInt);          // scenario 2 true
Console.WriteLine(myInt.Equals(myShort));     // scenario 3 true
Console.WriteLine(myShort.Equals(myInt));     // scenario 4 false!
Console.WriteLine(objInt1 == objInt1);        // scenario 5 true
Console.WriteLine(objInt1 == objShort);       // scenario 6 false!!
Console.WriteLine(objInt1 == objInt2);        // scenario 7 false!!!
Console.WriteLine(Equals(objInt1, objInt2));  // scenario 8 true
Console.WriteLine(Equals(objInt1, objShort)); // scenario 9 false!?!
&lt;/pre&gt;
&lt;p&gt;What the heck? As it turns out, we have many different kinds of equality demonstrated here.&lt;/p&gt;
&lt;p&gt;In scenarios one and two we must first determine what the &lt;code&gt;==&lt;/code&gt; operator means. C# defines over a dozen different built-in &lt;code&gt;==&lt;/code&gt; operators:&lt;/p&gt;
&lt;pre class=&quot;brush: csharp; gutter: false; title: ; notranslate&quot; title=&quot;&quot;&gt;
object == object
string == string
int == int
uint == uint
long == long
ulong == ulong
...
&lt;/pre&gt;
&lt;p&gt;There is no &lt;code&gt;int == short&lt;/code&gt; or &lt;code&gt;short == int&lt;/code&gt; operators, so the unique best match on the list of built-in operators must be determined. It turns out that the best match is &lt;code&gt;int == int&lt;/code&gt;. So the &lt;code&gt;short &lt;/code&gt;is converted to &lt;code&gt;int &lt;/code&gt;and then the two values are compared as numbers. They are therefore equal.&lt;/p&gt;
&lt;p&gt;In scenario three we must first solve an overload resolution problem to determine what &lt;code&gt;Equals&lt;/code&gt; means. The receiver is of type &lt;code&gt;int&lt;/code&gt; and it has three methods named &lt;code&gt;Equals&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;brush: csharp; gutter: false; title: ; notranslate&quot; title=&quot;&quot;&gt;
Equals(object, object) // static method from object
Equals(object)         // virtual method from object
Equals(int)            // Implements IEquatable&amp;lt;int&amp;gt;.Equals(int)
&lt;/pre&gt;
&lt;p&gt;The first one we can eliminate because there are not enough arguments. Of the other two, the unique best method is the one that takes an &lt;code&gt;int&lt;/code&gt;; it is always better to convert the &lt;code&gt;short&lt;/code&gt; argument to &lt;code&gt;int&lt;/code&gt; than to &lt;code&gt;object&lt;/code&gt;. Therefore we call &lt;code&gt;Equals(int)&lt;/code&gt;, which then compares the two integers again using value equality, so this is true.&lt;/p&gt;
&lt;p&gt;In scenario four we again must determine what &lt;code&gt;Equals&lt;/code&gt; means. The receiver is of type &lt;code&gt;short&lt;/code&gt; which again has three methods named &lt;code&gt;Equals&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&quot;brush: csharp; gutter: false; title: ; notranslate&quot; title=&quot;&quot;&gt;
Equals(object, object) // static method from object
Equals(object)         // virtual method from object
Equals(short)          // Implements IEquatable&amp;lt;short&amp;gt;.Equals(short)
&lt;/pre&gt;
&lt;p&gt;Overload resolution eliminates the first because there are too few arguments and eliminates the third because there is no implicit conversion from &lt;code&gt;int&lt;/code&gt; to &lt;code&gt;short&lt;/code&gt;. That leaves &lt;code&gt;short.Equals(object)&lt;/code&gt;, which has the moral equivalent of this implementation:&lt;/p&gt;
&lt;pre class=&quot;brush: csharp; gutter: false; title: ; notranslate&quot; title=&quot;&quot;&gt;
bool Equals(object z)
{
  return z is short &amp;amp;&amp;amp; (short)z == this;
}
&lt;/pre&gt;
&lt;p&gt;That is, for this method to return true the argument passed in must be a boxed &lt;code&gt;short&lt;/code&gt;, and when unboxed it must be equal to the receiver. Since the argument is a boxed &lt;code&gt;int&lt;/code&gt;, this returns false. There is no special gear in this implementation that says &amp;#x201C;well, what if I were to convert myself to the type of the argument and &lt;em&gt;then &lt;/em&gt;compare?&amp;#x201D;&lt;/p&gt;
&lt;p&gt;In scenarios five, six and seven operator overload resolution chooses the &lt;code&gt;object == object&lt;/code&gt; form, which is equivalent to a call to &lt;code&gt;Object.ReferenceEquals&lt;/code&gt;. Clearly the two references are equal in case five and unequal in cases six and seven. Whether the values of the objects when interpreted as numbers are equal does not come into play at all; only reference equality is relevant.&lt;/p&gt;
&lt;p&gt;In scenarios eight and nine operator overload resolution chooses the static method &lt;code&gt;Object.Equals&lt;/code&gt;, which you can think of as being implemented like this:&lt;/p&gt;
&lt;pre class=&quot;brush: csharp; gutter: false; title: ; notranslate&quot; title=&quot;&quot;&gt;
public static bool Equals(object x, object y)
{
    if (ReferenceEquals(x, y)) return true;
    if (ReferenceEquals(x, null)) return false;
    if (ReferenceEquals(y, null)) return false;
    return x.Equals(y);
}
&lt;/pre&gt;
&lt;p&gt;In scenario eight we have two references that are unequal and not null; therefore we call &lt;code&gt;int.Equals(object)&lt;/code&gt;, which as you would expect from our previous discussion of &lt;code&gt;short.Equals(object)&lt;/code&gt; is implemented as the moral equivalent of:&lt;/p&gt;
&lt;pre class=&quot;brush: csharp; gutter: false; title: ; notranslate&quot; title=&quot;&quot;&gt;
bool Equals(object z)
{
  return z is int &amp;amp;&amp;amp; (int)z == this;
}
&lt;/pre&gt;
&lt;p&gt;Since the argument is of type &lt;code&gt;int&lt;/code&gt; it is unboxed and compared by reference. In scenario nine the argument is a boxed &lt;code&gt;short&lt;/code&gt; and so the type check fails and this is false.&lt;/p&gt;
&lt;p&gt;Summing up: I&amp;#x2019;ve shown nine different ways that two things can be compared for equality; despite the fact that clearly in every case we have the number one on both sides of the equality, equality is true in only half the cases. If you think this is crazy and confusing, you&amp;#x2019;re right! Equality is tricky in C#.&lt;/p&gt;
&lt;p&gt;I&amp;#x2019;ve been looking a lot at confusing cases for equality over my last year at Coverity; two of our checkers are specifically designed to find situations where you used the wrong kind of equality. But this article is long enough already and I&amp;#x2019;ve answered your question (I hope!), so I&amp;#x2019;ll discuss the specific cases that our checkers look for in another posting.&lt;/p&gt;
			&lt;/div&gt;
	
	

	

	
&lt;/div&gt;
</description>
<title>
C#: Inconsistent equality
</title>
</item>
<item>
<link>
http://prog21.dadgum.com/129.html?repost
</link>
<description>
&lt;div&gt;&lt;div id=&quot;main&quot;&gt;

&lt;div id=&quot;left&quot;&gt;
Let's say you've just bought a MacBook Air, and your goal is to become master of the machine, to understand how it works on every level.
&lt;p&gt;Amit Singh's &lt;i&gt;Mac OS X Internals: A Systems Approach&lt;/i&gt; is a good place to start. It's not about programming so much as an in-depth discussion of how all the parts of the operating system fit together: what the firmware does, the sequence of events during boot-up, what device drivers do, and so on. At 1680 pages, it's not light summer reading.
&lt;/p&gt;&lt;p&gt;To truly understand the hardware, Intel has kindly provided a free seven volume set of documentation. I'll keep things simple by recommending &lt;i&gt;Intel 64 and IA-32 Architectures Software Developer's Manual Volume 1: Basic Architecture&lt;/i&gt; (550 pages) and the two volumes describing the instruction set (684 pages and 704 pages respectively).
&lt;/p&gt;&lt;p&gt;Objective-C is the language of OS X. We'll go with Apple's thankfully concise &lt;i&gt;The Objective-C Programming Language&lt;/i&gt; (137 pages).
&lt;/p&gt;&lt;p&gt;Of course Objective-C is a superset of C, so also work through the second edition of &lt;i&gt;The C Programming Language&lt;/i&gt; (274 pages).
&lt;/p&gt;&lt;p&gt;Now we're getting to the core APIs of OS X. &lt;i&gt;Cocoa Fundamentals Guide&lt;/i&gt; is 239 pages. &lt;i&gt;Application Kit Framework Reference&lt;/i&gt; is a monster at 5069 pages. That's help a file-like description of every API call. To be fair I'll stop there with the Cocoa documentation, even though there are also more usable guides for drawing and Core Audio and Core Animation and a dozen other things.
&lt;/p&gt;&lt;p&gt;Ah, wait, OpenGL isn't part of Cocoa, so throw in the 784 page &lt;i&gt;OpenGL Reference Manual&lt;/i&gt;. And another 800 pages for &lt;i&gt;OpenGL Shading Language, Second Edition&lt;/i&gt;.
&lt;/p&gt;&lt;p&gt;The total of all of this is 79 pages shy of eleven thousand. I neglected to include man pages for hundreds of system utilities and the Xcode documentation. And I didn't even touch upon the graphics knowhow needed to do anything interesting with OpenGL, or how to write good C and Objective-C or anything about object-oriented design, and...
&lt;/p&gt;&lt;p&gt;(If you liked this, you might enjoy &lt;a href=&quot;http://prog21.dadgum.com/116.html&quot;&gt;Things That Turbo Pascal is Smaller Than&lt;/a&gt;.)
&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
</description>
<title>
A Complete Understanding is No Longer Possible
</title>
</item>
<item>
<author>
Alex Sexton
</author>
<link>
https://alexsexton.com/blog/2014/1/the-productivity-cycle/
</link>
<description>
&lt;div&gt;&lt;div class=&quot;entry-content&quot;&gt;&lt;p&gt;People are interesting. We know so little about ourselves compared to what we&amp;#x2019;d like to think we know. We&amp;#x2019;re all subtly different even though we&amp;#x2019;re, on a whole, overwhelmingly predictable. There are copious studies to back up &amp;#x201C;average&amp;#x201D; data from people, and plenty of arm-chair anthropologists and psychologists that have very nice theories on how we tick. But most of us aren&amp;#x2019;t &amp;#x2018;average,&amp;#x2019; and perhaps some of us &lt;em&gt;tock&lt;/em&gt; more than we &lt;em&gt;tick&lt;/em&gt; (mark this as the first of many &amp;#x201C;stretches&amp;#x201D; in this post).&lt;/p&gt;
&lt;p&gt;I&amp;#x2019;d like to take the chance, while we&amp;#x2019;re still mostly clueless, to write some of my non-scientific theories on cognitive ability and &amp;#x201C;focus&amp;#x201D; (the noun) in the context of creating and building things (or &amp;#x201C;shipping,&amp;#x201D; as it were).&lt;/p&gt;
&lt;h2&gt;Motive and Privilege&lt;/h2&gt;
&lt;p&gt;I see a thin thread woven through everything that I do, and everything that I see my peers do.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Legacy.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We&amp;#x2019;re all creative, and many of us want to &amp;#x201C;build things.&amp;#x201D; I hear it often in interviews, and over beers, that it&amp;#x2019;s just built into the core of many of us to want to &amp;#x201C;create something from nothing.&amp;#x201D; It often takes shape as some other pleasant-sounding turn of phrase, but the &amp;#x201C;need to create&amp;#x201D; seems to be innate in all but the most blissful of us. In my experience, this can often be traced back to the desire for someone to &amp;#x2018;make their mark,&amp;#x2019; or as I previously alluded, the desire to pursue a legacy.&lt;/p&gt;
&lt;p&gt;I&amp;#x2019;m all for this. This feeling is built in to my DNA as well. And while I would hope to have purely selfless reasons for wanting to create things, I&amp;#x2019;m certain that my ego, and my human-nature drive me to want to live longer than my bones.&lt;/p&gt;
&lt;p&gt;I can&amp;#x2019;t help but lead with &amp;#x201C;ego&amp;#x201D; and &amp;#x201C;legacy&amp;#x201D; because the entire ability to create something from nothing (programming) and to get disproportionally rewarded for doing so (programming salaries) comes along with more than a touch of blind privilege. It&amp;#x2019;s a pretty good spot to be in to be hacking your mental focus levels so you can build bigger and better websites. Blindness to our privilege is mostly to be expected as long as we fight to improve our own awareness and adjust our actions appropriately. Read on now, forewarned of my ego, blindness to privilege, and extreme lack of brevity.&lt;/p&gt;
&lt;h2&gt;Caffeine is a Zero-Sum Game&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://alexsexton.com/images/prod_cycle/focuswave.png&quot; alt=&quot;/images/prod_cycle/focuswave.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;Ostensibly, this is a graph of my potential &amp;#x201C;focus&amp;#x201D; levels during a day.&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;I read a &lt;em&gt;fascinating&lt;/em&gt; blog post several years ago by &lt;a href=&quot;http://randomwalker.info/&quot;&gt;Arvind Narayanan&lt;/a&gt; called &lt;a href=&quot;http://arvindn.livejournal.com/57651.html&quot;&gt;The Calculus of Caffeine Consumption&lt;/a&gt;. It was pretty eye-opening for me to see my &amp;#x201C;focus&amp;#x201D; levels throughout the day graphed out as a sine wave. Naturally, it&amp;#x2019;s a massive over-simplification, but in my personal experience, not an entirely incorrect approximation of my energy levels in a day. I am tired, perk up, get hungry and eat and dip down, then hit a stride, rinse and repeat. It&amp;#x2019;s not a sine wave, but it&amp;#x2019;s a wave alright.&lt;/p&gt;
&lt;p&gt;Like my Uncle Ray always says, &lt;em&gt;&amp;#x201C;Any wave is sinusoidal with a sufficiently low sampling rate!&amp;#x201D;&lt;/em&gt;, though I think eventually it becomes a straight line. (Which I guess is a wave with an amplitude of zero?)&lt;/p&gt;
&lt;p&gt;Our wave of &amp;#x201C;focus&amp;#x201D;/energy has all the normal properties of a wave: a wavelength, a period, and an amplitude. The premise of the article is that caffeine, a stimulant, is often consumed during the low points in our day. So we drink coffee when we wake up or when we feel tired after lunch in order to boost our ability to concentrate and sometimes even function. The effect of this decision that is lost on us, is that &lt;em&gt;this reduces the total amplitude of our &amp;#x201C;focus&amp;#x201D; wave&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;In other words, &lt;strong&gt;by consuming caffeine to reduce how low we get during the low points, we inherently reduce our high points as well.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Narayanan states that this type of consumption actually works pretty well for people who are trying keep from falling below a threshold of &amp;#x201C;focus&amp;#x201D; or energy. Consider a construction worker, data-entry employee, truck-driver, or similar, where the time put into the task is important, and dipping below a certain level of energy would be dangerous/deadly.&lt;/p&gt;
&lt;p&gt;Creative workers, however, don&amp;#x2019;t have the same limitations. They often need &amp;#x201C;a moment of clarity&amp;#x201D; to spark their work, or to break out of &amp;#x201C;writer&amp;#x2019;s block.&amp;#x201D; They would want the absolute highest amplitude of focus, regardless of the consequences on the downside, and to be working while at their highs.&lt;/p&gt;
&lt;p&gt;Narayanan, a true hacker spirit (read: CS Ph.D. and Assistant Professor at Princeton), attempts to exploit this relationship to his advantage. Could he use caffeine to increase the amplitude of his &amp;#x201C;focus?&amp;#x201D; A conclusive answer here would take quite a few more double blind studies, but in my experience, and seemingly in Dr. Narayanan&amp;#x2019;s as well, the answer is a resounding &lt;strong&gt;&amp;#x201C;yes.&amp;#x201D;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Drink a latte 30 minutes before a high point, work as hard as you can, and then use the warmth of your laptop to take a nap a few hours later, because you&amp;#x2019;ll be spent.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Caffeine is a zero-sum game, but you can use that to your advantage. Consuming caffeine in time for it to affect you at the exact peak of your &amp;#x201C;focus wave&amp;#x201D; effectively makes the highs higher, and the lows lower. The rich get richer, while the poor get poorer. It&amp;#x2019;s like the sad state of our socioeconomic classes, except not awful, and for brain power!&lt;/p&gt;
&lt;h2&gt;You Require More Vespene Gas&lt;/h2&gt;
&lt;p&gt;Many people who have read Daniel Kahneman&amp;#x2019;s &lt;a href=&quot;http://www.amazon.com/Thinking-Fast-Slow-Daniel-Kahneman/dp/0374533555&quot;&gt;&lt;em&gt;Thinking Fast And Slow&lt;/em&gt;&lt;/a&gt; will remember the &lt;a href=&quot;http://books.google.com/books?id=TA7Q27RWlj0C&amp;amp;lpg=PT62&amp;amp;ots=qSRd7MEIpZ&amp;amp;pg=PT62#v=onepage&amp;amp;q&amp;amp;f=false&quot;&gt;chocolate cake experiment&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://alexsexton.com/images/prod_cycle/cake.jpg&quot; alt=&quot;/images/prod_cycle/cake.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;Photo by &lt;a href=&quot;http://www.flickr.com/photos/foodthinkers/&quot;&gt;Food Thinkers&lt;/a&gt; under &lt;a href=&quot;http://creativecommons.org/licenses/by-nc-sa/2.0/&quot;&gt;CC-by-NC-SA&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;The experiment, led by Baba Shiv at Stanford University, is pretty simple. Half the students are asked to remember a 2 digit number, and half are asked to remember a 7-digit number. They walk down a hall, are told they&amp;#x2019;re done, and are asked if they want chocolate cake, or fruit salad as a refreshment. The students who were asked to remember the 7-digit number were nearly twice as likely to choose the chocolate cake. Why is this?&lt;/p&gt;
&lt;p&gt;Simply put, we have a finite amount of mental energy. The students who spent their energy on remembering 7-digit numbers had no more energy left to spend on avoiding cake.&lt;/p&gt;
&lt;p&gt;The prefrontal cortex is primarily responsible for the things that creative people crave, like focus, but also other functions like short-term memory, abstract problem solving, and willpower. The conclusion of the chocolate cake experiment implies that there is a finite amount of resources in the prefrontal cortex, and that one system&amp;#x2019;s use of those resources could directly affect the available resources of another function.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://alexsexton.com/images/prod_cycle/wavearea.jpg&quot; alt=&quot;Graph with area under curve highlighted&quot;&gt; In the context of our sine-wave, I&amp;#x2019;m pretty sure I could make a good reference to calculus, because this concept has a lot to do with the area under the curve, but I&amp;#x2019;ll get it wrong, and I won&amp;#x2019;t hear the end of it in the comments.&lt;/p&gt;
&lt;p&gt;This plays into our first theory quite well. If we use more mental energy in a quick burst (because we have a higher amplitude), we&amp;#x2019;ll need deeper rest in order to recharge this energy. During our rest periods, the troughs in our sine-wave, we have to refill the energy that we spent during our peaks.&lt;/p&gt;
&lt;p&gt;I can&amp;#x2019;t safely postulate much about how to best do this, except for that studies show that naps are increasingly good for doing such things. Since you&amp;#x2019;re probably not going to have your big break during a lull in your cognitive ability, why not speed up the process of getting to another high point? Nap away! Refuel the exact part of your brain that will allow you to get in the zone again.&lt;/p&gt;
&lt;p&gt;Some folks will recommend a &lt;a href=&quot;http://en.wikipedia.org/wiki/Power_nap#The_caffeine_nap&quot;&gt;caffeine nap&lt;/a&gt;. I don&amp;#x2019;t have a ton of &lt;em&gt;intentional&lt;/em&gt; experience with caffeine naps, but the idea is that if you consume caffeine just prior to taking a nap, you&amp;#x2019;ll sleep until it kicks in (usually takes at least 30min for caffeine to metabolize), and then it&amp;#x2019;ll allow you to skip some of the groggier&lt;em&gt;[1]&lt;/em&gt; steps on your way back to productivity. It probably works.&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;em&gt;[1]&lt;/em&gt; Apparently, I can&amp;#x2019;t write the word &amp;#x2018;grog&amp;#x2019; without thinking about Guybrush Threepwood.&lt;/small&gt;&lt;/p&gt;
&lt;h3&gt;Moderation&lt;/h3&gt;
&lt;p&gt;I would add, finally, that Dr. Narayanan found that the body adjusts to regular caffeine intake in as little as 2 to 3 weeks. That means that if you&amp;#x2019;re a long-time coffee-drinker, you &lt;em&gt;really do&lt;/em&gt; need that cup of coffee to get going in the morning in order to get up to your pre-caffeine addiction baseline.&lt;/p&gt;
&lt;p&gt;He notes that it takes 5 days to reach adenosine normality (good) if you&amp;#x2019;re not consuming caffeine. He retrospectively adds that he initially did not place enough value in these &amp;#x2018;quitting cycles&amp;#x2019; (hinting that perhaps you should not repeat his mistakes).&lt;/p&gt;
&lt;h2&gt;Practical Application&lt;/h2&gt;
&lt;p&gt;Most of this should be obvious at this point, so I won&amp;#x2019;t drag on.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Plan your high points, work during them&lt;/li&gt;
&lt;li&gt;Refuel during low points instead of stretching them out with forced work&lt;/li&gt;
&lt;li&gt;Slingshot your amplitude with caffeine; 3 weeks on and 1 week off&lt;/li&gt;
&lt;li&gt;Avoid non-intentional caffeine, only drink it on schedule&lt;/li&gt;
&lt;li&gt;Don&amp;#x2019;t ignore the people you love&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;The Nap Month&lt;/h2&gt;
&lt;p&gt;I have nothing but my own personal experience to back this up, but I find that my motivation and passion levels work in a similar way on a &lt;strong&gt;yearly&lt;/strong&gt; cycle as they do on a &lt;strong&gt;daily&lt;/strong&gt; cycle. For parts of the year, I&amp;#x2019;m excited by work, and go out of my way to build things in my free time, and other parts of the year, I just want to come home and binge watch a season of a TV show on Netflix.&lt;/p&gt;
&lt;p&gt;For this reason I have to wonder if some of the same energy principles apply. &lt;strong&gt;Can I increase the intensity and duration of the productive months?&lt;/strong&gt; If so, at what cost?&lt;/p&gt;
&lt;p&gt;I really struggle (in a not very serious kind of way) during the month or two when I feel like I can&amp;#x2019;t get anything done, but I think we can use a similar trick to help our productivity pick up again. Specifically, we need to A) simulate caffeine on a macro scale, and B) simulate naps on a macro scale.&lt;/p&gt;
&lt;h3&gt;Macrocaffeine&lt;/h3&gt;
&lt;p&gt;I find that an interesting, new passion project gets my creative energy flowing much better than jumping into old work. If I really want to get in the mood to program, I&amp;#x2019;ll hop off my projects with deadlines and build something that I know probably won&amp;#x2019;t ever even get finished, but that I&amp;#x2019;m just excited to build.&lt;/p&gt;
&lt;p&gt;Caffeine blocks adenosine (a sleep chemical) receptors in our brain, causing us to avoid sleep longer. If we substitute the current list of things we have to do, with a temporarily more engaging list, it may give us the same slingshot effect that caffeine does for our energy on a micro level.&lt;/p&gt;
&lt;h3&gt;Macronaps&lt;/h3&gt;
&lt;p&gt;This one seems a little bit more straight forward to me.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Just stop working so much.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Take a nap from your work. I understand that this is not a viable solution for businesses that intend to make money, but I think there can be some good compromises here. Namely, most hip tech companies have very generous vacation allowances already. Use your vacation during a low point, and in perfect clich&amp;#xE9; form, &amp;#x201C;recharge.&amp;#x201D;&lt;/p&gt;
&lt;p&gt;Additionally, companies with large enough teams can have two modes of employment that employees could ideally opt into. &amp;#x201C;Passion-mode&amp;#x201D; and &amp;#x201C;coast-mode.&amp;#x201D; Someone who is on an upswing should get put on a big project that&amp;#x2019;s going to take a lot of energy. Someone who is burnt out from the last big project should be given work that will allow them to show up a little late, and leave a little early.&lt;/p&gt;
&lt;p&gt;There&amp;#x2019;s lots of work like this. The support team at your company would probably love it if developers frequently did 6-hour customer support stints. In no way do I imply that the support team doesn&amp;#x2019;t regularly break its back working very demanding hours/problems and doesn&amp;#x2019;t deserve their own down-time. There&amp;#x2019;s also plenty of documentation that I&amp;#x2019;m happy to churn out during my down month.&lt;/p&gt;
&lt;p&gt;The point is to allow employees to be maximally lazy while still maintaining their minimum required value. The more quickly I&amp;#x2019;m able to get through the less motivated time, the more quickly I&amp;#x2019;ll be able to jump back into a difficult and challenging project and do it well.&lt;/p&gt;
&lt;h2&gt;A Final Moment of Clarity&lt;/h2&gt;
&lt;p&gt;I have very few projects and accomplishments that haven&amp;#x2019;t come to me in a &amp;#x201C;moment of clarity.&amp;#x201D; Naturally, I want to maximize the amount of these moments, and increase the odds that I&amp;#x2019;ll be working on something that I love when they occur. I have no idea if hacking your body is a good long-term strategy for making this happen, but I find that researching all of this sleep stuff is an excellent tool for procrastinating during my focus droughts.&lt;/p&gt;
&lt;p&gt;I can&amp;#x2019;t guarantee that any of this will resonate with you, or work for you if you try it. But I do think that everyone goes through the motivational recessions, and we should be actively attempting to eliminate or reduce them. What is Quantitative Easing for the Soul?&lt;/p&gt;
&lt;p&gt;I simply want my hard work to be spent most efficiently.&lt;/p&gt;
&lt;p&gt;&lt;small&gt;Special thanks to &lt;a href=&quot;https://twitter.com/hazelcough&quot;&gt;Michelle Bu&lt;/a&gt; for reading this ahead of time.&lt;/small&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<title>
The Productivity Cycle
</title>
</item>
</channel>
</rss>
