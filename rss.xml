<?xml version='1.0' encoding='UTF-8'?>
<rss version='2.0'>
<channel>
<generator>
clj-rss
</generator>
<link>
https://news.ycombinator.com
</link>
<title>
myread
</title>
<description>
myread
</description>
<item>
<author>
Hannes Verschore
</author>
<link>
https://blog.mozilla.org/javascript/2014/01/23/the-monkeys-in-2013/
</link>
<description>
&lt;div&gt;&lt;div class=&quot;entry-content&quot;&gt;  
        &lt;p dir=&quot;ltr&quot;&gt;A monkey. That&amp;#x2019;s the default name a part in the JavaScript Engine of Mozilla Firefox gets. Even the full engine has its own monkey name, called Spidermonkey. 2013 has been a transformative year for the monkeys. New species have been born and others have gone extinct. I&amp;#x2019;ll give a small but incomplete overview into the developments that happened.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Before 2013 JaegerMonkey had established itself as the leader of the pack (i.e. the superior engine in Spidermonkey) and was the default &lt;a href=&quot;http://en.wikipedia.org/wiki/Just-in-time_compilation&quot; target=&quot;_blank&quot;&gt;JIT compiler&lt;/a&gt; in the engine. It was successfully introduced in Firefox 4.0 on March 22nd, 2011. Its original purpose was to augment the first JIT Monkey, TraceMonkey. Two years later it had kicked TraceMonkey out of the door and was absolute ruler in monkey land. Along the ride it had totally changed. A lot of optimizations had been added, the most important being &lt;a href=&quot;https://wiki.mozilla.org/TypeInference&quot; target=&quot;_blank&quot;&gt;Type Inference&lt;/a&gt;. Though there were also drawbacks. JaegerMonkey wasn&amp;#x2019;t really designed to host all those optimizations and it was becoming harder and harder to add new flashy things and easier and easier to add faults. JaegerMonkey had always been a worthy monkey but was starting to cripple under age.&lt;/p&gt;
&lt;div id=&quot;attachment_660&quot; class=&quot;wp-caption alignnone&quot;&gt;&lt;a href=&quot;https://blog.mozilla.org/javascript/files/2014/01/fe033d265dc38f3f.png&quot;&gt;&lt;img class=&quot;size-full wp-image-660&quot; alt=&quot;Improvement of Firefox on the octane benchmark&quot; src=&quot;https://blog.mozilla.org/javascript/files/2014/01/fe033d265dc38f3f.png&quot; width=&quot;672&quot;&gt;&lt;/a&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;Improvement of Firefox on the octane benchmark&lt;/p&gt;&lt;/div&gt;
&lt;p dir=&quot;ltr&quot;&gt;The year 2013 was only eight days old and together with the release of &lt;strong&gt;Firefox 18&lt;/strong&gt;, a new bad boy was in town, IonMonkey. It had received education from the elder monkeys, as well as from its competitors and inherited the good ideas, while trying to avoid the old mistakes. IonMonkey became a textbook compiler with regular optimization passes only adjusted to work in a JIT environment. I would recommend reading &lt;a href=&quot;https://blog.mozilla.org/javascript/2012/09/12/ionmonkey-in-firefox-18/&quot; target=&quot;_blank&quot;&gt;the blogpost of the release&lt;/a&gt; for more information about it.&amp;#xA0;Simultaneously, JaegerMonkey was downgraded to a startup JIT to warm up scripts before IonMonkey took over responsibility.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;But that wasn&amp;#x2019;t the only big change. After the release of IonMonkey in Firefox 18 the year 2013 saw the release of Firefox 19, 20, all the way to number 26. Also Firefox 27, 28 and (partly) 29 were developed in 2013. All those releases brought their own set of performance improvements:&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;- &lt;strong&gt;Firefox 19&lt;/strong&gt; was the second release with IonMonkey enabled. Most work went into improving the new infrastructure of IonMonkey. Another notable improvement was updating Yarr (the engine that executes regular expressions imported from JSC) to the newest release.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;- &lt;strong&gt;Firefox 20&lt;/strong&gt; saw range analysis, one of the optimization passes of IonMonkey, refactored. It was improved and augmented with symbolic range analysis. Also this was the first release containing JavaScript self-hosting infrastructure that allows standard, builtin functions to be implemented in JavaScript instead of C++. These functions get the same treatment as normal functions, including JIT compilation. This helps a lot with removing the overhead from calling between C++ and JavaScript and even allows builtin JS functions to be inlined in the caller.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;- &lt;strong&gt;Firefox 21&lt;/strong&gt; is the first release where off-thread compilation for IonMonkey was enabled. This moves most of the compilation to a background thread, so that the main thread can happily continue executing JavaScript code.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;- &lt;strong&gt;Firefox 22&lt;/strong&gt; saw a big refactoring of how we inline and made it possible to inline a subset of callees at a polymorphic callsite, instead of everything or nothing.&amp;#xA0;A new monkey was also welcomed, called OdinMonkey. OdinMonkey acts as an &lt;a href=&quot;https://blog.mozilla.org/luke/2014/01/14/asm-js-aot-compilation-and-startup-performance&quot;&gt;Ahead of Time compiler&lt;/a&gt; optimization pass that reuses most of IonMonkey, kicking in for specific scripts that have been declared to conform to the &lt;a href=&quot;http://asmjs.org/&quot;&gt;asm.js&lt;/a&gt; subset of JavaScript. OdinMonkey showed immediate progress on the &lt;a href=&quot;http://unrealengine.com/html5&quot;&gt;Epic Citadel demo&lt;/a&gt;. More recently, Google added an asm.js workload to &lt;a href=&quot;https://developers.google.com/octane/benchmark&quot;&gt;Octane 2.0&lt;/a&gt; where OdinMonkey provides a nice boost.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;- &lt;strong&gt;Firefox 23&lt;/strong&gt; brought another first. The first compiler without a monkey name was released: the &lt;a href=&quot;https://blog.mozilla.org/javascript/2013/04/05/the-baseline-compiler-has-landed/&quot; target=&quot;_blank&quot;&gt;Baseline Compiler&lt;/a&gt;. It was designed from scratch to take over the role of JaegerMonkey. It is the proper startup JIT JaegerMonkey was forced to be when IonMonkey was released. No recompilations or invalidations in the Baseline Compiler: only saving type information and make it easy for IonMonkey to kick in. With this release IonMonkey was also allowed to kick in 10 times earlier. At this point, Type Inference was now only needed for IonMonkey. Consequently, major parts of Type Inference were moved and integrated directly into IonMonkey improving memory usage.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;- &lt;strong&gt;Firefox 24&lt;/strong&gt; added lazy bytecode generation. One of the first steps in JS execution is parsing the functions in a script and creating bytecode for them. (The whole engine consumes bytecodes instead of a raw JavaScript string.) With the use of big libraries, a lot of functions aren&amp;#x2019;t used and therefore creating bytecode for all these functions adds unnecessary overhead. Lazy bytecode generation allow us to wait until the first execution before parsing a function and avoids parsing functions that are never executed.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;- &lt;strong&gt;Firefox 25 to Firefox 28&lt;/strong&gt;: No real big performance improvements that stand out. A lot of smaller changes under the hood have landed. Goal: polishing existing features or implementing small improvements. A lot of preparation work went into &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/SpiderMonkey/Internals/GC/Exact_Stack_Rooting&quot;&gt;Exact Rooting&lt;/a&gt;. This is needed for more advanced garbage collection algorithms, like Generational GC. Also a lot of DOM improvements were added.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;- &lt;strong&gt;Firefox 29&lt;/strong&gt;. Just before 2014 Off-thread MIR Construction landed. Now the whole compilation process in IonMonkey can be run off the main thread. No delays during execution due to compiling if you have two or more processors anymore.&lt;/p&gt;
&lt;div id=&quot;attachment_662&quot; class=&quot;wp-caption alignnone&quot;&gt;&lt;a href=&quot;https://blog.mozilla.org/javascript/files/2014/01/2e0adcc65d4a9ffc.png&quot;&gt;&lt;img class=&quot;size-full wp-image-662&quot; alt=&quot;Improvement of Firefox on the Dromaeo benchmark&quot; src=&quot;https://blog.mozilla.org/javascript/files/2014/01/2e0adcc65d4a9ffc.png&quot; width=&quot;688&quot;&gt;&lt;/a&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;Improvement of Firefox on the Dromaeo benchmark&lt;/p&gt;&lt;/div&gt;
&lt;p dir=&quot;ltr&quot;&gt;All these things resulted in improved JavaScript speed. Our score on Octane v1.0 has increased considerably compared to the start of the year. We now are again competitive on the benchmark. Towards the end of the year, Octane v2.0 was released and we took a small hit, but we were very efficient in finding the opportunities to improve our engine and our score on Octane v2.0 has almost surpassed our Octane v1.0 score. Another example on how the speed of Spidermonkey has increased a lot is the score on the Web Browser Grand Prix on &lt;a href=&quot;http://www.tomshardware.com&quot; target=&quot;_blank&quot;&gt;Tom&amp;#x2019;s Hardware&lt;/a&gt;. In those reports, Chrome, Firefox, Internet Explorer and Opera are tested on multiple benchmarks, including Browsermark, Peacekeeper, Dromaeo and a dozen others. During 2013, Firefox was in a steady second place behind Chrome. Unexpectedly, the hard work brought us to the first place on the Web Browser Grand Prix of June 30th.&amp;#xA0; &lt;a href=&quot;http://www.tomshardware.com/reviews/chrome-27-firefox-21-opera-next,3534.html&quot; target=&quot;_blank&quot;&gt;Firefox 22 was crowned&lt;/a&gt; above Chrome and Opera Next. More importantly than all these benchmarks are the reports we get about overall improved JavaScript performance, which is very encouraging.&lt;/p&gt;
&lt;p&gt;A new year starts and improving performance is never finished. In 2014 we will try to improve the JavaScript engine even more. The usual fixes and adding of fast paths continues, but also the higher-level work continues. One of the biggest changes we will welcome this year is the landing of &lt;a href=&quot;http://en.wikipedia.org/wiki/Garbage_collection_%28computer_science%29#Generational_GC_.28ephemeral_GC.29&quot;&gt;Generational GC&lt;/a&gt;. This should bring big benefits in reducing the long GC pauses and improving heap usage. This has been an enormous task, but we are close to landing. Other expected boosts include improving DOM access even more, possibly a lightweight way to do chunked compilation in the form of loop compilation, different optimization levels for scripts with different hotness, adding a new optimization pass called escape analysis &amp;#x2026; and possibly much more.&lt;/p&gt;
&lt;p&gt;A happy new year from the JavaScript team!&lt;/p&gt;
      &lt;/div&gt;

  
&lt;/div&gt;
</description>
<title>
JavaScript – The monkeys in 2013
</title>
</item>
<item>
<author>
Simon Johnson
</author>
<link>
http://www.nbcnews.com/technology/bill-gates-loses-9-moves-chess-champion-2D11988269
</link>
<description>
&lt;div&gt;&lt;div class=&quot;entry &quot;&gt;



&lt;p class=&quot;time&quot;&gt;
    &lt;span class=&quot;value&quot;&gt;Jan. 24, 2014 at 2:36 PM ET&lt;/span&gt;
&lt;/p&gt;        &lt;p&gt;STOCKHOLM &amp;#x2014; Newly crowned Norwegian world chess champion Magnus Carlsen took just nine moves to checkmate Bill Gates in a speed game to be aired later on Friday. &lt;/p&gt;&lt;p&gt; Challenged to a game in a chat show hosted by well-known Norwegian television presenter Fredrik Skavlan and due to be shown in Norway, Denmark and Sweden, Microsoft founder Gates said before the game that the challenge had &quot;a predetermined outcome.&quot;&lt;/p&gt;&lt;p&gt; Gates, 58, who was ranked by Forbes magazine this year as the world's second-richest person behind Mexico's Carlos Slim, had 2 minutes to make his moves against just 30 seconds for Carlsen. He lost to the 23-year-old in around 1 minute 20 seconds. &lt;/p&gt;&lt;p&gt; &quot;Wow, that was fast,&quot; he said to Carlsen, whose rockstar appeal has won him the moniker the &quot;Justin Bieber of chess.&quot;&lt;/p&gt;&lt;p&gt; The program was recorded on Wednesday in London, Norwegian TV NRK said. &lt;/p&gt;&lt;p&gt; Asked by Skavlan under what circumstances he felt intellectually inadequate, Gates answered: &quot;When I play chess with him (Carlsen).&quot;&lt;/p&gt;&lt;p&gt; Carlsen, a grandmaster since he was 13, received non-stop television coverage in Norway when he beat defending champion Viswanathan Anand of India last November to take his first world title.&lt;/p&gt;
            &lt;p&gt;Copyright 2014 Thomson Reuters.&lt;/p&gt;
        
&lt;div class=&quot;entry-tags clearfix&quot;&gt;
    
    
&lt;/div&gt;
        


       
    &lt;/div&gt;

&lt;/div&gt;
</description>
<title>
Bill Gates loses to Magnus Carlsen in 9 moves
</title>
</item>
<item>
<author>
Jessica Conditt
</author>
<link>
http://www.joystiq.com/2014/01/24/uk-porn-filter-blocks-league-of-legends-update-for-sex-in-file/
</link>
<description>
&lt;div&gt;&lt;div class=&quot;post-body&quot;&gt;
			&lt;div&gt;&lt;a href=&quot;http://www.joystiq.com/2014/01/24/uk-porn-filter-blocks-league-of-legends-update-for-sex-in-file/&quot;&gt;&lt;img src=&quot;http://o.aolcdn.com/hss/storage/adam/4ac0f0479ba6256f75e5c9ad5f194d16/league%20of%20legends.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/div&gt;
The anti-pornography firewall run by the UK's four top internet providers has blocked the latest &lt;a href=&quot;http://www.joystiq.com/game/league-of-legends&quot;&gt;&lt;em&gt;League of Legends &lt;/em&gt;&lt;/a&gt;update because it happens to contain the letters &quot;s,&quot; &quot;e&quot; and &quot;x&quot; in a row in two of its file names, &lt;a href=&quot;http://www.theguardian.com/technology/2014/jan/21/uk-porn-filter-blocks-game-update-that-contained-sex&quot;&gt;The Guardian&lt;/a&gt; reports. The filter dings the following two files, forcing the update to fail with a &quot;file not found&quot; error (emphasis added):

&lt;ul&gt;
	&lt;li&gt;XerathMageChain&lt;strong&gt;sEx&lt;/strong&gt;tended.luaobj&lt;/li&gt;
	&lt;li&gt;Varu&lt;strong&gt;sEx&lt;/strong&gt;pirationTimer.luaobj&lt;/li&gt;
&lt;/ul&gt;
Reddit user &lt;a href=&quot;http://www.reddit.com/r/leagueoflegends/comments/1vitn8/attention_uk_summoners_the_new_antisex_law_may_be/&quot;&gt;LoLBoompje&lt;/a&gt; first reported the file error, and The Guardian says that the only recourse for those affected is to contact their internet providers and switch off the filter. The firewall is a new program and this problem should be contained to anyone who has signed up for a new ISP this month only.
			&lt;a id=&quot;continued&quot;&gt;&lt;/a&gt;
			
		&lt;/div&gt;

		
	&lt;/div&gt;
</description>
<title>
UK porn filter blocks League of Legends update
</title>
</item>
<item>
<link>
http://justinjackson.ca/where-do-you-find-the-time-for-side-projects/
</link>
<description>
&lt;div&gt;&lt;article class=&quot;colorize color7&quot;&gt;
						
					
			
								
					
				
					&lt;small&gt;Written by &lt;a href=&quot;http://justinjackson.ca/?page_id=2&quot;&gt;Justin&lt;/a&gt; on January 17, 2014&lt;/small&gt;
				
					&lt;p&gt;Ever since I published the&amp;#xA0;&lt;a href=&quot;http://justinjackson.ca/2013-revenue-stats/&quot;&gt;revenue numbers&lt;/a&gt;&amp;#xA0;for my side-projects, I&amp;#x2019;ve been getting this question a lot:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;#x201C;YOU HAVE 4 KIDS AND A FULL-TIME JOB?! Where do you find the time for side-projects?&amp;#x201D;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;When I answer, I&amp;#x2019;m tempted to make up something that sounds really impressive:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;#x201C;Well, I stay up every night and hustle until my eyes bleed.&amp;#x201D;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;But I don&amp;#x2019;t do that. I also don&amp;#x2019;t currently use a really complicated time management philosophy. There&amp;#x2019;s a few things that I&amp;#x2019;m doing right now that have been helpful for me. If you&amp;#x2019;re like me (a parent and/or someone who has a full-time job) they might be helpful for you too:&lt;/p&gt;
&lt;h3&gt;1. Where are you going?&lt;/h3&gt;
&lt;p&gt;One of the best things I did this past year was making a decision to launch&amp;#xA0;&lt;a href=&quot;https://gumroad.com/l/amplification&quot;&gt;my book&lt;/a&gt;&amp;#xA0;&amp;#x201D;by the end of the summer&amp;#x201D;.&lt;/p&gt;
&lt;p&gt;Setting a goal is so helpful; once you have a destination it really clarifies how you should be spending your time.&lt;/p&gt;
&lt;p&gt;Your first step is to define what you want to achieve. I personally like 3 month projects &amp;#x2013; they&amp;#x2019;re smaller in scope, and easier to get going.&lt;/p&gt;
&lt;h3&gt;2. Jump aboard the inspiration train&lt;/h3&gt;
&lt;p&gt;If I get inspired, I try to start working on that idea right away. If I wait longer than a day, I lose the momentum.&lt;/p&gt;
&lt;p&gt;This is especially helpful for cranking out an initial draft of your project. When you&amp;#x2019;re inspired, you have a lot of energy, you&amp;#x2019;re mentally alert, and you&amp;#x2019;re motivated. The first draft of many of my blog posts are written in fits of inspiration. I&amp;#x2019;ll blurt it all out as fast I can. Then, I&amp;#x2019;ll try to sit on it overnight, and come back and tweak it the next day.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;#x201C;Inspiration is like fresh fruit or milk: It has an expiration date. If you want to do something, you&amp;#x2019;ve got to do it now. You can&amp;#x2019;t put it on a shelf and wait two months to get around to it. You can&amp;#x2019;t just say you&amp;#x2019;ll do it later. Later, you won&amp;#x2019;t be pumped up about it anymore.&amp;#x201D;&lt;br&gt;
- Jason Fried and David Heinemeier-Hansson, Rework&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3&gt;3. What do I want to accomplish this week?&lt;/h3&gt;
&lt;p&gt;I don&amp;#x2019;t always keep this habit, but when I do, it&amp;#x2019;s really helpful. I use a Kanban board to write out a list of achievable tasks for the week. I put all those items in the &amp;#x201C;Backlog&amp;#x201D; column. Then, each day I pull up the list, choose one task (by moving it to the &amp;#x201C;Current&amp;#x201D; column), and work on it until it&amp;#x2019;s done.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-930&quot; alt=&quot;Kanban board&quot; src=&quot;http://justinjackson.ca/wp-content/uploads/2014/01/kanban.jpg&quot; width=&quot;791&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Bonus:&lt;/b&gt;&amp;#xA0;I&amp;#x2019;ve also found it helpful to have a shared Kanban board with other side-hustlers and &lt;a href=&quot;http://jfdi.bz&quot;&gt;JFDIers&lt;/a&gt;. I do this in&amp;#xA0;&lt;a href=&quot;http://sprint.ly/&quot;&gt;Sprint.ly&lt;/a&gt;, but you can use&amp;#xA0;&lt;a href=&quot;https://trello.com/&quot;&gt;Trello&lt;/a&gt;&amp;#xA0;this way as well.&lt;/p&gt;
&lt;h3&gt;4. Ok, but where do you actually find the time?&lt;/h3&gt;
&lt;p&gt;I mentioned&amp;#xA0;&lt;em&gt;setting goals,&amp;#xA0;&lt;/em&gt;&lt;em&gt;using inspiration,&amp;#xA0;&lt;/em&gt;and&amp;#xA0;&lt;em&gt;Kanban&amp;#xA0;&lt;/em&gt;first because setting a good foundation is important. I&amp;#x2019;ve found having this foundation is more helpful than the actual logistics (which actually aren&amp;#x2019;t that exciting).&lt;/p&gt;
&lt;p&gt;The short answer is: I work on side-projects whenever I have a spare moment. I sacrifice other things (watching TV, reading the newspaper, playing video games) so that I can do creative work.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;#x201C;It takes sacrifice to make something great. In order to shift your mindset and experiment with ideas, you have to choose a new path. You have to change your paradigm from consumption to creation. &amp;#x201D;&lt;br&gt;
- Paul Jarvis,&amp;#xA0;&lt;a href=&quot;http://pjrvs.com/everything/&quot;&gt;&lt;em&gt;Everything I Know&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I get most of my work done in the evenings, right after my kids go to bed, or early in the morning. My regular routine is to wake up early on Saturday and Sunday, and get 2-3 hours of work done before anyone wakes up.&lt;/p&gt;
&lt;p&gt;I&amp;#x2019;ve also found it helpful to take my lunch hour (during the work week), head to a cafe and give myself 50 minutes to just write.&lt;/p&gt;
&lt;p&gt;During these times, I eliminate distractions (Twitter, open tabs, notifications) and I focus on achieving just one thing.&lt;/p&gt;
&lt;p&gt;Cheers,&lt;br&gt;
Justin Jackson&lt;br&gt;
&lt;a href=&quot;http://twitter.com/mijustin&quot;&gt;@mijustin&lt;/a&gt;&lt;/p&gt;

&lt;div id=&quot;justin_embed_signup&quot;&gt;

&lt;h2&gt;Want to hear more?&lt;/h2&gt;
&lt;p&gt;I send a weekly newsletter on Saturdays. Subscribe and you&amp;#x2019;ll receive lessons on working smarter, launching your own products, and marketing your apps.&lt;/p&gt;
&lt;p class=&quot;indicates-required&quot;&gt;&lt;span class=&quot;asterisk&quot;&gt;*&lt;/span&gt; indicates required&lt;/p&gt;
&lt;p class=&quot;justin-field-group&quot;&gt;&lt;label for=&quot;justin-e-EMAIL&quot;&gt;Email Address &lt;span class=&quot;asterisk&quot;&gt;*&lt;/span&gt;&lt;br&gt;
&lt;/label&gt;&lt;br&gt;
&lt;/p&gt;
&lt;p class=&quot;justin-field-group&quot;&gt;&lt;label for=&quot;justin-e-FNAME&quot;&gt;First Name &lt;/label&gt;&lt;br&gt;
&lt;/p&gt;




&lt;/div&gt;


									
			
		&lt;/article&gt;




		&lt;div id=&quot;sharing_email&quot;&gt;
		
			&lt;label for=&quot;target_email&quot;&gt;Send to Email Address&lt;/label&gt;
			

			
				&lt;label for=&quot;source_name&quot;&gt;Your Name&lt;/label&gt;
				

				&lt;label for=&quot;source_email&quot;&gt;Your Email Address&lt;/label&gt;
				

			
			
			&lt;img class=&quot;loading&quot; src=&quot;http://justinjackson.ca/wp-content/plugins/jetpack/modules/sharedaddy/images/loading.gif&quot; alt=&quot;loading&quot; width=&quot;16&quot;&gt;
			
			&lt;a href=&quot;http://justinjackson.ca/where-do-you-find-the-time-for-side-projects/#cancel&quot; class=&quot;sharing_cancel&quot;&gt;Cancel&lt;/a&gt;

			&lt;p class=&quot;errors errors-1&quot;&gt;
				Post was not sent - check your email addresses!			&lt;/p&gt;

			&lt;p class=&quot;errors errors-2&quot;&gt;
				Email check failed, please try again			&lt;/p&gt;

			&lt;p class=&quot;errors errors-3&quot;&gt;
				Sorry, your blog cannot share posts by email.			&lt;/p&gt;
		
	&lt;/div&gt;
		
		






	
			
		
  	
	&lt;/div&gt;
</description>
<title>
Where do you find the time for side projects?
</title>
</item>
<item>
<author>
dmethvin
</author>
<link>
http://blog.jquery.com/2014/01/24/jquery-1-11-and-2-1-released/
</link>
<description>
&lt;div&gt;&lt;div id=&quot;content&quot;&gt;
		
				&lt;div class=&quot;entry-posted&quot;&gt;
			&lt;span class=&quot;sep&quot;&gt;Posted on &lt;/span&gt;&lt;a href=&quot;http://blog.jquery.com/2014/01/24/jquery-1-11-and-2-1-released/&quot; title=&quot;9:57 am&quot; rel=&quot;bookmark&quot;&gt;&lt;time class=&quot;entry-date&quot; datetime=&quot;2014-01-24T09:57:51+00:00&quot;&gt;January 24, 2014&lt;/time&gt;&lt;/a&gt;&lt;span class=&quot;by-author&quot;&gt; &lt;span class=&quot;sep&quot;&gt; by &lt;/span&gt; &lt;span class=&quot;author vcard&quot;&gt;&lt;a class=&quot;url fn n&quot; href=&quot;http://blog.jquery.com/author/dmethvin/&quot; title=&quot;View all posts by dmethvin&quot; rel=&quot;author&quot;&gt;dmethvin&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;		&lt;/div&gt;
				

		
&lt;p&gt;Here in the eastern part of the United States, we&amp;#x2019;re huddling in subzero temperatures and dealing with the aftermath of a snowstorm. Still, there&amp;#x2019;s nothing to brighten our moods like the pristine beauty of a freshly fallen release&amp;#x2013;no, make that TWO releases. jQuery 1.11.0 and 2.1.0 are ready to keep you warm on these dark winter nights.&lt;/p&gt;
&lt;p&gt;You can get the files off our CDN as always, and either use them directly or download them to your own server. Our &lt;a href=&quot;http://jquery.com/download/&quot;&gt;download page&lt;/a&gt; has all the files and information you need, including pointers to the other CDNs that carry the files. Just give those folks a few days to update!&lt;/p&gt;
&lt;p&gt;For those of you not following along for a while, both the 1.x and 2.x branches of jQuery support all recent modern browsers and have the same API. The 1.x branch, this time 1.11.0, adds support for the older versions of Internet Explorer (IE6, 7, and 8). The 2.x branch, today played by 2.1.0, adds support for non-traditional web environments like node.js and browser plugins for Chrome and Firefox.&lt;/p&gt;
&lt;p&gt;jQuery went through a major house-cleaning with the 1.9 release that removed some features. If you haven&amp;#x2019;t yet moved from an earlier version, see the &lt;a href=&quot;http://jquery.com/upgrade-guide/1.9/&quot;&gt;jQuery 1.9 Upgrade Guide&lt;/a&gt; and let the &lt;a href=&quot;http://github.com/jquery/jquery-migrate/#readme&quot;&gt;jQuery Migrate plugin&lt;/a&gt; do all the heavy lifting for you.&lt;/p&gt;
&lt;h2&gt;What&amp;#x2019;s New?&lt;/h2&gt;
&lt;p&gt;You may be wondering what great new things await you in these releases. Perhaps you&amp;#x2019;re fearing that they hold a bunch of breaking changes. You just know the project lead will suggest updating things right now. There goes your whole damn week and that trip to Florida. Well fear not! We&amp;#x2019;ve fixed quite a few bugs, but the other features and changes are mainly organizational ones that don&amp;#x2019;t affect the behavior of APIs. Your code shouldn&amp;#x2019;t break, it should just run a little faster. Here are the highlights:&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Fewer forced layouts:&lt;/b&gt; In this release we declared war on places where we might inadvertently force the browser to do a time-consuming layout. We found a few and eliminated one in particular that could occur when changing class names. This can result in a big performance boost for some pages.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Granular custom builds:&lt;/b&gt; Our modularity is now defined by &lt;a href=&quot;http://en.wikipedia.org/wiki/Asynchronous_module_definition&quot;&gt;AMD&lt;/a&gt;, and it is easier to build small subsets of the library when space is at a premium. If you want to know more, we&amp;#x2019;ve hidden the details in the &lt;a href=&quot;https://github.com/jquery/jquery#readme&quot;&gt;README file&lt;/a&gt; where nobody ever looks.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Lower startup overhead:&lt;/b&gt; The new modularity and avoidance of forced layouts led us to refactor our feature detects so that they run the first time they&amp;#x2019;re needed. If you never call the API needing that feature detect, you never run that code. Previously we ran all feature detects when the page loaded, that led to delays that were generally small, but added up&amp;#x2013;especially on mobile platforms.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Published on npm:&lt;/b&gt; Our releases will now be &lt;a href=&quot;https://npmjs.org/package/jquery/&quot;&gt;published on npm&lt;/a&gt; so that you can use them with node or browserify. Both the 1.x and 2.x branches are available on npm, but remember that only the 2.x branch is supported to run in node.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Published on Bower:&lt;/b&gt; We&amp;#x2019;re now using &lt;a href=&quot;http://bower.io/&quot;&gt;Bower&lt;/a&gt; for our internal dependency management including Sizzle, so you&amp;#x2019;ll see jQuery releases on Bower as soon as they&amp;#x2019;re available. &lt;/p&gt;
&lt;p&gt;Some people have asked about supporting other package managers inside the jQuery library, but we&amp;#x2019;ve decided to only support the two that we use internally at the moment. There are more than a dozen package/dependency managers, it would be handy if they all could agree on a single format for projects to publish information. We don&amp;#x2019;t want the package manager&amp;#x2019;s overhead to be pushed off to individual projects like jQuery.&lt;/p&gt;
&lt;p&gt;Although the glamor always seems to be in the new stuff, we don&amp;#x2019;t like to ignore the bugs and inconveniences that people have run across while using the last version. We worked hard to knock down our bug list and tackled quite a few of them. We even fixed a bug that only occurs in IE6, better late than never!&lt;/p&gt;
&lt;h2&gt;Sourcemap changes&lt;/h2&gt;
&lt;p&gt;This release does not contain the sourcemap comment in the minified file. Sourcemaps have proven to be a very problematic and puzzling thing to developers, spawning &lt;a href=&quot;http://stackoverflow.com/questions/18365315/jquerys-jquery-1-10-2-min-map-is-triggering-a-404-not-found&quot;&gt;hundreds of confused developers&lt;/a&gt; on forums like StackOverflow and causing some to think jQuery itself was broken.&lt;/p&gt;
&lt;p&gt;We&amp;#x2019;ll still be generating and distributing sourcemaps, but you will need to add the appropriate sourcemap comment at the end of the minified file if the browser does not support manually associating map files (currently, none do). If you generate your own jQuery file using the custom build process, the sourcemap comment will be present in the minified file and the map is generated; you can either leave it in and use sourcemaps or edit it out and ignore the map file entirely.&lt;/p&gt;
&lt;p&gt;We hope to bring back and improve sourcemap support in the future, but at the moment neither the design nor the implementation seem suited for situations like jQuery&amp;#x2019;s, where there are widely distributed files on CDNs. We&amp;#x2019;d like sourcemaps (and browsers supporting them) to gracefully handle situations like file renaming or missing files. See our &lt;a href=&quot;http://bugs.jquery.com/ticket/14415&quot;&gt;bug ticket&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h2&gt;Acknowledgements&lt;/h2&gt;
&lt;p&gt;This release would not have happened without the hard work of many people. Thanks to everyone who reported bugs, tried out the prerelease files, or provided constructive criticism. Particular thanks are due to Alex Robbin, Amey Sakhadeo, Anthony Ryan, Aurelio DeRosa, Chris Antaki, Chris Price, Christopher Jones, Corey Frang, Daniel Herman, Domenic Denicola, Dominik D. Geyer, Forbes Lindesay, George Kats, Guy Bedford, Ilya Kantor, Jakob Stoeck, Jeremy Dunck, John Paul, Julian Aubourg, J&amp;#xF6;rn Zaefferer, Lihan Li, Marian Sollmann, Markus Staab, Marlon Landaverde, Micha&amp;#x142; Go&amp;#x142;&amp;#x119;biowski, Mike Sidorov, Oleg Gaidarenko, Richard Gibson, Rick Waldron, Ronny Springer, Scott Gonz&amp;#xE1;lez, Sindre Sorhus, T.J. Crowder, Terry Jones, Timmy Willison, and Timo Tijhof. Colin Snover&amp;#x2019;s commentary in #jquery-dev is also a source of rare humor for the team.&lt;/p&gt;
&lt;h2&gt;Changelog&lt;/h2&gt;
&lt;h3&gt;jQuery 1.11 and 2.1 (common to both)&lt;/h3&gt;
&lt;h3&gt;Ajax&lt;/h3&gt;

&lt;h3&gt;Attributes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://bugs.jquery.com/ticket/14250&quot;&gt;#14250: addClass and removeClass needlessly assign to className.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Build&lt;/h3&gt;

&lt;h3&gt;Core&lt;/h3&gt;

&lt;h3&gt;Css&lt;/h3&gt;

&lt;h3&gt;Data&lt;/h3&gt;

&lt;h3&gt;Effects&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://bugs.jquery.com/ticket/14344&quot;&gt;#14344: Putting different effects in callbacks uses only the first effect.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Event&lt;/h3&gt;

&lt;h3&gt;Manipulation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://bugs.jquery.com/ticket/14716&quot;&gt;#14716: Textarea isn&amp;#x2019;t cloned properly in IE11&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://bugs.jquery.com/ticket/14040&quot;&gt;#14040: Tests: Replace QUnit.reset usage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Selector&lt;/h3&gt;

&lt;h3&gt;Support&lt;/h3&gt;

&lt;h3&gt;jQuery 1.11&lt;/h3&gt;
&lt;h3&gt;Ajax&lt;/h3&gt;

&lt;h3&gt;Attributes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://bugs.jquery.com/ticket/2252&quot;&gt;#2252: Setting select value via val() shows error in IE6&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Build&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://bugs.jquery.com/ticket/14663&quot;&gt;#14663: jQuery 1.11.0-beta3 on npm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Core&lt;/h3&gt;

&lt;h3&gt;Effects&lt;/h3&gt;

&lt;h3&gt;Support&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://bugs.jquery.com/ticket/14422&quot;&gt;#14422: CSP violation including jquery in a blank page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;jQuery 2.1&lt;/h3&gt;
&lt;h3&gt;Ajax&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://bugs.jquery.com/ticket/14207&quot;&gt;#14207: Ajax error defaults to status 404&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Build&lt;/h3&gt;

&lt;h3&gt;Core&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://bugs.jquery.com/ticket/14313&quot;&gt;#14313: Optimize jQuery.merge for size&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Event&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://bugs.jquery.com/ticket/14544&quot;&gt;#14544: Remove elem reference from event handler&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
			
	&lt;/div&gt;
	
&lt;/div&gt;
</description>
<title>
JQuery 1.11 and 2.1 Released
</title>
</item>
</channel>
</rss>
