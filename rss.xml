<?xml version='1.0' encoding='UTF-8'?>
<rss version='2.0'>
<channel>
<generator>
clj-rss
</generator>
<link>
https://news.ycombinator.com
</link>
<title>
myread
</title>
<description>
myread
</description>
<item>
<link>
https://m.facebook.com/dsobeski/posts/10153683440480008
</link>
<description>
&lt;div&gt;&lt;div id=&quot;root&quot; class=&quot;storyStream _2v9s _2v9s&quot;&gt;&lt;div class=&quot;storyStream&quot; id=&quot;m_story_permalink_view&quot;&gt;&lt;div class=&quot;_5d5t feedbackStory permalinkTop noufi _5ev1 _5ezm story acw apl abb&quot; id=&quot;s_d911392e37465b5da24b12d8e6b6f047&quot;&gt;&lt;div class=&quot;msg&quot;&gt;&lt;span&gt;&lt;strong class=&quot;actor&quot;&gt;David Sobeski&lt;/strong&gt;&lt;/span&gt;&lt;br&gt;Trust, Users and The Developer Division &lt;br&gt;      -- A follow up to what went wrong&lt;br&gt; &lt;br&gt; Trust is an important part of any product. If a user can't trust the product and the institution behind it, it is almost inevitable that the product will wither and die. The Apple Newton was a fine product, but it's main point of handwriting recognition wasn't trust worthy and people moved on. They found the Palm Pilot and through its deterministic graffiti system, people found they could trust the recognition and the Palm Pilot became a PDA staple. Even if you look at the Macintosh, it was an excellent product, but, they lost a relationship early on with developers and developers and users moved on to Windows.&lt;br&gt; &lt;br&gt; The Windows trust and value proposition was always compatibility, low-cost devices, and an open architecture (to name a few). From DOS to Windows, your apps would always just work. If you were a Lotus 1-2-3 for DOS or a WordPerfect for DOS user, everything continued working as you went to Windows 3, 3.1, Win95 (etc). This rang true not with just software you ran on Windows but also with the graphics cards or printers that you connected to your machine;  your printers, your modems and other peripherals continued to work. Windows XP did its best with compatibility as a change was made from Windows 9x codebase to the NT codebase. User quickly trusted Windows XP. However, with Windows Vista, a change in the driver model caused a majority of peripherals to simply stop working. Common users lost trust in their operating system for the first time. Windows 7 was better not because of user experience of feature changes, but, two-three years of manufactures fixing their drivers. Windows 7 was simply more compatible and brought back some trust that users lost with Vista. Users became accustomed to that core value proposition of compatibility and low cost. &lt;br&gt; &lt;br&gt; Guess what, developers are just users too. They may have more patience, but once you continue to show a loss of trust, you risk losing the developers forever.&lt;br&gt; &lt;br&gt; This takes us to the Microsoft Developer Division or &quot;DevDiv&quot; (approximately 1993 - 2002) and later know as &quot;DevTools&quot; (2002 - 2013). Developer tools at Microsoft started as a series of tools to support the Microsoft DOS and Windows platforms. We had Programmers Workbench which eventually became QuickC then Visual C++and finally Developer Studio. Windows would ship an SDK that included the Windows Resource Compiler, the CHM (help) compiler, Icon Editor and GUI tools (later on) and all the tools you needed to build amazing Windows applications. It had an API strategy that moved forward with each version of Windows. we had Win16 then a transition to 32-bit computing and Win32s and finally Win32. We even had Win64 but you really never needed to think much about it as your 32-bit code simply worked. Over time helper libraries got created. One such was one that Steven Sinofsky helped create called MFC. Borland even created their own competing C++ wrapper called OWL. A developer who used MFC apps would also always work as version by version was created. The last version I used to build applications was MFC 4.2 and it worked well.  One amazing benefit of MFC was that it was not trying to be a platform or to abstract away the Win32 API. Instead, you would use Win32 as it was with a Document / View abstraction. If MFC was allowed to mature, it would have been able to blend the latest technologies and APIs into it system.As this was happening, another product Microsoft built, Object Basic and eventually Visual Basic was created by adding support for programming visual forms and connecting to client/server databases]. It added even higher levels of semantics on top of the Win32 API. In fact, it started the complexity and that all of Windows would eventually suffer from. Visual Basic Extensions (VBX) led way to OLE Controls. It introduced arcane notions such as type libraries and OLE Automation. What is interesting to note is that some subsets of what was created with OLE Automation worked well, but, so much technology and subsystems where added, that it became arcane even to the most seasoned developer. All of a sudden, your code would break. If you invested in building VBX to extend VB, magically all that work was for nothing and you had to move to OCX (OLE Controls). The type system you new as TCHAR and UINT was replaced by BSTRs and VARIANTS. In fact, the BSTR was so in compatible because it added a count to the beginning of every string that all of your previous string handling code had to change. Developed for the first time lost trust in Microsoft. The world they new broke. It did not stop, Dynamic Data Exchange (DDE) was soon replaced with a more complicated object linking and embedding protocol. OLE Controls were replaced with ActiveX Controls (even though it was just branding, enough changes were made to infuriate control developers).&lt;br&gt; &lt;br&gt; I remember sitting in meetings where DevDiv leaders were tired of wrapping the Win32 API. They did not want to be in the wrapper business. This put the developer division on a very dangerous path. All of a sudden they believed they were the platform team. &lt;br&gt; &lt;br&gt; Something to think about was that it was very much viewed within Microsoft that &quot;wrappers&quot; were not real product development, even with the success of MFC, there was a view that Windows was broken and needed to be fixed. Two things would support such a conclusion: first, the explosion of Windows APIs from about 350 to 1000's; and,  second, the Windows folks were not managing API semantics. Using networking was different than using devices than using 3D graphics v 2D graphics and more. Every group came up with their own semantics, callbacks, type systems, event handlers, parameter mechanisms and more. It became impossible to wrap things because some things just couldn't even be wrapped in a language neutral manner. For example, if you would check out the Windows 3 multimedia APIs, &lt;a href=&quot;http://m.facebook.com/l.php?u=http%3A%2F%2Fmsdn.microsoft.com%2Fen-us%2Flibrary%2Fwindows%2Fdesktop%2Fdd757331%28v%3Dvs.85%29.aspx&amp;amp;h=TAQEH4et9&amp;amp;s=1&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;http://&lt;/span&gt;&lt;wbr&gt;&lt;/wbr&gt;&lt;span&gt;msdn.microsoft.c&lt;/span&gt;&lt;wbr&gt;&lt;/wbr&gt;&lt;span&gt;om/en-us/&lt;/span&gt;&lt;wbr&gt;&lt;/wbr&gt;&lt;span&gt;library/windows/&lt;/span&gt;&lt;wbr&gt;&lt;/wbr&gt;&lt;span&gt;desktop/&lt;/span&gt;&lt;wbr&gt;&lt;/wbr&gt;&lt;span&gt;dd757331(v=vs.85&lt;/span&gt;&lt;wbr&gt;&lt;/wbr&gt;).aspx&lt;/a&gt; or the APIs for using a modem, you would notice the difference in programming models and calling conventions.&lt;br&gt; &lt;br&gt; This solidified even more as DevDiv went from a mission to being something necessary and money losing to support Windows to a full fledged and highly profitable P&amp;amp;L. Once this happened, DevDiv no longer cared about Windows and moving the platform forward. &lt;br&gt; &lt;br&gt; The tools took the Office strategy of many SKUs and started bundling everything into Visual Studio. We had to rewrite VB to use the VS shell and this fundamentally changed the VB product and it user base forever. They lost trust in how to even write code and deploy. Their toolset radically changed as Microsoft's focus on revenue optimization outweighed platform considerations and developer trust.&lt;br&gt; &lt;br&gt; The trust with developers has been a long deteriorating problem. One day we had MFC and the next we would tell developers to use ATL. We would have a constant mess with data telling developers to us RDS (remote data sets) then DAO (data access objects) then ADO, then ADO.net, then LiNQ. If you used data, you were constantly confused by the ever changing API. It was truly awful. Then, everything went to hell when .NET was released. Changes were being made to the C language, to the Visual Basic language. In one fell swoop, Microsoft told all of its developers that everything they were doing and did was wrong. Stop all that crazy C code or the AddRef / Release or that insane VB or Access code and use the new new thing. If you were an ASP developer stop and new become an ASP.net developer. While Windows and Office were two largest platforms, DevDiv told the world they were irrelevant and getting tools to support Windows and Office were extremely difficult for 3rd party developers and internally as well. Watching Sinofsky and Silverberg and eventually Allchin argue for support became laughable.&lt;br&gt; &lt;br&gt; I remember going to COMDEX and giving an Office demo for F1 racing using Excel + Word and real time data acquisition to show how F1 used it in the pits to make adjustments on their cars. The day the CLR released, the message that was received was move or forever be lost. The problem was DevDiv owned the tools. This means the project system, the wizards to start you out, MSDN, everything stopped being about the Windows platform and instead became all about the .NET platform. They even made it hard to find he Win32 Platform SDK to go download.&lt;br&gt; &lt;br&gt; During the Windows Vista time, there was so much pressure to add the CLR into Windows. The Longhorn team was using it to prototype (or most of Longhorn was a big Flash demo that never really worked). But, part of that was the creation of XAML. Again, we already were in a world of HTML and CSS but the teams were blinded and would use excuses on how they can build a better render tree. XAML was a rewrite of the Window Manager and controls. Even the web browser and the reading experience experience were so heavily influenced by XAML that Microsoft lost time on building a great browser. If the XAML detour did not happen, one could imagine what Microsoft's position could have been with IE and even the popular readers that we see today with Kindle, Nook and iBooks.  But XAML was heavy and slow and CLR based. So, internally the Shell team created DUI (DirectUI) which was data driven based like XAML and HTML and the Windows Media Center team created Splash. Office created their own version of DUI that was based on Windows, but then the Windows team abandoned it and Office was left without tools or a platform to gain developer support. All to get away from XAML and the CLR. But what each of these were doing was breaking the years of User32, Shell32, ComDlg32. Instead of enhancing the platform like Microsoft used to do, it was all about rewriting it over and over again.&lt;br&gt; &lt;br&gt; Even as XAML was being created, an internal group within the XAML team realized it was heavy for &quot;the web&quot; and created a XAML clone and called it Silverlight. This was to compete with Flash. But XAML and Silverlight were not even fully compatible. Developers were livid and frustrated. The Windows Phone team had their own version of a CLR and it wasn't fully compatible with the desktop version. Being a developer for a Microsoft platform was insane. Don't forget Office. One of the largest platforms on the planet. It avoided all this and you still used VBA. Office had to continue to use VBA because there was no guarantee of compatibility between VBA and VB.NET. But now you were an island.&lt;br&gt; &lt;br&gt; The Windows Phone team did something that would seal its fate forever and lose the trust of developers. Windows Phone 7 was released with a new user experience and was the answer to iOS and Android. It actually got developers excited. But, a year later with Windows Phone 8, Microsoft told all the developers that the investments they made in Windows Phone was a waste of time because none of their apps will work on Windows Phone 8. That was it. It was over. If you aren't Facebook, the. The reason to be on Windows Phone was zero. It had no value. Then you heard Windows management kind of talk about MinWin and a unification of Windows. This meant (to developers) that Microsoft is about to change its mind again and Windows Phone 9 will break everything again. So why bother? While I focus on the client here, this also happened to the cloud and server. I watched Mark Lucovsky stand up at PDC and tell the world about Hailstorm and Nat Brown talk about COM 2.0 and both technologies never see the light of day as a full release or even an open source project. I would watch how OWA API would change and every Exchange App would break. &lt;br&gt; &lt;br&gt; A side note, there were actually there are two OWA/Exchange APIs and that's why it is so confusing to try to use Exchange on multiple devices, ActiveSync and Exchange Web Access with one used by Windows Phone and the other used by Apple and other 3rd parties.&lt;br&gt; &lt;br&gt; You only get a few of these breaking moments. The 2000s were all about breaking the platform every years. Developers got fatigue and would give up. It was the decade that changed the trust model for that every developer had with Microsoft. Eventually developers just gave up. You know Hadoop, MongoDB API or Node.js or systems like WordPress or PHP (or whatever open source project) isn't going change and break your code or trust. It was more stable to focus on these platforms as you knew it would run everywhere and not break you.&lt;br&gt; &lt;br&gt; At the end of the day, developers walked away from Microsoft not because they missed a platform paradigm shift. They left because they lost all trust. You wanted to go somewhere to have your code investments work and continue to work.&lt;/div&gt;&lt;div class=&quot;_51t _5evg mfss fcg&quot;&gt;&lt;a class=&quot;sec&quot; href=&quot;https://m.facebook.com/a/feed_menu.php?story_permalink_token=S%3A_I832090007%3A10153683440480008&amp;amp;hideable_token=MTAxNTM2ODM0NDA0ODAwMDh%2BRW50U3RhdHVzQ3JlYXRpb25TdG9yeX5%2BODMyMDkwMDA3&amp;amp;continue=%2Fstories.php%23s_d911392e37465b5da24b12d8e6b6f047&amp;amp;perm&amp;amp;action=h&amp;amp;gfid=AQBOQA9fMxZS6iGd&quot;&gt;Hide story&lt;/a&gt;&lt;span&gt; &amp;#xB7; &lt;/span&gt;&lt;a class=&quot;sec&quot; href=&quot;https://m.facebook.com/edits/?cid=10153683440480008&quot;&gt;View Edit History&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;permalinkBottom&quot;&gt;&lt;div class=&quot;ufi nbb&quot;&gt;&lt;div class=&quot;likes row aclb apl&quot; id=&quot;like_sentence_10153683440480008&quot;&gt;&lt;div class=&quot;ib&quot;&gt;&lt;img src=&quot;https://fbstatic-a.akamaihd.net/rsrc.php/v2/yj/r/frl7jyXL3H9.png&quot; width=&quot;13&quot; class=&quot;l img&quot; alt=&quot;like&quot;&gt;&lt;div class=&quot;c&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://m.facebook.com/dfjacobs55&quot;&gt;Darryl Jacobs&lt;/a&gt; and &lt;a href=&quot;https://m.facebook.com/browse/likes/?id=10153683440480008&quot;&gt;209 others&lt;/a&gt; like this.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
</description>
<title>
Trust, Users and The Developer Division - What Went Wrong at Microsoft
</title>
</item>
<item>
<link>
http://www.youtube.com/watch?v=T8gjVbn8VBk&amp;list=PLUPhVMQuDB_aWSKj7L_-3Ot_nxBze_YMy&amp;index=3
</link>
<description>
&lt;figure class=&quot;video blockFigure&quot;&gt;&lt;iframe width=&quot;640&quot; height=&quot;360&quot; src=&quot;http://www.youtube.com/embed/T8gjVbn8VBk&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;figcaption&gt;This complimentary course, originally presented at the SIGGRAPH 2013 conference, provides an accelerated introduction to programming OpenGL, emphasizing the ...&lt;/figcaption&gt;&lt;/figure&gt;
</description>
<title>
[YouTube] SIGGRAPH University - &quot;An Introduction to OpenGL Programming&quot;
</title>
</item>
<item>
<author>
CHARLIE SAVAGE
</author>
<link>
http://www.nytimes.com/2014/01/23/us/politics/watchdog-report-says-nsa-program-is-illegal-and-should-end.html?partner=rss&emc=rss&smid=tw-nytimes
</link>
<description>
&lt;div&gt;&lt;article id=&quot;story&quot; class=&quot;story theme-main&quot;&gt;

    

    
    

                
    &lt;p class=&quot;story-body-text story-content&quot;&gt;WASHINGTON &amp;#x2014; An independent federal privacy watchdog has concluded that the &lt;a href=&quot;http://topics.nytimes.com/top/reference/timestopics/organizations/n/national_security_agency/index.html?inline=nyt-org&quot; title=&quot;More articles about National Security Agency, U.S.&quot; class=&quot;meta-org&quot;&gt;National Security Agency&lt;/a&gt;&amp;#x2019;s program to collect bulk phone call records has provided only &amp;#x201C;minimal&amp;#x201D; benefits in counterterrorism efforts, is illegal and should be shut down.&lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;The findings are laid out in a 238-page report,&amp;#xA0;scheduled for release by Thursday and obtained by The New York Times, that represent the first major public statement by the&amp;#xA0;Privacy and Civil Liberties Oversight Board, which Congress made an independent agency in 2007 and only recently became fully operational. &lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;The report is likely to inject a significant new voice into the debate over surveillance, underscoring that the issue was not settled by a &lt;a href=&quot;http://www.nytimes.com/2014/01/18/us/politics/obama-nsa.html&quot;&gt;high-profile speech&lt;/a&gt; &lt;a href=&quot;http://topics.nytimes.com/top/reference/timestopics/people/o/barack_obama/index.html?inline=nyt-per&quot; title=&quot;More articles about Barack Obama&quot; class=&quot;meta-per&quot;&gt;President Obama&lt;/a&gt; gave last week. Mr. Obama consulted with the board, along with &lt;a href=&quot;http://www.nytimes.com/2013/12/19/us/politics/report-on-nsa-surveillance-tactics.html?_r=0&quot;&gt;a separate review group&lt;/a&gt; that last month delivered its own report about surveillance policies. But while he said in his speech that he was tightening access to the data and declared his intention to find a way to end government collection of the bulk records, he said the program&amp;#x2019;s capabilities should be preserved.&lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;The Obama administration has portrayed the bulk collection program as useful and lawful while at the same time acknowledging concerns about privacy and potential abuse. But in its report, the board&amp;#xA0;lays out what may be the most detailed critique of the government&amp;#x2019;s once-secret legal theory behind the program: that a law known as Section 215 of the &lt;a href=&quot;http://topics.nytimes.com/top/reference/timestopics/subjects/u/usa_patriot_act/index.html?inline=nyt-classifier&quot; title=&quot;More articles about the USA Patriot Act.&quot; class=&quot;meta-classifier&quot;&gt;Patriot Act&lt;/a&gt;, which allows the F.B.I. to obtain business records deemed &amp;#x201C;relevant&amp;#x201D; to an investigation, can be legitimately interpreted as authorizing the N.S.A. to collect all calling records in the country.&lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;The program &amp;#x201C;lacks a viable legal foundation under Section 215, implicates constitutional concerns under the First and Fourth Amendments, raises serious threats to privacy and civil liberties as a policy matter, and has shown only limited value,&amp;#x201D; the report said. &amp;#x201C;As a result, the board recommends that the government end the program.&amp;#x201D;&lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;While a majority of the five-member board embraced that conclusion, two members dissented from the view that the program was illegal. But the panel was united in 10 other recommendations, including deleting raw phone records after three years instead of five and tightening access to search results. &lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;The report also sheds light on the history of the once-secret bulk collection program. It contains the first official acknowledgment that the Foreign Intelligence Surveillance Court produced no judicial opinion detailing its legal rationale for the program &lt;a href=&quot;http://www.nytimes.com/2013/09/18/us/opinion-by-secret-court-calls-collection-of-phone-data-legal.html?_r=0&quot;&gt;until last August&lt;/a&gt;, even though it had been issuing orders to phone companies for the records and to the N.S.A. for how it could handle them &lt;a href=&quot;http://www.dni.gov/files/documents/section/pub_May%2024%202006%20Order%20from%20FISC.pdf&quot;&gt;since May 2006&lt;/a&gt;.&lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;The&lt;a href=&quot;http://www.pclob.gov/about-us/leadership&quot;&gt; privacy board&lt;/a&gt;&amp;#x2019;s legal critique of the program was approved by David Medine, the board&amp;#x2019;s chairman and a former Federal Trade Commission official in the Clinton administration; Patricia M. Wald, a retired federal appeals court judge named to the bench by President Jimmy Carter; and James X. Dempsey, a civil liberties advocate who specializes in technology issues.&lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;But the other two members &amp;#x2014; Rachel L. Brand and Elisebeth Collins Cook, both of whom were Justice Department lawyers in the George W. Bush administration &amp;#x2014; rejected the finding that the program was illegal. &lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;They wrote in separate dissents that the board should have focused exclusively on policy and left legal analysis to the courts. Last month, two Federal District Court judges reached &lt;a href=&quot;http://www.nytimes.com/2013/12/17/us/politics/federal-judge-rules-against-nsa-phone-data-program.html&quot;&gt;opposite&lt;/a&gt; legal &lt;a href=&quot;http://www.nytimes.com/2013/12/28/us/nsa-phone-surveillance-is-lawful-federal-judge-rules.html&quot;&gt;conclusions&lt;/a&gt; in separate lawsuits challenging the program. &lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;Ms. Brand wrote that while the legal question was &amp;#x201C;difficult,&amp;#x201D; the government&amp;#x2019;s legal theory was &amp;#x201C;at least a reasonable reading, made in good faith by numerous officials in two administrations of different parties.&amp;#x201D; She also worried that declaring that counterterrorism officials &amp;#x201C;have been operating this program unlawfully for years&amp;#x201D; could damage morale and make agencies overly cautious in taking steps to protect the country.&lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;But the privacy board was unanimous in recommending a series of immediate changes to the program. The three in the majority wanted those changes as part of a brief wind-down period, while the two in dissent wanted them to be structural for a program that would continue.&lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;Some of those recommendations dovetailed with the steps Mr. Obama announced last week, including limiting analysts&amp;#x2019; access to the call records of people no further than two links removed from a suspect, instead of three, and creating a panel of outside lawyers to serve as public advocates in major cases involving secret surveillance programs.&lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;Other recommendations &amp;#x2014; like deleting data faster &amp;#x2014; were not mentioned in the president&amp;#x2019;s speech. And all members of the board expressed privacy concerns about requiring phone companies to retain call records longer than they normally would, which might be necessary to meet Mr. Obama&amp;#x2019;s stated goal of finding a way to preserve the program&amp;#x2019;s ability without having the government collect the bulk data. &lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;The program began in late 2001 based on wartime authority claimed by President Bush. In 2006, the Bush administration persuaded the surveillance court to begin authorizing the program based on the Patriot Act under a theory the Obama administration would later embrace. &lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;But the privacy board&amp;#x2019;s report criticized that, saying that the legal theory was a &amp;#x201C;subversion&amp;#x201D; of the law&amp;#x2019;s intent, and that the program also violated the Electronic Communications Privacy Act.&lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;&amp;#x201C;It may have been a laudable goal for the executive branch to bring this program under the supervision&amp;#x201D; of the court, the report says. &amp;#x201C;Ultimately, however, that effort represents an unsustainable attempt to shoehorn a pre-existing surveillance program into the text of a statute with which it is not compatible.&amp;#x201D;&lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;Defenders of the program have argued that Congress acquiesced to that secret interpretation of the law by twice extending its expiration without changes. But the report rejects that idea as &amp;#x201C;both unsupported by legal precedent and unacceptable as a matter of democratic accountability.&amp;#x201D; &lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;The report also scrutinizes in detail a handful of investigations in which the program was used, finding &amp;#x201C;no instance in which the program directly contributed to the discovery of a previously unknown terrorist plot or the disruption of a terrorist attack.&amp;#x201D; &lt;/p&gt;&lt;p class=&quot;story-body-text story-content&quot;&gt;Still, in her dissent, Ms. Cook criticized judging the program&amp;#x2019;s worth based only on whether it had stopped an attack to date. It also has value as a tool that can allow investigators to &amp;#x201C;triage&amp;#x201D; threats and provide &amp;#x201C;peace of mind&amp;#x201D; if it uncovers no domestic links to a newly discovered terrorism suspect, she wrote.&lt;/p&gt;
                &lt;footer class=&quot;story-footer story-content&quot;&gt;
        
    &lt;/footer&gt;
&lt;/article&gt;
&lt;/div&gt;
</description>
<title>
Watchdog Report Says N.S.A. Program Is Illegal and Should End
</title>
</item>
<item>
<link>
http://www.toonormal.com/2014/01/10/4k-hdmi-and-deep-color/
</link>
<description>
&lt;div&gt;&lt;div class=&quot;entry&quot;&gt;
				&lt;p&gt;As of this writing (January 2014), there are 2 HDMI specifications that support 4K Video (3840&amp;#xD7;2160 16:9). HDMI 1.4 and HDMI 2.0. As far as I know, there are currently no HDMI 2.0 capable TVs available in the market (though many were announced at CES this week).&lt;/p&gt;
&lt;div id=&quot;attachment_6674&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;a href=&quot;http://www.hdmi.org/manufacturer/hdmi_2_0/index.aspx&quot;&gt;&lt;img src=&quot;http://www.toonormal.com/wp-content/uploads/2014/01/HDMI2.png&quot; alt=&quot;Comparing HDMI 1.4 (Black text) and 2.0 (Orange). Source: HDMI 2.0 FAQ on HDMI.org&quot; width=&quot;435&quot; class=&quot;size-full wp-image-6674&quot;&gt;&lt;/a&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;Comparing HDMI 1.4 (Black text) and 2.0 (Orange). Source: HDMI 2.0 FAQ&lt;/p&gt;&lt;/div&gt;
&lt;p&gt;A detail that tends to be neglected in all this 4K buzz is the Chroma Subsampling. If you&amp;#x2019;ve ever compared an HDMI signal against something else (DVI, VGA), and the quality looked worse, one of the reasons is because of Chroma Subsampling (for the other reason, see &lt;strong&gt;xvYCC&lt;/strong&gt; at the bottom of this post). &lt;/p&gt;
&lt;p&gt;Chroma Subsampling is extremely common. Practically every video you&amp;#x2019;ve ever watched on a computer or other digital video player uses it. As does the JPEG file format. That&amp;#x2019;s why we GameDevs prefer formats like PNG that don&amp;#x2019;t subsample. We like our source data raw and pristine. We can ruin it later with subsampling or other forms of texture compression (DXT/S3TC).&lt;/p&gt;
&lt;p&gt;In the land of Subsampling, a descriptor like &lt;strong&gt;4:4:4&lt;/strong&gt; or &lt;strong&gt;4:2:2&lt;/strong&gt; is used. Images are broken up in to 4&amp;#xD7;2 pixel cells. The descriptor says how much color (chroma) data is lost. &lt;strong&gt;4:4:4&lt;/strong&gt; is the perfect form of Chroma Subsampling. Chroma Subsampling uses the &lt;strong&gt;YCbCr&lt;/strong&gt; color space (sometimes called YCC) as opposed to the standard RGB color space.&lt;/p&gt;
&lt;div id=&quot;attachment_6676&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;a href=&quot;http://www.toonormal.com/wp-content/uploads/2014/01/ChromaSubSampling.png&quot;&gt;&lt;img src=&quot;http://www.toonormal.com/wp-content/uploads/2014/01/ChromaSubSampling-640x180.png&quot; alt=&quot;Great subsampling diagram from Wikipedia, showing the different encodings mean&quot; width=&quot;640&quot; class=&quot;size-large wp-image-6676&quot;&gt;&lt;/a&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;Great subsampling diagram from &lt;a href=&quot;http://en.wikipedia.org/wiki/Chroma_subsampling#Sampling_systems_and_ratios&quot;&gt;Wikipedia&lt;/a&gt;, showing the different encodings mean&lt;/p&gt;&lt;/div&gt;
&lt;p&gt;Occasionally the term &amp;#x201C;&lt;strong&gt;4:4:4 RGB&lt;/strong&gt;&amp;#x201D; or just &amp;#x201C;&lt;strong&gt;RGB&lt;/strong&gt;&amp;#x201D; is used to describe the standard RGB color space. Also note, Component Video cables, though they are colored red, green, and blue, are actually &lt;u&gt;YPbPr&lt;/u&gt; encoded (the Analog version of YCbCr).&lt;/p&gt;
&lt;p&gt;Looking at the first diagram again, we can make a little more sense of it.&lt;/p&gt;
&lt;a href=&quot;http://www.hdmi.org/manufacturer/hdmi_2_0/index.aspx&quot;&gt;&lt;img src=&quot;http://www.toonormal.com/wp-content/uploads/2014/01/HDMI2.png&quot; alt=&quot;Comparing HDMI 1.4 (Black text) and 2.0 (Orange). Source: HDMI 2.0 FAQ on HDMI.org&quot; width=&quot;435&quot; class=&quot;size-full wp-image-6674&quot;&gt;&lt;/a&gt;
&lt;p&gt;In other words: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HDMI 1.4 supports &lt;strong&gt;8bit RGB&lt;/strong&gt;, &lt;strong&gt;8bit 4:4:4&lt;/strong&gt; YCbCr, and &lt;strong&gt;12bit 4:2:2&lt;/strong&gt; YCbCr, all at 24-30 FPS&lt;/li&gt;
&lt;li&gt;HDMI 2.0 supports &lt;strong&gt;RGB&lt;/strong&gt; and &lt;strong&gt;4:4:4&lt;/strong&gt; in all color depths (8bit-16bit) at 24-30 FPS&lt;/li&gt;
&lt;li&gt;HDMI 2.0 only supports &lt;strong&gt;8bit RGB&lt;/strong&gt; and &lt;strong&gt;8bit 4:4:4&lt;/strong&gt; at 60 FPS&lt;/li&gt;
&lt;li&gt;All other color depths require Chroma Subsampling at 60 FPS in HDMI 2.0&lt;/li&gt;
&lt;li&gt;Peter Jackson&amp;#x2019;s 48 FPS (The Hobbit&amp;#x2019;s &amp;#x201C;High Frame Rate&amp;#x201D; HFR) is notably absent from the spec&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also worth noting, the most well supported color depths are &lt;strong&gt;8bit&lt;/strong&gt; and &lt;strong&gt;12bit&lt;/strong&gt;. The 12 bit over HDMI is referred to as &lt;strong&gt;Deep Color&lt;/strong&gt; (as opposed to High Color).&lt;/p&gt;
&lt;p&gt;The HDMI spec has supported only &lt;strong&gt;4:4:4&lt;/strong&gt; and &lt;strong&gt;4:2:2&lt;/strong&gt; since HDMI 1.0. As of HDMI 2.0, it also supports &lt;strong&gt;4:2:0&lt;/strong&gt;, which is available in HDMI 2.0&amp;#x2032;s 60 FPS framerates. Blu-ray movies are encoded in 4:2:0, so I&amp;#x2019;d assume this is why they added this.&lt;/p&gt;
&lt;p&gt;All this video signal butchering does beg the question: Which is the better trade off? More color range per pixel, or more pixels with color channels?&lt;/p&gt;
&lt;p&gt;I have no idea.&lt;/p&gt;
&lt;p&gt;If I was to guess though, because TV&amp;#x2019;s aren&amp;#x2019;t right in front of your face like a Computer Monitor, I&amp;#x2019;d expect 4K 4:2:2 might actually be better. Greater luminance precision, with a bit of chroma fringing.&lt;/p&gt;
&lt;p&gt;Some Plasma and LCD screens use something called &lt;a href=&quot;http://en.wikipedia.org/wiki/PenTile_matrix_family&quot;&gt;Pentile Matrix&lt;/a&gt; arrangement of their red, green, and blue pixels.&lt;/p&gt;
&lt;div id=&quot;attachment_6726&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;a href=&quot;http://www.toonormal.com/wp-content/uploads/2014/01/Pentile.jpg&quot;&gt;&lt;img src=&quot;http://www.toonormal.com/wp-content/uploads/2014/01/Pentile-450x337.jpg&quot; alt=&quot;The AMOLED screen of the Nexus One&quot; width=&quot;450&quot; class=&quot;size-medium wp-image-6726&quot;&gt;&lt;/a&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;The AMOLED screen of the Nexus One. A green for every pixel, but every other pixel is a blue, switching red/blue order every line. Not all AMOLED screens are Pentile. The Super AMOLED Plus screen found in the PS Vita uses a &lt;a href=&quot;http://www.edepot.com/playstation.html#PSP2_Video&quot;&gt;standard RGB layout&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;
&lt;p&gt;So even if we wanted more color fidelity per individual pixel, it may not be physically there.&lt;/p&gt;
&lt;h2&gt;Deep Color&lt;/h2&gt;
&lt;p&gt;Me, my latest graphics fascination is &lt;strong&gt;Deep Color&lt;/strong&gt;. Deep Color is the marketing name for more than 8 bits per pixel of a color. It isn&amp;#x2019;t necessarily something we need in asset creation (not me, but some do want full 16bit color channels). But as we start running filters/shaders on our assets, stuff like HDR (but more than that), we end up losing the quality of the original assets as they are re-sampled to fit in to an 8bit RGB color space. &lt;/p&gt;
&lt;p&gt;This can result in banding, especially in near flat color gradients.&lt;/p&gt;
&lt;div id=&quot;attachment_6696&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;a href=&quot;http://www.toonormal.com/wp-content/uploads/2014/01/Banding.jpg&quot;&gt;&lt;img src=&quot;http://www.toonormal.com/wp-content/uploads/2014/01/Banding.jpg&quot; alt=&quot;From Wikipedia&quot; width=&quot;640&quot; class=&quot;size-full wp-image-6696&quot;&gt;&lt;/a&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;From &lt;a href=&quot;http://en.wikipedia.org/wiki/Color_banding&quot;&gt;Wikipedia&lt;/a&gt;, though it&amp;#x2019;s possible the banding shown may be exaggerated&lt;/p&gt;&lt;/div&gt;
&lt;p&gt;Photographers have RAW and HDR file formats for dealing with this stuff. We have Deep Color, in all its &lt;strong&gt;30bit&lt;/strong&gt; (10bpp), &lt;strong&gt;36bit&lt;/strong&gt; (12bpp) and &lt;strong&gt;48bit&lt;/strong&gt; (16bpp) glory. Or really, just &lt;strong&gt;36bit (12bpp)&lt;/strong&gt;, but 48bit can be used as a RAW format if we wanted.&lt;/p&gt;
&lt;p&gt;So the point of this nerding: An ideal display would be &lt;strong&gt;4K&lt;/strong&gt;, support &lt;strong&gt;12bit RGB&lt;/strong&gt; or &lt;strong&gt;12bit YCbCr&lt;/strong&gt;, at &lt;strong&gt;60 FPS&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The thing is, &lt;strong&gt;HDMI 2.0 doesn&amp;#x2019;t support it&lt;/strong&gt;!&lt;/p&gt;
&lt;p&gt;Perhaps that&amp;#x2019;s fine though. Again, HDMI is a television spec. Most television viewers are watching video, and practically all video is 4:2:0 encoded anyway (which is supported by the HDMI 2.0 spec). The problem is gaming, where our framerates can reach 60FPS.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The HDMI 2.0 spec isn&amp;#x2019;t up to spec.&lt;/strong&gt; &lt;img src=&quot;http://www.toonormal.com/wp-includes/images/smilies/icon_wink.gif&quot; alt=&quot;;)&quot; class=&quot;wp-smiley&quot;&gt; &lt;/p&gt;
&lt;p&gt;Again this is probably fine. The now-current generation of consoles, nobody is really pushing them as 4K machines anyway. Sony may have 4K video playback support, but most high end games are still targeting 1080p and even 720p. 4K is 4x the pixels of 1080p. I suppose it&amp;#x2019;s an advantage that 4K only supports 30FPS right now, meaning you only need to push 2x the data to be a &amp;#x201C;4K game&amp;#x201D;, but still.&lt;/p&gt;
&lt;p&gt;HDMI Bandwidth is rated in &lt;a href=&quot;http://en.wikipedia.org/wiki/HDMI#Version_comparison&quot;&gt;Gigabits per second&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HDMI 1.0-&amp;gt;1.2: &lt;strong&gt;~4 Gb&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;HDMI 1.3-&amp;gt;1.4: &lt;strong&gt;~8 Gb&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;HDMI 2.0: &lt;strong&gt;~14 Gb&lt;/strong&gt; (NEW)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Not surprisingly, 4K 8bit 60FPS is &lt;strong&gt;~12 Gb&lt;/strong&gt; of data, and 30FPS is &lt;strong&gt;~6 Gb&lt;/strong&gt; of data. Our good friend &lt;strong&gt;4K 12bit 60FPS&lt;/strong&gt; though is &lt;strong&gt;~18 Gb&lt;/strong&gt; of data, well above the limits of HDMI 2.0.&lt;/p&gt;
&lt;p&gt;To compare, &lt;a href=&quot;http://en.wikipedia.org/wiki/DisplayPort&quot;&gt;Display Port&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DisplayPort 1.0 and 1.1: &lt;strong&gt;~8 Gb&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;DisplayPort 1.2: &lt;strong&gt;~17 Gb&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;DisplayPort 1.3: &lt;strong&gt;~32 Gb&lt;/strong&gt; (NEW)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;They&amp;#x2019;re claiming 8K and 4K@120Hz (FPS) support with the latest standard, but 18 doesn&amp;#x2019;t divide that well in to 32, so somebody has to have their numbers wrong (admittedly I did not divide mine by 1024, but 1000). Also since 8k is 4x the resolution of 4K, and the bandwidth only roughly doubled, practically speaking DisplayPort 1.3 can only support &lt;strong&gt;8k 8bit 30FPS&lt;/strong&gt;. Also that 4K@120Hz is &lt;strong&gt;4K 8bit 120FPS&lt;/strong&gt;. Still, if you don&amp;#x2019;t want 120FPS, that leaves room for &lt;strong&gt;4K 16bit 60FPS&lt;/strong&gt;, which should be more than needed (12bit). I wonder if anybody will support &lt;strong&gt;4K 12bit 90FPS&lt;/strong&gt; over DisplayPort?&lt;/p&gt;
&lt;p&gt;And that&amp;#x2019;s 4K.&lt;/p&gt;
&lt;h2&gt;1080p and 2K Deep Color&lt;/h2&gt;
&lt;p&gt;Today 1080p is the dominant high resolution: 1920&amp;#xD7;1080. To the film guys, true 2K is 2048&amp;#xD7;1080, but there are a wide variety of devices in the same range, such as 2560&amp;#xD7;1600 and 2560&amp;#xD7;1440 (4x 720p). These, including 1080p, are often grouped under the label &lt;a href=&quot;http://en.wikipedia.org/wiki/2K_resolution&quot;&gt;2K&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;A second of &lt;strong&gt;1080p 8bit 60FPS&lt;/strong&gt; data requires &lt;strong&gt;~3 Gb&lt;/strong&gt; of bandwidth, well within the range supported by the original HDMI 1.0 spec (though why we even had to deal with 1080i is a good question, probably due to the inability to even meet the HDMI spec).&lt;/p&gt;
&lt;p&gt;To compare, a second of &lt;strong&gt;1080p 12bit 60FPS&lt;/strong&gt; data requires ~4.5 Gb of bandwidth. Even &lt;strong&gt;1080p 16bit 60FPS&lt;/strong&gt; needed only ~6 Gb, well within the range supported by HDMI 1.3 (where Deep Color was introduced). Plenty of headroom still. Only when we push &lt;strong&gt;2560&amp;#xD7;1440 12bit 60FPS&lt;/strong&gt; (~8 Gb) do we hit the limits of HDMI 1.3.&lt;/p&gt;
&lt;p&gt;So from a specs perspective, I just wanted to note this because &lt;strong&gt;Deep Color&lt;/strong&gt; and &lt;strong&gt;1080p&lt;/strong&gt; are reasonable to support on now-current generation game consoles. Even the PlayStation 3, by specs, supported this. High end games probably didn&amp;#x2019;t have enough processing to spare for this, but it&amp;#x2019;s something to definitely consider supporting on PlayStation 4 and Xbox One. As for PC, many current GPUs support Deep Color in full-screen resolutions. Again, full-screen, not necessarily on your Desktop (i.e. windowed). From what I briefly read, Deep Color is only supported on the Desktop with specialty cards (FirePro, etc).&lt;/p&gt;
&lt;h2&gt;One more thing: YCrCb (YCC) and xvYCC&lt;/h2&gt;
&lt;p&gt;You make have noticed watching a video file that the blacks don&amp;#x2019;t look very black.&lt;/p&gt;
&lt;p&gt;Due to a horrible legacy thing (CRT displays), data encoded as YCrCb use values from 16-&amp;gt;240 (15-235?) instead of 0-&amp;gt;255. Thats quite the loss, nearly 12% of the available data range, effectively lowering the precision below 8bit. The only reason it&amp;#x2019;s still done is because of old CRT televisions, which can be really tough to find these days. Regrettably, that does mean both of the original DVD and Bluray movies standards were forced to comply to this.&lt;/p&gt;
&lt;p&gt;Sony proposed &lt;a href=&quot;http://en.wikipedia.org/wiki/XvYCC&quot;&gt;x.v.Color (xvYCC)&lt;/a&gt; as a way of finally forgetting this stupid limitation of old CRT displays, and using the full 0-&amp;gt;255 range. As of HDMI 1.3 (June 2006), &lt;strong&gt;xvYCC&lt;/strong&gt; and &lt;strong&gt;Deep Color&lt;/strong&gt; are part of the HDMI spec.&lt;/p&gt;
&lt;p&gt;Several months later (November 2006), &lt;strong&gt;The PlayStation 3&lt;/strong&gt; was launched. So as a rule of thumb, only HDMI devices newer than the PlayStation 3 will could potentially support xvYCC. This means televisions, audio receivers, other set top boxes, etc. It&amp;#x2019;s worth noting that some audio receivers may actually clip video signals to the 16-240 range, thus ruining picture quality of an xvYCC source. Also the PS3 was eventually updated to HDMI 1.4 via a software update, but the only 1.4 feature supported is Stereoscopic 3D.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.audioholics.com/home-theater-calibration/hdmi-black-levels-xvycc-rgb&quot;&gt;Source&lt;/a&gt;. &lt;a href=&quot;http://en.wikipedia.org/wiki/XvYCC&quot;&gt;Wikipedia&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The point of bringing this up is to further emphasize the potential for color banding and terrible color reproduction over HDMI. An 8bit RGB framebuffer is potentially being compressed to fit within the YCbCr 16-240 range before it gets sent over HDMI. The PlayStation 3 has a setting for enabling the full color range (I forget the name used), and other new devices probably do to (unlikely named xvYCC).&lt;/p&gt;
&lt;p&gt;According to Wikipedia, all of the Deep Color modes supported by HDMI 1.3 are xvYCC, as they should be.&lt;/p&gt;

								
				

			&lt;/div&gt;
		&lt;/div&gt;
</description>
<title>
4k, HDMI, and Deep Color
</title>
</item>
<item>
<link>
http://fabiensanglard.net/reverse_engineering_strike_commander/index.php
</link>
<description>
&lt;div&gt;&lt;section id=&quot;content&quot;&gt;



		


&lt;p id=&quot;date&quot;&gt;Jan 22th, 2014&lt;/p&gt;

			
&lt;p id=&quot;paperbox&quot;&gt;
&lt;a href=&quot;http://fabiensanglard.net/reverse_engineering_strike_commander/index.php&quot;&gt;
&lt;img class=&quot;shadowed&quot; src=&quot;http://fabiensanglard.net/reverse_engineering_strike_commander/icon_plane.png&quot;&gt; &lt;p&gt;I love you Hoi-En.&lt;/p&gt;&lt;img src=&quot;http://fabiensanglard.net/reverse_engineering_strike_commander/index.php&quot;&gt;    
&lt;/a&gt; 
    
    

Back in the early 90s, one company was on the bleeding edge of PC gaming: 
&lt;a href=&quot;http://en.wikipedia.org/wiki/Origin_Systems&quot;&gt;Origin Systems&lt;/a&gt;.
Their motto was &quot;We Create Worlds&quot; and boy did they deliver: With the &lt;a href=&quot;http://en.wikipedia.org/wiki/Ultima_(series)&quot;&gt;Ultima&lt;/a&gt; series, Crusader series and
&lt;a href=&quot;http://en.wikipedia.org/wiki/Wing_Commander_(franchise)&quot;&gt;Wing Commander&lt;/a&gt; series, they consistently took gamer's breath away.&lt;br&gt;
&lt;br&gt;
One of them took four years and more than a million man hours to complete: &lt;a href=&quot;http://en.wikipedia.org/wiki/Strike_Commander&quot;&gt;
Strike Commander&lt;/a&gt;. The famous flight simulator
had its own 3D engine called &lt;a href=&quot;http://www.wcnews.com/wcpedia/RealSpace&quot;&gt;RealSpace&lt;/a&gt; which pioneered many of what we take 
for granted today: Texture Mapping, Gouraud Shading, Level of Details and Dithered colors.&lt;br&gt;
&lt;br&gt;

My old dream was to play the game with a Virtual Reality device. With 
the &lt;a href=&quot;http://www.oculusvr.com/&quot;&gt;Oculus Rift&lt;/a&gt; that fantasy came one step closer to reality.
But when it turned out the source code had been lost and would never be released, I decided to reverse engineer it.&lt;br&gt;
&lt;br&gt;
As of the publication of this article, the project is not yet completed  but I want to share the techniques that have so far allowed this :&lt;br&gt;
&lt;br&gt;
  &lt;img class=&quot;shadowed&quot; src=&quot;http://fabiensanglard.net/reverse_engineering_strike_commander/sc_before.png&quot;&gt;&lt;br&gt;
  &lt;br&gt;
to become that :&lt;br&gt;
&lt;br&gt;
  &lt;img class=&quot;shadowed&quot; src=&quot;http://fabiensanglard.net/reverse_engineering_strike_commander/sc_after.png&quot;&gt;&lt;br&gt;
&lt;br&gt;
... and maybe inspire some people to join the adventure.&lt;br&gt;
&lt;br&gt;
&lt;br&gt;&lt;u&gt;&lt;b&gt;TABLE OF CONTENT :&lt;/b&gt;&lt;/u&gt;&lt;br&gt;
&lt;br&gt;
&lt;a href=&quot;http://fabiensanglard.net/reverse_engineering_strike_commander/index.php&quot;&gt;Part 1:  Introduction&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://fabiensanglard.net/reverse_engineering_strike_commander/strike_commander_architecture.php&quot;&gt;Part 2: Game Architecture&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://fabiensanglard.net/reverse_engineering_strike_commander/strike_commander_assets.php&quot;&gt;Part 3: Reverse Engineer Assets&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://fabiensanglard.net/reverse_engineering_strike_commander/strike_commander_game.php&quot;&gt;Part 4: Play the game again&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://fabiensanglard.net/reverse_engineering_strike_commander/strike_commander_oculus_rift.php&quot;&gt;Part 5: Oculus Rift&lt;/a&gt;&lt;br&gt;

&lt;/p&gt;

&lt;h2&gt;Before Strike Commander
&lt;/h2&gt;
&lt;p&gt;
  Early 90s flight simulators were good but like &lt;a href=&quot;http://en.wikipedia.org/wiki/Falcon_(video_game_series)#Falcon_3.0&quot;&gt;Falcon 3.0&lt;/a&gt; 
  or &lt;a href=&quot;http://en.wikipedia.org/wiki/History_of_Microsoft_Flight_Simulator#Flight_Simulator_4.0&quot;&gt;Flight simulator 4.0&lt;/a&gt; they focused mostly on accurate flying models than beautiful rendition :&lt;br&gt;
  &lt;br&gt;
  &lt;img class=&quot;shadowed&quot; src=&quot;http://fabiensanglard.net/reverse_engineering_strike_commander/falcon3_small.jpg&quot;&gt;
  &lt;img class=&quot;shadowed&quot; src=&quot;http://fabiensanglard.net/reverse_engineering_strike_commander/flight_simulator_4_small.gif&quot;&gt;&lt;br&gt;
  &lt;br&gt;
 There were many fight simulator on the market and few people noticed the 1990 Origin Systems announcement for a new game. But things
 changed after Chicago CES 1991 where a demo could be seen in action : 
  Nobody could believe the game could feature things only seen in military flight simulator so far: Texture Mapping, Gouraud Shading, Haze and more. 
  Screenshots demonstrated a technology far ahead any competitors :&lt;br&gt;
  &lt;br&gt;
  &lt;img class=&quot;shadowed&quot; src=&quot;http://fabiensanglard.net/reverse_engineering_strike_commander/sick_game_small.png&quot;&gt;
  &lt;img class=&quot;shadowed&quot; src=&quot;http://fabiensanglard.net/reverse_engineering_strike_commander/sick_game_cockpit_small.png&quot;&gt;&lt;br&gt;
  &lt;img class=&quot;shadowed&quot; src=&quot;http://fabiensanglard.net/reverse_engineering_strike_commander/sc_story_small.png&quot;&gt;
  &lt;img class=&quot;shadowed&quot; src=&quot;http://fabiensanglard.net/reverse_engineering_strike_commander/sc_story2_small.png&quot;&gt;&lt;br&gt;
  &lt;br&gt;
  After 1991 the game became highly anticipated. Not only the engine was gorgeous and the story captivating, RealSpace also supported exceptional hardware out of the box: The very expensive 
  and fragile accessories that every flight simulator 
  enthusiast wanted were the THRUSTMASTER WEAPON CONTROL SYSTEM and the THRUSTMASTER FLIGHT CONTROL SYSTEM:&lt;br&gt;
  &lt;br&gt;
  &lt;img src=&quot;http://fabiensanglard.net/reverse_engineering_strike_commander/tm_TQS-web.jpg&quot; class=&quot;shadowed&quot;&gt;
  &lt;img src=&quot;http://fabiensanglard.net/reverse_engineering_strike_commander/tm_FCS-web.jpg&quot; class=&quot;shadowed&quot;&gt;
  &lt;br&gt;
  &lt;br&gt;
  And you could even connect the THRUSTMASTER RUDDER:&lt;br&gt;
  &lt;br&gt;
  &lt;img src=&quot;http://fabiensanglard.net/reverse_engineering_strike_commander/tm_rcs-web.jpg&quot; class=&quot;shadowed&quot;&gt;&lt;br&gt;
  &lt;br&gt;
  Still, there was more: The game also supported a Virtual Cockpit. The
  4-way 'hat switch' on the ThrustMaster allowing to move the pilot's head and follow ground objects/enemy jets without the need for a Virtual Reality HeadSet :&lt;br&gt;
  &lt;br&gt;
  &lt;img src=&quot;http://fabiensanglard.net/reverse_engineering_strike_commander/sick_game_v_cockpit_small.png&quot; class=&quot;shadowed&quot;&gt;
  &lt;img src=&quot;http://fabiensanglard.net/reverse_engineering_strike_commander/sick_game_v_cockpit2_small.png&quot; class=&quot;shadowed&quot;&gt;&lt;/p&gt;

&lt;h2&gt;1993: First Contact&lt;/h2&gt;
&lt;p&gt;
  The game and its 3D engine were mind blowing but required an impossibly powerful machine :
  &lt;/p&gt;&lt;ul&gt;
    &lt;li&gt;IBM PC 486-DX2 66Mhz&lt;/li&gt;
    &lt;li&gt;4MB RAM&lt;/li&gt;
    &lt;li&gt;38MB mandatory installation&lt;/li&gt;
    &lt;li&gt;Game comes on 11 x 1.44MB floppy disks.&lt;/li&gt;
  &lt;/ul&gt;
&lt;p&gt;
  Adjusted to today technological inflation the recommended configuration would be : 
  &lt;/p&gt;&lt;ul&gt;
      &lt;li&gt;8 Cores CPU with 16 GB of RAM.&lt;/li&gt;
      &lt;li&gt;Dual Nvidia Titan GPUs.&lt;/li&gt;
      &lt;li&gt;Mandatory install of 1000 GB.&lt;/li&gt;
      &lt;li&gt;Game comes on five BluRays.&lt;/li&gt;
  &lt;/ul&gt;
  &lt;p&gt;
  And purchasing the game was not enough, you also had to survive the installation ! Upon opening the box you would be faced with 8 floppy disks (
  +3 for the Speech Pack):&lt;br&gt;
  &lt;br&gt;
  
  &lt;img class=&quot;shadowed&quot; src=&quot;http://fabiensanglard.net/reverse_engineering_strike_commander/Strike-Poster_small.png&quot;&gt;
  &lt;img class=&quot;shadowed&quot; src=&quot;http://fabiensanglard.net/reverse_engineering_strike_commander/sc_disks_small.jpg&quot;&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;u&gt;&lt;b&gt;Trivia :&lt;/b&gt;&lt;/u&gt; Notice the poster announcing a Christmas 1991 release. The game would not be completed until 1993 after a long process that Chris Robert labeled &quot;The Apocalypse Now of computer games&quot;.&lt;br&gt;
  &lt;br&gt;
   Decompressing the game from floppies to hard-drive and swapping the 13 flopping disk took a good 30 minutes. And when you thought you were done,
   the game proceeded to generate all the maps. The size of the game would blow up from 24MB to 38MB: Four times the size of any game back them.&lt;br&gt;
    &lt;br&gt;
  &lt;img src=&quot;http://fabiensanglard.net/reverse_engineering_strike_commander/sc_mapgenerator.png&quot; class=&quot;shadowed&quot;&gt;&lt;br&gt;
  &lt;br&gt;
  &lt;u&gt;&lt;b&gt;Trivia :&lt;/b&gt;&lt;/u&gt; A map was generated from a single &quot;seed&quot; (an integer number) that was injected in a pseudo-random numbers generation algorithm.
  This was a clever technique that avoided shipping data by generating the map after installation. If you are curious about this technique, go read &lt;a href=&quot;http://www.amazon.com/The-Backroom-Boys-Secret-British/dp/0571214975&quot;&gt;The Backroom Boys&lt;/a&gt; and the chapter about Frontier Elite game.&lt;br&gt;
  &lt;br&gt;
   The maps generation step took ONE hour on a 386 PC. But Origin Systems had the good idea to ship with &lt;a href=&quot;http://fabiensanglard.net/reverse_engineering_strike_commander/docs/sudden_death.JPG&quot;&gt;the box&lt;/a&gt; a superb 100 pages magazine set in the dystopian 2012 world of the game. &lt;a href=&quot;http://fabiensanglard.net/reverse_engineering_strike_commander/docs/StrikeCommanderManual.pdf&quot;&gt;Sudden Death&lt;/a&gt;  made the entire process less painful ( notice the fake advertisement on page 38 promising the release of Strike Commander for Christmas 2013).
        
   &lt;br&gt;
 &lt;/p&gt;

 &lt;h2&gt;Strike Commander !&lt;/h2&gt;
&lt;p&gt;
  Finally after all those steps, players were able to enjoy the game....in April 1993 ! Despite being 2 years late, the game was everything Origin promised and it sold very well. Many spent nights after nights dogfighting even if for most what was supposed to look like this :&lt;br&gt;
  &lt;br&gt;
   &lt;img src=&quot;http://fabiensanglard.net/reverse_engineering_strike_commander/sc_ingame.png&quot; class=&quot;shadowed&quot;&gt;&lt;br&gt;
   &lt;br&gt;
   ...ended up looking like that on minimum settings :&lt;br&gt;
   &lt;br&gt;
   &lt;img src=&quot;http://fabiensanglard.net/reverse_engineering_strike_commander/sc_ingame_low.png&quot; class=&quot;shadowed&quot;&gt;&lt;br&gt;
&lt;br&gt;
   Overall the game was enough to captivate pilots and generate fond memories.
&lt;/p&gt;




&lt;h2&gt;The Lost Source Code&lt;/h2&gt;
&lt;p&gt;
  With the Oculus Rift release, my interest in Strike Commander peaked again: The hardware was ready. Since
  it was a 20 years old game, I expected the source code to have been released but I quickly found out the sad story of Origin Systems 
  decline.&lt;br&gt;
  &lt;br&gt;
  Origin Systems was acquired by Electronic Arts in September 1992 and all projects were canceled circa 1999 following poor sales of
  Ultima 9. The company was to refocus on an other field they pioneered: &lt;a href=&quot;http://en.wikipedia.org/wiki/Ultima_Online&quot;&gt;MMORPG Ultima Online&lt;/a&gt;.
  Most people assume the source codes and gold versions of all finished games were stored in a Vault somewhere at EA. 
  But after getting in touch with people at &lt;a href=&quot;http://www.wcnews.com/chatzone/threads/wing-commander-source-code.24840/&quot;&gt;Wing Commander CIC&lt;/a&gt;, 
  it appeared that all the source code was lost when the company closed.&lt;br&gt;
  &lt;br&gt;
  It is something hard to believe today but back then developers and companies were more focused on the next title
  instead of preserving &quot;old things&quot;, there was not nostalgia factor, no huge fan base and no market like &lt;a href=&quot;http://www.gog.com/&quot;&gt;Good Old Games&lt;/a&gt; today. Many stories could illustrate how &quot;primitive&quot; source control was but the best 
  is probably the &quot;ZAP SC&quot; story at 15m14s :&lt;br&gt;
  &lt;br&gt;
  &lt;/p&gt;&lt;p&gt;
     &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/K8gj2YyB0Hg#start=922&quot;&gt;&lt;/iframe&gt;
  &lt;/p&gt;
  &lt;br&gt;
  On his first day one developer managed to delete the full 900MB of Strike Commander source tree. The IT team spent 72 hours recovering everything from developers machines. The interview also mention that Wing Commander 1 and 2 code was exchanged via floppy disks: They did not have a network until SC !
  &lt;br&gt;
  &lt;br&gt;
  &lt;u&gt;&lt;b&gt;Trivia :&lt;/b&gt;&lt;/u&gt; In a surprising turn of event, some of the source code re-emerged recently via ex-Origin developers: Wing Commander CIC 
  maintains an off-line archive which features the source codes of &lt;a href=&quot;http://cdn.wcnews.com/newestshots/full/squadronsourcecode.png&quot;&gt;Wing Commander I&lt;/a&gt;
  &lt;a href=&quot;http://cdn.wcnews.com/newestshots/full/wc3sourcecode.PNG&quot;&gt;Wing Commander  III&lt;/a&gt; and people working on Ultima 8 were offered (but turned down) 
  the source code of &quot;Ultima 8: Pagan&quot; by &lt;a href=&quot;http://exult.sourceforge.net/forum/read.php?f=1&amp;amp;i=13863&amp;amp;t=13863&quot;&gt;an anonymous source&lt;/a&gt;. As for Strike Commander, I have never heard of someone having it.



&lt;h2&gt;Reverse Engineering: Can it be done ?&lt;/h2&gt;
&lt;p&gt;
  Over the years many teams had done work on Origin Systems game and reached great results:
  &lt;/p&gt;
  &lt;p&gt;
   How long and how hard would it be ? After chatting with Gregory Montoir who did most of the reverse engineer on &lt;a href=&quot;http://fabiensanglard.net/anotherWorld_code_review/index.php&quot;&gt;Another World&lt;/a&gt;
  I learned that working one hour per evening allowed to reverse 10KB of assembly to C each month. There are many executable in Strike Commander and the initial discouraging time estimate was :&lt;br&gt;
 &lt;br&gt;
  &lt;/p&gt;&lt;pre class=&quot;long&quot;&gt;


  INSTALL.EXE       7,793 bytes :  2 weeks
  MKTERR.EXE      203,744 bytes :  1.5 years
  SC.EXE           20,000 bytes :  1 month
  MKGAME.EXE      131,696 bytes :  1 year
  OPTTEST.EXE     870,528 bytes :  7 years
  STRIKE.EXE      746,304 bytes :  6 years
  =============================================

                                  15 years, 7 months and 2 weeks. Ouch.

&lt;/pre&gt;
&lt;p&gt;
  That was upsetting: If someone had started back in 1993 then he would have finished six years ago and I would just have had to &lt;code&gt;git clone &lt;/code&gt; it :( ! But after starting up &lt;a href=&quot;https://www.hex-rays.com/index.shtml&quot;&gt;IDA&lt;/a&gt; and taking a quick look
  it turned out that not all of it would have to be reverse engineered: The 3D engine is fully contained within STRIKE.EXE and a small team 
  could do it in a reasonable amount of time.

  &lt;br&gt;
&lt;/p&gt;

&lt;h2&gt;Road Map&lt;/h2&gt;
&lt;p&gt;
  The road-map I initially drew in order to reverse engineer Strike Commander was as follow :
  &lt;/p&gt;&lt;ol&gt;
   &lt;li&gt;Gather as much documentation as possible.&lt;/li&gt;
   &lt;li&gt;Understand the Global Architecture of Strike Commander.&lt;/li&gt;
   &lt;li&gt;Reverse-Engineer the Game Assets.&lt;/li&gt;
   &lt;li&gt;Document step 3 and extrapolate (Visual Surface Determination method, Level Of Detail, ...)&lt;/li&gt;
   &lt;li&gt;Re-implement the 3D engine and build &lt;code&gt;NEO_STRIKE.EXE&lt;/code&gt;&lt;/li&gt;
   &lt;li&gt;Add support for VR device Oculus Rift.&lt;/li&gt;
  &lt;/ol&gt;
  &lt;p&gt;
    And then I got busy.
&lt;/p&gt;


&lt;h2&gt;Next&lt;/h2&gt;
&lt;p&gt;
  &lt;a href=&quot;http://fabiensanglard.net/reverse_engineering_strike_commander/strike_commander_architecture.php&quot;&gt;Architecture and Documentation&lt;/a&gt;

  
&lt;/p&gt;

    
      
   

 &lt;br&gt;
    &lt;h3&gt;Add a comment&lt;/h3&gt; 
    

    

&lt;h3&gt;Comments (0)&lt;/h3&gt;
    &lt;br&gt;

    
    &lt;a name=&quot;c5t_comment&quot;&gt;&lt;/a&gt;
      
 
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
  
    
    &amp;#13;    
    
    
    
    
    
    
   
 
    
  
    &amp;#13;&lt;h2&gt;&amp;#xA0;&lt;/h2&gt;
&lt;p&gt;@2014&lt;/p&gt;

		&lt;/section&gt;&lt;/div&gt;
</description>
<title>
Reverse Engineering Strike Commander
</title>
</item>
</channel>
</rss>
