<?xml version='1.0' encoding='UTF-8'?>
<rss version='2.0'>
<channel>
<generator>
clj-rss
</generator>
<link>
https://news.ycombinator.com
</link>
<title>
myread
</title>
<description>
myread
</description>
<item>
<link>
http://blogs.reuters.com/macroscope/2014/01/24/why-are-us-corporate-profits-so-high-because-wages-are-so-low/
</link>
<description>
&lt;div&gt;
  		      
   &lt;div id=&quot;postcontent&quot;&gt;&lt;p&gt;U.S. businesses have never had it so good.&lt;/p&gt;
&lt;p&gt;Corporate cash piles have never been bigger, either in dollar terms or as a share of the economy.&lt;/p&gt;
&lt;p&gt;The labor market, meanwhile, is still millions of jobs short of where it was before the global financial crisis first erupted over six years ago.&lt;/p&gt;
&lt;p&gt;Coincidence?&lt;/p&gt;
&lt;p&gt;Not in the slightest, according to Jan Hatzius, chief U.S. economist at Goldman Sachs:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;#x201C;The strength (in profits) is directly related to the weakness in hourly wages, which are still growing at just a 2% nominal pace. The weakness of wages and the resulting strength of profits are telling signs that the US labor market is still far from full employment.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Companies have not been unable to raise prices much because of the economic recovery has been fragile. But they&amp;#x2019;ve still managed to boost profits beyond anything ever seen before because they&amp;#x2019;ve got away with employing as few workers as possible at as low a rate as possible.&lt;/p&gt;
&lt;p&gt;Compare and contrast these two charts:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blogs.reuters.com/macroscope/files/2014/01/corpprofit-1.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-12386&quot; title=&quot;corpprofit (1)&quot; src=&quot;http://blogs.reuters.com/macroscope/files/2014/01/corpprofit-1.jpg&quot; alt=&quot;&quot; width=&quot;600&quot;&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://blogs.reuters.com/macroscope/files/2014/01/hatzius1.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-12381&quot; title=&quot;hatzius&quot; src=&quot;http://blogs.reuters.com/macroscope/files/2014/01/hatzius1.jpg&quot; alt=&quot;&quot; width=&quot;627&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So, corporate profits are their highest ever and wage growth is near its lowest in half a century. But don&amp;#x2019;t expect the transfer of that cash from businesses to workers to start any time soon, says Hatzius:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;#x201C;The bottom line is that the favorable environment for corporate profits should persist for some time yet, and the case for an acceleration in the near term is strong. Hourly labor costs would need to grow more than 4% to eat into margins on a systematic basis. Such a strong acceleration still seems to be at least a couple of years off.&amp;#x201D;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
		    &lt;/div&gt;
</description>
<title>
Why are US corporate profits so high? Because wages are so low
</title>
</item>
<item>
<link>
http://america.aljazeera.com/articles/2014/1/26/guards-may-be-responsibleforhalfofprisonrapes.html
</link>
<description>
&lt;div&gt;&lt;div class=&quot;article articleComponent&quot;&gt;















&lt;/div&gt;

				&lt;div class=&quot;parsys mainpar&quot;&gt;&lt;p class=&quot;image-info&quot;&gt;&lt;figcaption&gt;Inmates sit in the county jail in Williston, N.D. on July 26, 2013.&lt;/figcaption&gt;&lt;small class=&quot;image-credit&quot;&gt;Andrew Burton/Getty Images&lt;/small&gt;&lt;/p&gt;
	
	

&lt;/div&gt;
&lt;div class=&quot;text section&quot;&gt;












&lt;p&gt;Allegations of rape and sexual assault involving prison inmates are increasing, and nearly half of those assaults are committed against prisoners by correctional officers, according to a &lt;a href=&quot;http://www.bjs.gov/index.cfm?ty=pbdetail&amp;amp;iid=4881&quot;&gt;new report issued by the Justice Department&amp;#x2019;s Bureau of Justice Statistics&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Prison and jail administrators reported 8,763 cases of alleged sexual abuse of inmates 2011, representing an increase of 4 percent from the 8,404 that were reported in 2010 and an 11 percent jump from the 7,855 cases reported in 2009, the report said.&lt;/p&gt;
&lt;p&gt;The report released late last week defined sexual victimization as any non-consensual sexual acts, abusive touching, threats and verbal sexual harassment. It involved surveying federal and state prisons, private prisons, local jails, military prisons and jails located in Indian country, all of which hold a collective 1.97 million inmates.&lt;/p&gt;
&lt;p&gt;The issue of prison rape has received heightened attention since Congress passed the &lt;a href=&quot;http://www.ojp.usdoj.gov/programs/prisonrapeelimination.htm&quot;&gt;Prison Rape Elimination Act&lt;/a&gt; in 2003, a federal law calling for prisons and jails to keep detailed records of incidents of rape to be published by the government annually.&lt;/p&gt;
&lt;p&gt;This year&amp;#x2019;s report, which crunched data from 2011, said that 10 percent of the cases reported that year were &amp;#x201C;substantiated,&amp;#x201D; meaning that they were confirmed to have happened after an investigation was launched.&lt;/p&gt;
&lt;p&gt;That means 90 percent of the cases reported by inmates but were not substantiated. The report did not clarify whether those cases had also been investigated and then dismissed.&lt;/p&gt;
&lt;p&gt;Some 49 percent of the incidents that year involved prison staff members committing what the report called &amp;#x201C;sexual misconduct,&amp;#x201D; or otherwise sexually harassing inmates, with the other 51 percent of cases comprising inmates assaulting fellow inmates.&lt;/p&gt;
&lt;p&gt;Among the substantiated staff-on-inmate cases in 2011, 54 percent were committed by women, the report said. From 2009 to 2011, 84 percent of the substantiated staff-on-inmate cases involved a sexual relationship with a female staff member that &amp;#x201C;appeared to be willing,&amp;#x201D; compared to 37 percent of the cases involving male staff members during the same time period. The report noted, however, that regardless of whether the sexual relationship between an inmate and a correctional officer was consensual, it was illegal.&lt;/p&gt;
&lt;p&gt;In the cases of sexual assault or &amp;#x201C;willing&amp;#x201D; sexual relationships with staff members, more than three-quarters of the correctional officers resigned or were fired, and just 45 percent were arrested or prosecuted.&lt;/p&gt;
&lt;p&gt;Women prisoners appeared to experience disproportionate numbers of sexual assaults; while they represented 7 percent of state and federal prison inmates from 2009 to 2001, 22 percent of inmate-on-inmate cases involved women, as they did among 33 percent of staff-on-inmate incidents.&lt;/p&gt;
&lt;p&gt;Two-thirds of the inmates who had been sexually assaulted by other inmates received medical examinations, and one-third were given rape kits.&lt;/p&gt;
&lt;p&gt;The report did not indicate whether the increased incidence of alleged rapes and sexual assaults in prisons and jails might have been due to more reporting by inmates, or to heightened awareness of the problem by prison staff.&lt;/p&gt;
&lt;p&gt;BJS statistician Allan Beck, who was a co-author of the report, told Reuters that &lt;a href=&quot;http://www.bjs.gov/content/pub/pdf/svpjri1112.pdf&quot;&gt;a study from May 2013&lt;/a&gt;&amp;#xA0;(PDF) conducted by the same agency came up with much larger numbers, tallying some 80,000 inmate allegations of sexual abuse or assault during 2011 and 2012.&lt;/p&gt;
&lt;p&gt;&amp;#x201C;Of course we find much higher rates of sexual victimization through inmates' self-reports than what comes through in the official records,&quot; he told Reuters.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<title>
US Government: Guards may be responsible for half of prison sex assaults
</title>
</item>
<item>
<link>
http://lucumr.pocoo.org/2014/1/27/python-on-wheels/
</link>
<description>
&lt;div&gt;&lt;div class=&quot;body&quot;&gt;
      
  

  
  &lt;p class=&quot;date&quot;&gt;written on Monday, January 27, 2014
  

  &lt;/p&gt;&lt;p&gt;The python packaging infrastructure has long received criticism from both
Python developers as well as system administrators.  For a long time even
the Python community in itself could not agree on what exactly the tools
to use were.  We had distutils, setuptools, distribute, distutils2 as
basic distribution mechanisms and then virtualenv, buildout, easy_install
and pip as high level tools to deal with this mess.&lt;/p&gt;
&lt;p&gt;As distribution formats before setuptools we had source files and for
Windows there were some binary distributions in form of MSIs.  On Linux we
had &lt;tt class=&quot;docutils literal&quot;&gt;bdist_dumb&lt;/tt&gt; which was historically broken and &lt;tt class=&quot;docutils literal&quot;&gt;bdist_rpm&lt;/tt&gt; which
only worked on Red Hat based systems.  But even &lt;tt class=&quot;docutils literal&quot;&gt;bdist_rpm&lt;/tt&gt; did not
actually work good enough that people were actually using it.&lt;/p&gt;
&lt;p&gt;A few years ago PJE stepped up and tried to fix the initial distribution
problems by providing the mix of setuptools + pkg_resources to improve
distutils and to provide metadata for Python packages.  In addition to
that he wrote the easy_install tool to install packages.  In lack of a
distribution format that supported the required metadata, the egg format
was invented.&lt;/p&gt;
&lt;p&gt;Python eggs are basically zip packages that include the python package
plus the metadata that is required.  Even though many people probably
never built eggs intentionally, the egg metadata is still alive and
kicking and everybody deploys things through setuptools now.&lt;/p&gt;
&lt;p&gt;Now unfortunately a few years ago the community split in half and part of
the community declared the death to binary distributions and eggs.  When
that happened the replacement for easy_install (pip) stopped accepting
eggs altogether.&lt;/p&gt;
&lt;p&gt;Fast forward a few years later.  The removal of binary distributions has
become noticed very painfully as people started more and more cloud
deployment and having to recompile C libraries on every single machine is
no fun.  Because eggs at that point were poorly understood I assume, they
were reimplemented on top of newer PEPs and called &lt;a class=&quot;reference external&quot; href=&quot;http://www.python.org/dev/peps/pep-0427/&quot;&gt;wheels&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As a general information before we dive in: I'm assuming that you are in
all cases operating out of a virtualenv.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;what-are-wheels&quot;&gt;
&lt;h2&gt;What are Wheels&lt;/h2&gt;
&lt;p&gt;So let's start simple.  What exactly are wheels and what's the difference
to eggs?  Both eggs and wheels are basically just zip files.  The main
difference is that you could import eggs without having to unpack them.
Wheels on the other hand are just distribution archives that you need to
unpack upon installation.  While there are technically no reasons for
wheels not to be importable, that was never the plan to begin with and
there is currently no support for importing wheels directly.&lt;/p&gt;
&lt;p&gt;The other main difference is that eggs included compiled python bytecode
whereas wheels do not.  The biggest advantage of this is that you don't
need to make wheels for different Python versions for as long as you don't
ship binary modules that link against libpython.  On newer Python 3
versions you can actually even safely link against libpython for as long
as you only use the stable ABI.&lt;/p&gt;
&lt;p&gt;There are a few problems with wheels however.  One of the problems is that
wheels inherit some of the problems that egg already had.  For instance
Linux binary distributions are still not an option for most people because
of two basic problems: Python itself being compiled in different forms on
Linux and modules being linked against different system libraries.  The
first problem is caused by Python 2 coming in two flavours that are both
incompatible to each other: UCS2 Pythons and UCS4 Pythons.  Depending on
which mode Python is compiled with the ABI looks different.  Presently the
wheel format (from what I can tell) does not annotate for which Python
unicode mode a library is linked.  A separate problem is that Linux
distributions are less compatible to each other as you would wish and
concerns have been brought up that wheels compiled on one distribution
will not work on others.&lt;/p&gt;
&lt;p&gt;The end effect of this is that you presently cannot upload binary wheels
to PyPI on concerns of incompatibility with different setups.&lt;/p&gt;
&lt;p&gt;In addition to that wheel currently only knows two extremes: binary
packages and pure Python packages.  When something is a binary package
it's specific to a Python version on 2.x.  Right now that's actually not
the worst thing in the world because Python 2.x is end of life and we
really only need to build packages for 2.7 for a long time to come.  If
however we would start considering Python 2.8 then it would be interesting
to have a way to say: this package is Python version independent but it
ships binaries so it needs to be architecture specific.&lt;/p&gt;
&lt;p&gt;The reason why you might have a package like this are packages that ship
shared libraries loaded with ctypes of CFFI.  These libraries do not link
against libpython and as such would work cross Python (even cross Python
implementation which means you can use them with pypy).&lt;/p&gt;
&lt;p&gt;On the bright side: nothing stops yourself from using binary wheels for
your own homogenous infrastructure.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;building-wheels&quot;&gt;
&lt;h2&gt;Building Wheels&lt;/h2&gt;
&lt;p&gt;So now that you know what a wheel is, how do you make one?  Building a
wheel out of your own libraries is a very straightforward process.  All
you need to do is using a recent version of &lt;tt class=&quot;docutils literal&quot;&gt;setuptools&lt;/tt&gt; and the
&lt;tt class=&quot;docutils literal&quot;&gt;wheel&lt;/tt&gt; library.  Once you have both installed you can build a wheel out
of your package by running this command:&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
$ python setup.py bdist_wheel
&lt;/pre&gt;
&lt;p&gt;This will throw a wheel into your distribution folder.  There are however
one extra things you should be aware of and that's what happens if you
ship binaries.  By default the wheel you build (assuming you don't use any
binary build steps as part of your setup.py) is to produce a pure Python
wheel.  This means that even if you ship a &lt;tt class=&quot;docutils literal&quot;&gt;.so&lt;/tt&gt;, &lt;tt class=&quot;docutils literal&quot;&gt;.dylib&lt;/tt&gt; or &lt;tt class=&quot;docutils literal&quot;&gt;.dll&lt;/tt&gt;
as part of your package data the wheel spit out will look like it's
platform independent.&lt;/p&gt;
&lt;p&gt;The solution for this problem is to manually subclass the setuptools
distribution to flip the purity flag to false:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;setuptools&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;setuptools.dist&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Distribution&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BinaryDistribution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Distribution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;is_pure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;include_package_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;distclass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BinaryDistribution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;installing-wheels&quot;&gt;
&lt;h2&gt;Installing Wheels&lt;/h2&gt;
&lt;p&gt;Now you have a wheel, how do you install it?  On a recent pip version you
can install it this way:&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
$ pip install package-1.0-cp27-none-macosx_10_7_intel.whl
&lt;/pre&gt;
&lt;p&gt;But what about your dependencies?  This is what it gets a bit tricker.
Generally what you would want is to install a package without ever
connecting to the internet.  Pip thankfully supports that by disabling
downloading from an index and by providing a path to a folder for all the
things it needs to install.  So assuming you have all the wheels for all
your dependencies in just the right version available, you can do this:&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
$ pip install --no-index --find-links=path/to/wheels package==1.0
&lt;/pre&gt;
&lt;p&gt;This will then install the &lt;tt class=&quot;docutils literal&quot;&gt;1.0&lt;/tt&gt; version of &lt;tt class=&quot;docutils literal&quot;&gt;package&lt;/tt&gt; into your
virtualenv.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;wheels-for-dependencies&quot;&gt;
&lt;h2&gt;Wheels for Dependencies&lt;/h2&gt;
&lt;p&gt;Alright, but what if you don't have the wheels for your dependencies?  Pip
in theory supports doing that through the &lt;tt class=&quot;docutils literal&quot;&gt;wheel&lt;/tt&gt; command.  In theory
this is supposed to work:&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
pip wheel --wheel-dir=path/to/wheels package==1.0
&lt;/pre&gt;
&lt;p&gt;In this case wheel will throw all packages that package depends on into
the given folder.  There are two problems with this.&lt;/p&gt;
&lt;p&gt;The first one is that the command currently has a bug and does not
actually throw dependencies into the wheel folder if the dependencies are
already wheels.  What the command is supposed to do is to collect all the
dependencies and the convert them into wheels if necessary and then places
them in the wheel folder.  What's actually happening though is that it
only places wheels there for things that were not wheels to begin with.
So if a dependency is already available as a wheel on PyPI then pip will
skip it and not actually put it there.&lt;/p&gt;
&lt;p&gt;The workaround is a shell script that goes through the download cache and
manually moves downloaded wheels into the wheel directory:&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
#!/bin/sh
WHEEL_DIR=path/to/wheels
DOWNLOAD_CACHE_DIR=path/to/cache
rm -rf $DOWNLOAD_CACHE_DIR
mkdir -p $DOWNLOAD_CACHE_DIR

pip wheel --use-wheel -w &quot;$WHEEL_DIR&quot; -f &quot;$WHEEL_DIR&quot; \
  --download-cache &quot;$DOWNLOAD_CACHE_DIR&quot; package==1.0
for x in &quot;$DOWNLOAD_CACHE_DIR/&quot;*.whl; do
  mv &quot;$x&quot; &quot;$WHEEL_DIR/${x##*%2F}&quot;
done
&lt;/pre&gt;
&lt;p&gt;The second problem is more severe.  How can pip wheel find your own
package if it's not on PyPI?  The answer is: it cannot.  So what the
documentation generally recommends is to not run &lt;tt class=&quot;docutils literal&quot;&gt;pip wheel package&lt;/tt&gt; but
to run &lt;tt class=&quot;docutils literal&quot;&gt;pip wheel &lt;span class=&quot;pre&quot;&gt;-r&lt;/span&gt; requirements.txt&lt;/tt&gt; where &lt;tt class=&quot;docutils literal&quot;&gt;requirements.txt&lt;/tt&gt;
includes all the dependencies of the package.  Once that is done, manually
copy your own package's wheel in there and distribute the final wheel
folder.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;devpi-based-package-building&quot;&gt;
&lt;h2&gt;DevPI Based Package Building&lt;/h2&gt;
&lt;p&gt;That workaround with depending on the requirements certainly works in
simple situations, but what do you do if you have multiple in-house Python
packages that depend on each other?  It quickly falls apart.&lt;/p&gt;
&lt;p&gt;Thankfully Holker Krekel sat down last year and build a solution for this
problem called &lt;a class=&quot;reference external&quot; href=&quot;http://doc.devpi.net/&quot;&gt;devpi&lt;/a&gt;.  DevPI is essentially a
practical hack around how pip interacts with PyPI.  Once you have DevPI
installed on your own computer it acts as a transparent proxy in front of
PyPI and you can point pip to install from your local DevPI server instead
of the public PyPI.  Not only that, it also automatically caches all
packages downloaded from PyPI locally so even if you kill your network
connection you can continue downloading those packages as if PyPI was
still running.  In addition to being a proxy you can also upload your own
packages into that local server so once you point pip to that server it
will both find public packages as well as your own ones.&lt;/p&gt;
&lt;p&gt;In order to use DevPI I recommend making a local virtualenv and installing
it into that and then linking &lt;tt class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;devpi-server&lt;/span&gt;&lt;/tt&gt; and &lt;tt class=&quot;docutils literal&quot;&gt;devpi&lt;/tt&gt; into your
search path (in my case &lt;tt class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;~/.local/bin&lt;/span&gt;&lt;/tt&gt; is on my &lt;tt class=&quot;docutils literal&quot;&gt;PATH&lt;/tt&gt;):&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
$ virtualenv devpi-venv
$ devpi-venv/bin/pip install --ugprade pip wheel setuptools devpi
$ ln -s `pwd`/devpi-venv/bin/devpi ~/.local/bin
$ ln -s `pwd`/devpi-venv/bin/devpi-server ~/.local/bin
&lt;/pre&gt;
&lt;p&gt;Afterwards all you need to do is to start devpi-server and it will
continue running until you shut it down or reboot your computer:&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
$ devpi-server --start
&lt;/pre&gt;
&lt;p&gt;Once it's running you need to initialize it once:&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
$ devpi use http://localhost:3141
$ devpi user -c $USER password=
$ devpi login $USER --password=
$ devpi index -c yourproject
&lt;/pre&gt;
&lt;p&gt;In this case because I use DevPI locally for myself only I use the same
name for the DevPI user as I use for my system.  As the last step I create
an index named after my project.  You can have multiple indexes next to
each other to separate your work.&lt;/p&gt;
&lt;p&gt;To point pip to your DevPI you can export an environment variable:&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
$ export PIP_INDEX_URL=http://localhost:3141/$USER/yourproject/+simple/
&lt;/pre&gt;
&lt;p&gt;Personally I place this in the &lt;tt class=&quot;docutils literal&quot;&gt;postactivate&lt;/tt&gt; script of my virtualenv to
not accidentally download from the wrong DevPI index.&lt;/p&gt;
&lt;p&gt;To place your own wheels on your local DevPI you can use the &lt;tt class=&quot;docutils literal&quot;&gt;devpi&lt;/tt&gt;
binary:&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
$ devpi use yourproject
$ devpi upload --no-vcs --formats=bdist_wheel
&lt;/pre&gt;
&lt;p&gt;The &lt;tt class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;--no-vcs&lt;/span&gt;&lt;/tt&gt; flag disables some magic in DevPI which tries to detect
your version control system and moves some files off first.  Personally
this does not work for me because I ship files in my projects that I do
not want to put into version control (like binaries).&lt;/p&gt;
&lt;p&gt;Lastly I would strongly recommend breaking your &lt;tt class=&quot;docutils literal&quot;&gt;setup.py&lt;/tt&gt; files in a
way that PyPI will reject them but DevPI will accept them to not
accidentally release your code with &lt;tt class=&quot;docutils literal&quot;&gt;setup.py release&lt;/tt&gt;.  The easiest way
to accomplish this is to add an invalid PyPI trove classifier to your
setup.py:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;classifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Private :: Do Not Upload'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;wrapping-it-up&quot;&gt;
&lt;h2&gt;Wrapping it Up&lt;/h2&gt;
&lt;p&gt;Now with all that done you can start inter depending on your own private
packages and build out wheels in one go.  Once you have that, you can zip
them up and upload them to another server and install them into a separate
virtualenv.&lt;/p&gt;
&lt;p&gt;All in all this whole process will get a bit simpler when the &lt;tt class=&quot;docutils literal&quot;&gt;pip
wheel&lt;/tt&gt;  command stops ignoring already existing wheels.  Until then, a
shell script is not the worst workaround.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;comparing-to-eggs&quot;&gt;
&lt;h2&gt;Comparing to Eggs&lt;/h2&gt;
&lt;p&gt;Wheels currently seem to have more traction than eggs.  The development is
more active, PyPI started to add support for them and because all the
tools start to work for them it seems to be the better solution.  Eggs
currently only work if you use easy_install instead of pip which seems to
be something very few people still do.&lt;/p&gt;
&lt;p&gt;I assume the Zope community is still largely based around eggs and
buildout and I assume if an egg based deployment works for you, then
that's the way to go.  I know that many did not actually use eggs at all
to install Python packages and instead built virtualenvs, zipped them up
and sent them to different servers.  For that kind of deployment, wheels
are definitely a much superior solution because it means different servers
can have the libraries in different paths.  This previously was an issue
because the &lt;tt class=&quot;docutils literal&quot;&gt;.pyc&lt;/tt&gt; files were created on the build server for the
virtualenv and the &lt;tt class=&quot;docutils literal&quot;&gt;.pyc&lt;/tt&gt; files include the filenames.&lt;/p&gt;
&lt;p&gt;With wheels the &lt;tt class=&quot;docutils literal&quot;&gt;.pyc&lt;/tt&gt; files are created upon installation into the
virtualenv and will automatically include the correct paths.&lt;/p&gt;
&lt;p&gt;So there you have it.  Python on wheels.  It's there, it kinda works, and
it's probably worth your time.&lt;/p&gt;
&lt;/div&gt;


  
  &lt;p class=&quot;tags&quot;&gt;This entry was tagged
    
      &lt;a href=&quot;http://lucumr.pocoo.org/tags/deployment/&quot;&gt;deployment&lt;/a&gt;, 
      &lt;a href=&quot;http://lucumr.pocoo.org/tags/python/&quot;&gt;python&lt;/a&gt; and 
      &lt;a href=&quot;http://lucumr.pocoo.org/tags/thoughts/&quot;&gt;thoughts&lt;/a&gt;
  

  

      &lt;/p&gt;&lt;/div&gt;
      
    &lt;/div&gt;
</description>
<title>
Python on Wheels
</title>
</item>
<item>
<link>
https://www.youtube.com/watch?v=c6SUOeAqOjU
</link>
<description>
&lt;figure class=&quot;video blockFigure&quot;&gt;&lt;iframe width=&quot;640&quot; height=&quot;360&quot; src=&quot;http://www.youtube.com/embed/c6SUOeAqOjU&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;figcaption&gt;Ted Nelson continues to cast doubt on Computer Basics.&lt;/figcaption&gt;&lt;/figure&gt;
</description>
<title>
Ted Nelson: It All Went Wrong at Xerox PARC
</title>
</item>
<item>
<author>
Sten Tamkivi
</author>
<link>
http://www.theatlantic.com/international/archive/2014/01/lessons-from-the-worlds-most-tech-savvy-government/283341/
</link>
<description>
&lt;div class=&quot;article-content&quot; score=&quot;37.5&quot;&gt;

                
                
        &lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;http://cdn.theatlantic.com/newsroom/img/posts/2014/01/RTR2Q5DK/fa571bff7.jpg&quot; width=&quot;570&quot;&gt;&lt;figcaption class=&quot;caption&quot;&gt;People wave Estonian national flags during a concert in Tallinn, in August 2011. (Ints Kalnins/Reuters)&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;em&gt;Lately, I have been getting a lot of questions about Healthcare.gov. People want to know why it cost between &lt;/em&gt;&lt;a href=&quot;http://online.wsj.com/news/articles/SB10001424052702304384104579139461596987366&quot;&gt;&lt;em&gt;two and four times&lt;/em&gt;&lt;/a&gt;&lt;em&gt; as much money to create a broken website than to build the original iPhone. It’s an excellent question. However, in my experience, understanding why a project went wrong tends to be far less valuable than understanding why a project went right. So, rather than explaining why paying anywhere between $300 million and $600 million to build the first iteration of Healthcare.gov was a bad idea, I would like to focus attention on a model for software-enabled government that works and could serve as a template for a more effective U.S. government.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Early in my career as a venture capitalist, we invested in Skype and I went on the board. One of the many interesting aspects of Skype was that it was based in Estonia, a small country with a difficult history. Over the centuries, Estonia has been invaded by many countries including Denmark, Sweden, Germany, and, most recently, the Soviet Union. Now independent but well aware of their past, the Estonian people are humble, pragmatic, and proud of their freedom, but dubious of overly optimistic forecasts. In some ways, they have the ideal culture for technology adoption: hopeful, yet appropriately skeptical.&lt;/em&gt;&lt;/p&gt;


&lt;p&gt;&lt;em&gt;Supported by this culture, the Estonian government has built the technology platform that everyone wishes we had here. To explain how they did it, I asked an Estonian and one of our Entrepreneurs in Residence, &lt;a href=&quot;http://sten.tamkivi.com/&quot; target=&quot;_blank&quot;&gt;Sten Tamkivi,&lt;/a&gt; to tell the story. His response is below.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;— Ben Horowitz, co-founder and partner of the venture capital firm &lt;a href=&quot;http://www.a16z.com/&quot;&gt;Andreessen Horowitz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;***&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://estonia.eu/&quot; target=&quot;_blank&quot;&gt;Estonia&lt;/a&gt; may not show up on Americans’ radar too often. It is a tiny country in northeastern Europe, just next to Finland. It has the territory of the Netherlands, but 13 times less people—its 1.3 million inhabitants is comparable to Hawaii’s population. As a friend from India recently quipped, “What is there to govern?”&lt;/p&gt;

&lt;p&gt;What makes this tiny country interesting in terms of governance is not just that the people can elect their parliament online or get tax overpayments back within two days of filing their returns. It is also that this level of service for citizens is not the result of the government building a few websites. Instead, Estonians started by redesigning their entire information infrastructure from the ground up with openness, privacy, security, and ‘&lt;a href=&quot;http://en.wikipedia.org/wiki/Future_proof&quot;&gt;future-proofing&lt;/a&gt;’ in mind.&lt;/p&gt;

&lt;p&gt;The first building block of e-government is telling citizens apart. This sounds blatantly obvious, but alternating between referring to a person by his social security number, taxpayer number, and other identifiers doesn’t cut it. Estonia uses a simple, unique ID methodology across all systems, from paper passports to bank records to government offices and hospitals. A citizen with the &lt;a href=&quot;http://en.wikipedia.org/wiki/National_identification_number#Estonia&quot; target=&quot;_blank&quot;&gt;personal ID code&lt;/a&gt; 37501011234 is a male born in the 20th century (3) in year ’75 on January 1 as the 123rd baby of that day. The number ends with a computational checksum to easily detect typos.&lt;/p&gt;

&lt;p&gt;For these identified citizens to transact with each other, Estonia passed the &lt;a href=&quot;https://www.riigiteataja.ee/en/eli/530102013080/consolide&quot; target=&quot;_blank&quot;&gt;Digital Signatures Act&lt;/a&gt; in 2000. The state standardized a national &lt;a href=&quot;http://en.wikipedia.org/wiki/Public-key_infrastructure&quot; target=&quot;_blank&quot;&gt;Public Key Infrastructure&lt;/a&gt; (PKI), which binds citizen identities to their cryptographic keys, and now doesn’t care if any Tiit and Toivo (to use common Estonian names) sign a contract in electronic form with certificates or plain ink on paper. A &lt;a href=&quot;http://www.theatlantic.com/international/archive/2013/12/behold-the-worlds-first-digitally-signed-international-agreement/282582/&quot;&gt;signature is a signature&lt;/a&gt; in the eyes of the law.&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;http://cdn.theatlantic.com/newsroom/img/posts/2014/01/estonia/fdfcc1645.jpg&quot; width=&quot;570&quot;&gt;&lt;figcaption class=&quot;caption&quot;&gt;Estonian Prime Minister Andrus Ansip signs an e-services agreement. (Government of Estonia)&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;As a quirky side effect, this foundational law also forced all decentralized government systems to become digital “by market demand.” No part of the Estonian government can turn down a citizen’s digitally signed document and demand a paper copy&lt;strong&gt; &lt;/strong&gt;instead. As citizens opt for convenience, bureaucrats see a higher inflow of digital forms and are self-motivated to invest in systems that will help them manage the process. Yet a social worker in a small village can still provide the same service with no big investment by handling the small number of digitally signed email attachments the office receives.&lt;/p&gt;

&lt;p&gt;To prevent this system from becoming obsolete in the future, the law did not lock in the technical nuances of digital signatures. In fact, implementation has been changing over time. Initially, Estonia put a microchip in the traditional &lt;a href=&quot;http://id.ee/index.php?id=30500&quot; target=&quot;_blank&quot;&gt;ID cards&lt;/a&gt; issued to every citizen for identification and domestic travel inside the European Union. The chip carries two certificates: one for legal signatures and the other for authentication when using a website or service that recognizes the government's identification system (online banking, for example). Every person over 15 is required to have an ID card, and there are now over 1.2 million active cards. That’s close to 100-percent penetration of the population.&lt;/p&gt;

&lt;p&gt;As mobile adoption in Estonia rapidly approached the current 144 percent (the third-highest in Europe), digital signatures adapted too. Instead of carrying a smartcard reader with their computer, Estonians can now get a &lt;a href=&quot;http://mobiil.id.ee/&quot; target=&quot;_blank&quot;&gt;Mobile ID&lt;/a&gt;-enabled SIM card from their telecommunications operator. Without installing any additional hardware or software, they can access secure systems and affix their signatures by simply typing PIN codes on their mobile phone.&lt;/p&gt;

&lt;p&gt;As of this writing, between ID cards and mobile phones, more than a million Estonians have &lt;a href=&quot;http://id.ee/?lang=en&amp;amp;id=&quot;&gt;authenticated 230 million times and given 140 million legally binding signatures&lt;/a&gt;. Besides the now-daily usage of this technology for commercial contracts and bank transactions, the most high-profile use case has been &lt;a href=&quot;http://e-estonia.com/components/i-voting&quot; target=&quot;_blank&quot;&gt;elections&lt;/a&gt;. Since becoming the &lt;a href=&quot;http://www.nbcnews.com/id/9697336/ns/technology_and_science-tech_and_gadgets/#.UuLMW40o5hE&quot;&gt;first country in the world&lt;/a&gt; to allow online voting nationwide in 2005, Estonia has used the system for both parliamentary and European Parliament elections. During parliamentary elections in 2011, online voting accounted for &lt;a href=&quot;http://estonia.eu/about-estonia/economy-a-it/e-voting.html&quot;&gt;24 percent&lt;/a&gt; of all votes. (Citizens voted from 105 countries in total; I submitted my vote from California.)&lt;/p&gt;

&lt;p&gt;To accelerate innovation, the state tendered building and securing the digital signature-certificate systems to private parties, namely a consortium led by local banks and telecoms. And that's not where the public-private partnerships end: Public and private players can access the same data-exchange system (dubbed &lt;a href=&quot;http://e-estonia.com/components/x-road&quot; target=&quot;_blank&quot;&gt;X-Road&lt;/a&gt;), enabling truly integrated e-services.&lt;/p&gt;

&lt;aside class=&quot;pullquote instapaper_ignore&quot;&gt;Without question, it is always the Estonian citizen who owns his or her data and retains the right to control access to that data.&lt;/aside&gt;&lt;p&gt;A prime example is the income-tax declarations Estonians “fill” out. Quote marks are appropriate here, because when an average Estonian opens the submission form once a year, it usually looks more like a review wizard: “next -&amp;gt; next -&amp;gt; next -&amp;gt; submit.” This is because data has been moving &lt;em&gt;throughout&lt;/em&gt; the year. When employers report employment taxes every month, their data entries are linked to people’s tax records too. Charitable donations reported by non-profits are recorded as deductions for the giver in the same fashion. Tax deductions on mortgages are registered from data interchange with commercial banks. And so forth. Not only is the income-tax rate in the country a flat 21 percent, but Estonians get tax overpayments put back on their bank accounts (digitally transferred, of course) within two days of submitting their forms.&lt;/p&gt;

&lt;p&gt;This liquid movement of data between systems relies on a fundamental principle to protect people’s privacy: Without question, it is always the citizen who owns his or her data and retains the right to control access to that data. For example, in the case of fully digital &lt;a href=&quot;http://e-estonia.com/components/electronic-health-record&quot; target=&quot;_blank&quot;&gt;health records&lt;/a&gt; and prescriptions, people can granularly assign access rights to the general practitioners and specialized doctors of their choosing. And in scenarios where they can’t legally block the state from seeing their information, as with Estonian e-policemen using real-time terminals, they at least get a record of who accessed their data and when. If an honest citizen learns that an official has been snooping on them without a valid reason, the person can file an inquiry and get the official fired.&lt;/p&gt;

&lt;p&gt;Moving everything online does generate security risks on not just a personal level, but also a systematic and national level. Estonia, for instance, was the target of &lt;a href=&quot;http://en.wikipedia.org/wiki/2007_cyberattacks_on_Estonia&quot; target=&quot;_blank&quot;&gt;The Cyberwar of 2007&lt;/a&gt;, when well-coordinated botnet attacks following some political street riots targeted government, media, and financial sites and effectively cut the country off from Internet&lt;strong&gt; &lt;/strong&gt;connections with the rest of the world for several hours. Since then, however, Estonia has become the home of &lt;a href=&quot;https://www.ccdcoe.org/&quot;&gt;NATO Cooperative Cyber Defence Centre of Excellence&lt;/a&gt; and Estonian President &lt;a href=&quot;http://president.ee/en/index.html&quot;&gt;Toomas Hendrik Ilves&lt;/a&gt; has become one of the most vocal cybersecurity advocates on the world stage.&lt;/p&gt;

&lt;p&gt;There is also a flip-side to the fully digitized nature of the Republic of Estonia: having the bureaucratic machine of a country humming in the cloud &lt;em&gt;increases&lt;/em&gt; the economic cost of a potential physical assault on the state. Rather than ceasing to operating in the event of an invasion, the government could boot up a backup replica of the digital state and host it in some other friendly European territory. Government officials would be quickly re-elected, important decisions made, documents issued, business and property records maintained, births and deaths registered, and even taxes filed by those citizens who still had access to the Internet.&lt;/p&gt;

&lt;aside class=&quot;pullquote instapaper_ignore&quot;&gt;Estonia is a start-up country—not just by life stage, but by mindset.&lt;/aside&gt;&lt;p&gt;The Estonian story is certainly special. The country achieved re-independence after 50 unfortunate years of Soviet occupation in 1991, having missed much of the technological progress made by the Western world in the 1960s, ’70s, and ’80s. -'80s, including checkbooks and mainframe computers. Nevertheless, the country jumped right on the mid-’90s bandwagon of TCP/IP-enabled web apps. During this social reset, Estonians also decided to throw their former communist leaders overboard and elect new leadership, often ministers in their late-20s capable of disruptive thinking.&lt;/p&gt;

&lt;p&gt;But then again, all this was 20 years ago. Estonia has by many macroeconomic and political standards become a “boring European state,” stable and predictable, if still racing to close the gap with Old Europe from its time behind the Iron Curtain. Still, Estonia is a start-up country—not just by life stage, but by mindset.&lt;/p&gt;

&lt;p&gt;And this is what United States, along with many other countries struggling to &lt;em&gt;get&lt;/em&gt; the Internet, could learn from Estonia: the mindset. The willingness to get the key infrastructure right and continuously re-invent it. Before you build a health-insurance site, you need to look at what key components must exist for such a service to function optimally: signatures, transactions, legal frameworks, and the like.&lt;/p&gt;

&lt;p&gt;Ultimately, the states that create these kinds of environments will be best positioned to attract the world’s increasingly mobile citizens. &lt;/p&gt;
        
            &lt;/div&gt;


</description>
<title>
An Estonian shares his country's strategy for navigating the digital world
</title>
</item>
</channel>
</rss>
