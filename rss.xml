<?xml version='1.0' encoding='UTF-8'?>
<rss version='2.0'>
<channel>
<generator>
clj-rss
</generator>
<link>
https://news.ycombinator.com
</link>
<title>
myread
</title>
<description>
myread
</description>
<item>
<author>
Philip Guo
</author>
<link>
http://www.slate.com/articles/technology/technology/2014/01/programmer_privilege_as_an_asian_male_computer_science_major_everyone_gave.html
</link>
<description>
&lt;div&gt;&lt;div class=&quot;body parsys&quot;&gt;



                    &lt;a name=&quot;pagebreak_anchor_1&quot;&gt;&lt;/a&gt;
                    
                    
                     
                    &lt;figure class=&quot;parbase image slate_image section&quot;&gt;




&lt;figure class=&quot;image inline &quot;&gt;

&lt;img title=&quot;140115_TECH_TechPrivilege1&quot; alt=&quot;140115_TECH_TechPrivilege1&quot; src=&quot;http://www.slate.com/content/dam/slate/articles/technology/technology/2014/01/140115_TECH_TechPrivilege1.jpg.CROP.promo-mediumlarge.jpg&quot;&gt;



  &lt;p class=&quot;credit&quot;&gt;Photo courtesy Philip Guo&lt;/p&gt;
&lt;/figure&gt;


&lt;/figure&gt;

                    
                     
                    &lt;div class=&quot;entry-content-asset&quot;&gt;

&lt;p&gt;&lt;span class=&quot;drop-capped&quot;&gt;I&lt;/span&gt; started programming when I was 5, first with Logo and then BASIC. The picture above is me, age 9 (with horrible posture). By the time this photo was taken, I had already written several BASIC games that I distributed as shareware on our local BBS. I was fast growing bored, so my parents (both software engineers) gave me the original &lt;a href=&quot;http://www.amazon.com/dp/0201100886/?tag=slatmaga-20&quot; class=&quot;entry-content-asset&quot;&gt;dragon compiler textbook&lt;/a&gt; from their grad school days. That's when I started learning C and writing my own simple interpreters and compilers. My early interpreters were for BASIC, but by the time I entered high school I had already created a &lt;a href=&quot;http://en.wikipedia.org/wiki/Self-hosting&quot; class=&quot;entry-content-asset&quot;&gt;self-hosting compiler&lt;/a&gt; for a nontrivial subset of C. Throughout most of high school, I spent weekends coding in x86 assembly, obsessed with hand-tuning code for the newly released &lt;a href=&quot;http://en.wikipedia.org/wiki/List_of_Intel_Pentium_II_microprocessors&quot; class=&quot;entry-content-asset&quot;&gt;Pentium II chips&lt;/a&gt;. When I started my freshman year at MIT as a computer science major, I already had over 10 years of programming experience. So I felt right at home there.&lt;/p&gt;


&lt;/div&gt;

                    
                     
                    

                    
                     
                    &lt;div class=&quot;entry-content-asset&quot;&gt;

&lt;p&gt;OK, all of the above was a lie. With one exception: That is me in the photo. When it was taken, I didn't even know how to touch-type. My parents were just like, &amp;#x201C;Quick, pose in front of our new computer!&amp;#x201D; (Look closely. My fingers aren't even in the right position.) My parents were both humanities majors, and there wasn't a single programming book in my house. In sixth grade I tried teaching myself BASIC for a few weeks, but quit because it was too hard. The only real exposure I had to programming prior to college was taking AP computer science in 11&lt;sup&gt;th&lt;/sup&gt; grade, taught by a math teacher who had learned the material &lt;a href=&quot;http://pgbovine.net/ap-computer-science.htm&quot; class=&quot;entry-content-asset&quot;&gt;only a month before class started&lt;/a&gt;. Despite its shortcomings, that class inspired me to major in computer science in college. But when I started freshman year at MIT, I felt a bit anxious because many of my classmates actually &lt;em&gt;did&lt;/em&gt; have over 10 years of childhood programming experience; I had less than one.&lt;/p&gt;


&lt;/div&gt;

                    
                     
                    &lt;div class=&quot;entry-content-asset&quot;&gt;

&lt;p&gt;Even though I didn't grow up in a tech-savvy household and couldn't code my way out of a paper bag, I had one big thing going for me: I &lt;em&gt;looked like&lt;/em&gt; I was good at programming. Here's me during freshman year of college:&lt;/p&gt;


&lt;/div&gt;

                    
                     
                    &lt;figure class=&quot;parbase image slate_image section&quot;&gt;




&lt;figure class=&quot;image inline &quot;&gt;

&lt;img title=&quot;140115_TECH_TechPrivilege2&quot; alt=&quot;140115_TECH_TechPrivilege2&quot; src=&quot;http://www.slate.com/content/dam/slate/articles/technology/technology/2014/01/140115_TECH_TechPrivilege2.jpg.CROP.promovar-mediumlarge.jpg&quot;&gt;



  &lt;p class=&quot;credit&quot;&gt;Photo courtesy Philip Guo&lt;/p&gt;
&lt;/figure&gt;


&lt;/figure&gt;

                        
                    
                    
                     
                    &lt;div class=&quot;entry-content-asset&quot;&gt;

&lt;p&gt;As an Asian male student at MIT, I fit society's image of a young programmer. Thus, throughout college, nobody ever said to me (as they said to some other CS students I knew):&lt;/p&gt;


&lt;/div&gt;

                    
                     
                    &lt;p class=&quot;entry-content-asset&quot;&gt;

&lt;ul&gt;
&lt;li&gt;&amp;#x201C;Well, you only got into MIT because you're an Asian boy.&amp;#x201D;&lt;/li&gt;
&lt;li&gt;(&lt;em&gt;while struggling with a problem set&lt;/em&gt;) &amp;#x201C;Well, not everyone is cut out for computer science; have you considered majoring in bio?&amp;#x201D;&lt;/li&gt;
&lt;li&gt;(&lt;em&gt;after being assigned to a class project team&lt;/em&gt;) &amp;#x201C;How about you just design the graphics while we handle the backend? It'll be easier for everyone that way.&amp;#x201D;&lt;/li&gt;
&lt;li&gt;&amp;#x201C;Are you sure you know how to do this?&amp;#x201D;&lt;/li&gt;
&lt;/ul&gt;


&lt;/p&gt;

                    
                     
                    &lt;div class=&quot;entry-content-asset&quot;&gt;

&lt;p&gt;Although I started off as a complete novice (like everyone once was), I never faced any &lt;a href=&quot;http://en.wikipedia.org/wiki/Microinequity&quot; class=&quot;entry-content-asset&quot;&gt;micro-inequities&lt;/a&gt; that impeded my intellectual growth. Throughout college and grad school, I gradually learned more and more via classes, research, and internships, incrementally taking on harder and harder projects, and getting better and better at programming while falling deeper and deeper in love with it. Instead of doing my &lt;a href=&quot;http://www.newyorker.com/online/blogs/sportingscene/2013/08/psychology-ten-thousand-hour-rule-complexity.html&quot; class=&quot;entry-content-asset&quot;&gt;10 years of deliberate practice&lt;/a&gt; from ages 8 to 18, I did mine from ages 18 to 28. And nobody ever got in the way of my learning&amp;#x2014;not even inadvertently&amp;#x2014;probably because I looked like the sort of person who would be good at such things. (The software engineer Tess Rinearson writes about this dynamic from a different perspective in her essay &amp;#x201C;&lt;a href=&quot;https://medium.com/tales-from-the-front/cc9ed433ec3c&quot; class=&quot;entry-content-asset&quot;&gt;On Technical Entitlement&lt;/a&gt;.&amp;#x201D;)&lt;/p&gt;


&lt;/div&gt;

                    
                     
                    &lt;div class=&quot;entry-content-asset&quot;&gt;

&lt;p&gt;Instead of facing implicit bias or &lt;a href=&quot;http://en.wikipedia.org/wiki/Stereotype_threat&quot; class=&quot;entry-content-asset&quot;&gt;stereotype threat&lt;/a&gt;, I had the privilege of implicit endorsement. For instance, whenever I attended technical meetings, people would assume that I knew what I was doing (regardless of whether I did or not) and treat me accordingly. If I stared at someone in silence and nodded as they were talking, they would assume that I understood, not that I was clueless. Nobody ever talked down to me, and I always got the benefit of the doubt in technical settings.&lt;/p&gt;


&lt;/div&gt;

                    
                     
                    &lt;div class=&quot;entry-content-asset&quot;&gt;

&lt;p&gt;As a result, I was able to fake it till I made it, often landing jobs whose postings required skills I hadn't yet learned but knew that I could pick up on the spot. Most of my interviews for research assistantships and summer internships were quite casual&amp;#x2014;people just gave me the chance to try. And after enough rounds of practice, I actually did start knowing what I was doing. As I gained experience, I was able to land more meaningful programming jobs, which led to a virtuous cycle of further improvement.&lt;/p&gt;


&lt;/div&gt;

                    
                     
                    &lt;div class=&quot;pullquotebox section&quot;&gt;
 

&lt;aside class=&quot;pullquote&quot;&gt;

  &lt;p class=&quot;quote&quot;&gt;For every white or Asian male expert programmer you know, imagine a parallel universe where they were of another ethnicity and/or gender.&lt;/p&gt;
  
  
&lt;/aside&gt;
&lt;/div&gt;

                    
                     
                    &lt;div class=&quot;entry-content-asset&quot;&gt;

&lt;p&gt;This kind of privilege that I and other people who looked like me possessed was silent, manifested not in what people said to us, but rather in what they didn't say. We had the &lt;a href=&quot;http://pgbovine.net/implicit-privilege.htm&quot; class=&quot;entry-content-asset&quot;&gt;privilege&lt;/a&gt; to spend enormous amounts of time developing technical expertise without anyone's interference or implicit discouragement. Sure, we worked really hard, but our efforts directly translated into skill improvements without much loss due to interpersonal friction. Because we looked the part.&lt;/p&gt;


&lt;/div&gt;

                    
                     
                    &lt;div class=&quot;entry-content-asset&quot;&gt;

&lt;p&gt;In contrast, ask any computer science major who isn't from a majority demographic (i.e., white or Asian male), and I guarantee that he or she has encountered discouraging comments such as &amp;#x201C;You know, not everyone is cut out for computer science.&amp;#x201D; They probably still remember the words and actions that have hurt the most, even though &lt;a href=&quot;https://medium.com/tales-from-the-front/b5931b3cf837&quot; class=&quot;entry-content-asset&quot;&gt;those making the remarks&lt;/a&gt; often aren't trying to harm.&lt;/p&gt;


&lt;/div&gt;

                    
                     
                    &lt;div class=&quot;entry-content-asset&quot;&gt;

&lt;p&gt;For example, one of my good friends took the &lt;a href=&quot;http://ocw.mit.edu/courses/civil-and-environmental-engineering/1-00-introduction-to-computers-and-engineering-problem-solving-spring-2012/&quot; class=&quot;entry-content-asset&quot;&gt;Intro to Java&lt;/a&gt; course during freshman year and enjoyed it. She wanted to get better at Java GUI programming, so she got a summer research assistantship at the MIT Media Lab. However, instead of letting her build the GUI (like the job ad described), the supervisor assigned her the mind-numbing task of hand-transcribing audio clips all summer long. He assigned a new male student to build the GUI application. And it wasn't like that student was a programming prodigy&amp;#x2014;he was also a freshman with the same amount of (limited) experience that she had. The other student spent the summer getting better at GUI programming while she just grinded away mindlessly transcribing audio. As a result, she grew resentful and shied away from learning more CS.&lt;/p&gt;


&lt;/div&gt;

                    
                     
                    

            

            





&lt;/div&gt;

        
        
        
        
    &lt;/div&gt;&lt;hr class=&quot;rdb-page-break&quot; /&gt;&lt;div&gt;&lt;div class=&quot;body parsys&quot;&gt;



            
            
            
        
                    &lt;a name=&quot;pagebreak_anchor_2&quot;&gt;&lt;/a&gt;
                    
                    
                     
                    &lt;div class=&quot;entry-content-asset&quot;&gt;

&lt;p&gt;Thinking about this story always angers me. Here was someone with a natural interest who took the initiative to learn more and was denied the opportunity to do so. I have no doubt that my friend could have gotten good at programming&amp;#x2014;and really enjoyed it&amp;#x2014;if she had the same opportunities as I did. (It didn&amp;#x2019;t help that when she was accepted to MIT, her aunt&amp;#x2014;whose son had been rejected&amp;#x2014;congratulated her by saying, &amp;#x201C;Well, you only got into MIT because you're a girl.&amp;#x201D;)&lt;/p&gt;


&lt;/div&gt;

                    
                     
                    &lt;div class=&quot;entry-content-asset&quot;&gt;

&lt;p&gt;Over a decade later, she now does some programming at her research job, but wishes that she had learned more back in college. However, she had such a negative association with everything CS-related that it was hard to motivate herself to do so for fear of being shot down again.&lt;/p&gt;


&lt;/div&gt;

                    
                     
                    &lt;div class=&quot;entry-content-asset&quot;&gt;

&lt;p&gt;One trite retort is &amp;#x201C;Well, your friend should've been tougher and not given up so easily. If she wanted it badly enough, she should've tried again, even knowing that she might face resistance.&amp;#x201D; These sorts of remarks aggravate me. Writing code for a living isn't like being a Navy SEAL &lt;a href=&quot;http://abcnews.go.com/International/story?id=7325633&quot; class=&quot;entry-content-asset&quot;&gt;sharpshooter&lt;/a&gt;. Programming is seriously &lt;em&gt;not&lt;/em&gt; that demanding, so you shouldn't need to be a tough-as-nails superhero to enter this profession.&lt;/p&gt;


&lt;/div&gt;

                        
                    
                    
                     
                    &lt;div class=&quot;entry-content-asset&quot;&gt;

&lt;p&gt;Just look at this photo of me from a software engineering summer internship:&lt;/p&gt;


&lt;/div&gt;

                    
                     
                    &lt;figure class=&quot;parbase image slate_image section&quot;&gt;




&lt;figure class=&quot;image inline &quot;&gt;

&lt;img title=&quot;140115_TECH_TechPrivilege3&quot; alt=&quot;140115_TECH_TechPrivilege3&quot; src=&quot;http://www.slate.com/content/dam/slate/articles/technology/technology/2014/01/140115_TECH_TechPrivilege3.jpg.CROP.promo-mediumlarge.jpg&quot;&gt;



  &lt;p class=&quot;credit&quot;&gt;Photo courtesy Philip Guo&lt;/p&gt;
&lt;/figure&gt;


&lt;/figure&gt;

                    
                     
                    &lt;div class=&quot;entry-content-asset&quot;&gt;

&lt;p&gt;Even though I was hacking on a hardware simulator in C++, which sounds mildly hard-core, I was actually pretty squishy, chillin' in my cubicle and often taking extended lunch breaks. All of the guys around me (yes, the programmers were all men, with the exception of one older woman who didn't hang out with us) were also fairly squishy. These guys made a fine living and were good at what they did; but they weren't superheroes. The most hardship that one of the guys faced all summer was staying up late playing &lt;em&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Doom_3&quot; class=&quot;entry-content-asset&quot;&gt;Doom 3&lt;/a&gt;&lt;/em&gt; and then rolling into the office dead-tired the next morning. Anyone with enough practice and motivation could have done our jobs, and most other programming and CS-related jobs as well. Seriously, companies aren't looking to hire the next Steve Wozniak&amp;#x2014;they just want to ship code that works.&lt;/p&gt;


&lt;/div&gt;

                    
                     
                    &lt;div class=&quot;entry-content-asset&quot;&gt;

&lt;p&gt;It frustrates me that people not in the majority demographic often need to be tough as nails to succeed in this field, constantly bearing the lasting effects of thousands of micro-inequities. &lt;em&gt;Psychology Today&lt;/em&gt; &lt;a href=&quot;http://www.psychologytoday.com/blog/the-superhuman-mind/201304/micro-inequities-40-years-later&quot; class=&quot;entry-content-asset&quot;&gt;notes&lt;/a&gt; that according to one researcher, Mary Rowe:&lt;/p&gt;


&lt;/div&gt;

                    
                     
                    &lt;div class=&quot;entry-content-asset&quot;&gt;

&lt;blockquote&gt;[M]icro-inequities often had serious cumulative, harmful effects, resulting in hostile work environments and continued minority discrimination in public and private workplaces and organizations. What makes micro-inequities particularly problematic is that they consist in micro-messages that are hard to recognize for victims, bystanders and perpetrators alike. When victims of micro-inequities do recognize the micro-messages &amp;#x2026; it is exceedingly hard to explain to others why these small behaviors can be a huge problem.&lt;/blockquote&gt;


&lt;/div&gt;

                    
                     
                    &lt;div class=&quot;entry-content-asset&quot;&gt;

&lt;p&gt;In contrast, people who look like me can just kinda do programming for work if we want, or not do it, or switch into it later, or out of it again, or work quietly, or nerd-rant on how &lt;a href=&quot;https://www.ruby-lang.org/en/&quot; class=&quot;entry-content-asset&quot;&gt;Ruby&lt;/a&gt; sucks or rocks or whatever, or name-drop &lt;a href=&quot;http://en.wikipedia.org/wiki/Monad_(functional_programming)&quot; class=&quot;entry-content-asset&quot;&gt;monads&lt;/a&gt;. And nobody will make remarks about our appearance, about whether we're truly dedicated hackers, or how our behavior might reflect badly on &amp;#x201C;our kind&amp;#x201D; of people. &lt;em&gt;That's&lt;/em&gt; silent technical privilege.&lt;/p&gt;


&lt;/div&gt;

                    
                     
                    &lt;div class=&quot;entry-content-asset&quot;&gt;

&lt;p&gt;Ideally, we want to spur interest in young people from underrepresented demographics who might never otherwise think to pursue CS or STEM studies. There are great people and organizations working toward this goal. Although I think that increased and broader participation is critical, a more immediate concern is reducing attrition of those already in the field. For instance, according to a 2012 &lt;a href=&quot;http://www.whitehouse.gov/sites/default/files/microsites/ostp/pcast-engage-to-excel-final_2-25-12.pdf&quot; class=&quot;entry-content-asset&quot;&gt;STEM education report to the president&lt;/a&gt;:&lt;/p&gt;


&lt;/div&gt;

                    
                     
                    &lt;div class=&quot;entry-content-asset&quot;&gt;

&lt;blockquote&gt;[E]conomic forecasts point to a need for producing, over the next decade, approximately 1 million more college graduates in STEM fields than expected under current assumptions. Fewer than 40% of students who enter college intending to major in a STEM field complete a STEM degree. Merely increasing the retention of STEM majors from 40% to 50% would generate three quarters of the targeted 1 million additional STEM degrees over the next decade.&lt;/blockquote&gt;


&lt;/div&gt;

                    
                     
                    &lt;div class=&quot;entry-content-asset&quot;&gt;

&lt;p&gt;That's why I plan to start by taking steps to encourage and retain those who already want to learn. So here's a thought experiment: For every white or Asian male expert programmer you know, imagine a parallel universe where they were of another ethnicity and/or gender but had the exact same initial interest and aptitude levels. Would they still have been willing to devote the 10,000-plus hours of deliberate practice to achieve mastery in the face of dozens or hundreds of instances of implicit discouragement they would inevitably encounter over the years? Sure, some super-resilient outliers would, but many wouldn't. Many of us would quit, even though we had the potential and interest to thrive in this field.&lt;/p&gt;


&lt;/div&gt;

                    
                     
                    &lt;div class=&quot;entry-content-asset&quot;&gt;

&lt;p&gt;I hope to live in a future where people who already have the interest to pursue CS or programming don't self-select themselves out of the field. I want those people to experience what I was privileged enough to have gotten in college and beyond: unimpeded opportunities to develop expertise in something that they find beautiful, practical, and fulfilling.&lt;/p&gt;


&lt;/div&gt;

                    
                     
                    &lt;div class=&quot;entry-content-asset&quot;&gt;

&lt;p&gt;&lt;em&gt;This piece is adapted from &lt;/em&gt;&lt;a href=&quot;http://pgbovine.net/tech-privilege.htm&quot; class=&quot;entry-content-asset&quot;&gt;&lt;em&gt;Guo&amp;#x2019;s blog&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;


&lt;/div&gt;

            

            





&lt;/div&gt;

               
    &lt;/div&gt;
</description>
<title>
Programmer privilege: As an Asian male computer science major, everyone gave me the benefit of the doubt.
</title>
</item>
<item>
<link>
http://www.sightsmap.com/
</link>
<description>
&lt;div&gt;&lt;div class=&quot;modal-body&quot;&gt;

The heatmap shows the places people like, based on the number of 
&lt;a href=&quot;http://www.panoramio.com&quot; target=&quot;wiki&quot;&gt;panoramio&lt;/a&gt;
photos at each place in the world. The dark areas have few photos, the red areas have more and the 
yellow areas have a large number of photos geotagged.
&lt;p&gt;
The hottest places have markers linking photos, streetview, wikipedia, wikivoyage, foursquare and google plus articles
about the site. The place names are selected by the wikipedia readership numbers and foursquare checkins. Area populations are based on the geonames database.
&lt;/p&gt;&lt;p&gt;
Street level heatmaps are available for top 15000 places in the world, sorted by the number of photos in an area
of a size of a few square kilometers around the place center. The popularity ranking of places in high-res area maps
is computed by combining place hotness with popularity rankings from wikipedia, foursquare and 
real-time google places selection.
&lt;/p&gt;&lt;p&gt;
It is possible to use a link ending with any place name, like this: 
&lt;a href=&quot;http://www.sightsmap.com/New_York&quot;&gt;http://www.sightsmap.com/New_York&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Zoom in, enjoy the photos, search special places, plan a trip, build and share your own map of any area.
&lt;/p&gt;&lt;p&gt;
Your ideas, suggestions and questions are welcome: contact tanel.tammet at gmail.com
&lt;/p&gt;&lt;p&gt;
All rights reserved.
&lt;/p&gt;&lt;/div&gt;    

  
  

&lt;/div&gt;
</description>
<title>
World’s most photographed places
</title>
</item>
<item>
<link>
http://blog.tkdocs.com/2014/01/happy-25th-tcl.html
</link>
<description>
&lt;div&gt;&lt;div class=&quot;entry-content&quot;&gt;
		&lt;div class=&quot;entry-body&quot;&gt;
			&lt;blockquote&gt;&lt;em&gt;Note: check out discussion/reaction via &lt;a href=&quot;http://www.reddit.com/r/programming/comments/1vbd25/happy_25th_tcl/&quot;&gt;Reddit&lt;/a&gt; and &lt;a href=&quot;https://news.ycombinator.com/item?id=7068656&quot;&gt;Hacker News&lt;/a&gt; &amp;#x2014; Mark&lt;/em&gt;&lt;/blockquote&gt;

&lt;p&gt;It struck me that 2014 marks 25 years since the programming language Tcl (Tool Command Language) escaped from John Ousterhout's lab at UC Berkeley and was unleashed on the world. I think that's a milestone worth recognizing, and indeed celebrating.&lt;/p&gt;

&lt;p&gt;For anyone under 40 years old, you can think of Tcl like Ruby or Python, if those languages didn't have objects, if absolutely everything in them was treated as a string, and if every syntax rule added to the language resulted in its creator being tortured for one year. &lt;/p&gt;

&lt;p&gt;Assignments? Math? We don't need no special syntax for those! What in any other language would be written as &quot;&lt;tt&gt;a=b+c&lt;/tt&gt;&quot; in Tcl would be:&lt;br&gt;
&lt;/p&gt;&lt;blockquote&gt;&lt;tt&gt;set a [expr {$b+$c}]&lt;/tt&gt;&lt;/blockquote&gt;	&lt;br&gt;
What's not to love? Sure, it's four times as long to do something really simple, but just admire the conceptual purity...!

&lt;p&gt;In other words, Tcl as a language is what would happen if Lisp and csh met at a party, got way too drunk, hooked up, got pregnant, and kept drinking throughout the pregnancy.&lt;/p&gt;

&lt;p&gt;And this is coming from a fan of the language.&lt;/p&gt;

&lt;h3&gt;Why was Tcl important?&lt;/h3&gt;

&lt;p&gt;John created Tcl as a scripting language to be embedded in other applications, so that each didn't create its own shitty configuration language from scratch. He also created a desktop graphical user interface toolkit for it, called Tk. Surprisingly, especially for John, people took his little add-on language and began creating substantial programs with it... no matter how much he begged them to stop. And because it was incredibly easy to hook up to C code, soon just about everything that had a C API soon had a Tcl API. Or ten.&lt;/p&gt;

&lt;p&gt;For most people though, myself included, Tk was the real selling point. This was a time when most of the innovative programmers were working on Unix-based systems running X11. Back then, doing a &quot;Hello World&quot; program in X11 was hundreds of lines of code, but Tcl and Tk reduced it to just one:&lt;br&gt;
&lt;/p&gt;&lt;blockquote&gt;&lt;tt&gt;pack [button .b -text &quot;Hello World&quot; -command exit]&lt;/tt&gt;&lt;/blockquote&gt;	 &lt;br&gt;
Yes, only about twice as long as our simple addition/assignment statement from before. 

&lt;p&gt;Tcl and Tk took off with the cool kids in the early-mid 90's, peaked around 2000, and interest gradually eroded since then. It had its share of successes and controversies (if you want some historical entertainment, Google &quot;Why you should not use Tcl&quot;), organizational transitions and missed opportunities (did you know that Tcl almost became Javascript?). You can find more at the &lt;a href=&quot;http://www.tcl.tk/about/history.html&quot;&gt;Tcl history page&lt;/a&gt; at &lt;a href=&quot;http://www.tcl.tk&quot;&gt;www.tcl.tk&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;Lasting influence&lt;/h3&gt;

&lt;p&gt;Despite the ridiculous syntax, Tcl did a ton of things right, well ahead of its time. The internal code quality has always been top-notch, and backed up by a rich automated testing suite. The complex implementation details of two language development, scripting, language extensions, and how to manage backwards compatibility and deployment in that kind of dynamic environment were greatly refined by Tcl over the years. Very early versions aside, Tcl was also wicked fast, I18N-savvy, and cross-platform.&lt;/p&gt;

&lt;p&gt;While there's not a lot of new projects started with Tcl anymore, there's still a whole lot of legacy code out there, both scripts and applications written in Tcl, and all kinds of programs that have Tcl embedded inside them. &lt;/p&gt;

&lt;p&gt;And of course, lots of other languages borrowed ideas and code from Tcl. Most notable is Tk, which became the defacto standard desktop GUI for just about every other scripting language, including those still in common use today such as Python (tkinter), Ruby (RubyTk), and Perl (Tkx). &lt;/p&gt;

&lt;p&gt;Tcl was after all designed as a language to be embedded in other programs, so it's only slightly perverse to think that even other programming languages embed a Tcl interpreter. &lt;/p&gt;

&lt;p&gt;And while desktop user interfaces have largely been supplanted by the web or mobile platforms, you'd be surprised how many people are still plugging away with Tk (whether from Tcl, Python, Ruby or some other language). &lt;/p&gt;

&lt;p&gt;It's just one data point, but this site (&lt;a href=&quot;http://www.tkdocs.com&quot;&gt;TkDocs.com&lt;/a&gt;), which provides relatively up-to-date cross-language documentation on how to use the more modern features in Tk, gets over 10,000 unique visitors each month, and a Python-specific ebook version of the material (Modern Tkinter) still sells 50+ copies a month.&lt;/p&gt;

&lt;h3&gt;Standing on the Shoulders of Giants&lt;/h3&gt;

&lt;p&gt;A skit I wrote a few years back tackles the question of &lt;a href=&quot;http://www.markroseman.com/tcl/dyingout.html&quot;&gt;Is Tcl/Tk Dying Out?&lt;/a&gt;. But old programming languages never really die, they just tend to stagnate over time.&lt;/p&gt;

&lt;p&gt;In the tech industry we're often too quick to throw things out and ignore lessons from the past. It's nice to know that some of the great ideas, principles, and yes, even code from Tcl continue to be built on even today. And there's still a core group of people slowly but surely working on the language itself.&lt;/p&gt;

&lt;p&gt;So, 25 years after the beast was released, I just wanted to say thanks to the many thousands of people who contributed their time and energy over the years.&lt;/p&gt;

&lt;p&gt;Cheers!&lt;br&gt;
&lt;/p&gt;
		&lt;/div&gt;
		
		
	&lt;/div&gt;
	
&lt;/div&gt;
</description>
<title>
Happy 25th Tcl!
</title>
</item>
<item>
<link>
item?id=7069013
</link>
<description>

</description>
<title>
Tell HN: Server Status
</title>
</item>
<item>
<link>
http://video.pbs.org/video/2365155890/
</link>
<description>
&lt;div&gt;&lt;div id=&quot;video_2365155890&quot; class=&quot;pageContainer&quot;&gt;&lt;div id=&quot;page&quot; class=&quot;page&quot;&gt;&lt;div id=&quot;mainContainer&quot;&gt;&lt;div id=&quot;content&quot;&gt;&lt;section id=&quot;videoPagePlayer&quot; class=&quot;videoPage&quot;&gt;&lt;section&gt;&lt;div class=&quot;endHDNotification&quot;&gt;&lt;div class=&quot;innerPanel&quot;&gt;&lt;p&gt;Want to watch HD PBS Video? Sign in with one of our supported services and unlock high definition video!&lt;/p&gt;&lt;p&gt;By signing in, you are authorizing PBS to share your email address with your local PBS station to send you periodic communications about station events, services and support. Any other uses of your information by PBS are governed by PBS&amp;#x2019;s Privacy Policy.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&quot;ccSettings&quot;&gt;&lt;div id=&quot;ccSettingsContent&quot;&gt;&lt;div class=&quot;message&quot;&gt;&lt;h3&gt;Preview&lt;/h3&gt;&lt;p id=&quot;ccPreview&quot; class=&quot;&quot;&gt;&lt;span id=&quot;previewWindowColor&quot;&gt;&lt;span id=&quot;previewText&quot;&gt;
                    Captions look like this&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;div id=&quot;ccConf&quot;&gt;&lt;p class=&quot;column&quot;&gt;&lt;h3&gt;Captions size&lt;/h3&gt;&lt;/p&gt;&lt;p class=&quot;column&quot;&gt;&lt;h3&gt;Captions color&lt;/h3&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;&lt;/section&gt;&lt;section id=&quot;pageDescription&quot; class=&quot;videoPage&quot;&gt;&lt;h3 class=&quot;program&quot;&gt;&lt;a href=&quot;http://video.pbs.org/program/frontline/&quot;&gt;FRONTLINE&lt;/a&gt;&lt;/h3&gt;&lt;/section&gt;&lt;section id=&quot;aditionalContent&quot;&gt;&lt;/section&gt;&lt;div class=&quot;kidsShop&quot;&gt;&lt;div class=&quot;item&quot;&gt;&lt;a href=&quot;http://pbskids.org/mobile/pbs-kids-video.html&quot; target=&quot;_blank&quot;&gt;&lt;img class=&quot;image&quot; src=&quot;http://d27s92d8z1yatv.cloudfront.net/img/dummy_kids.png&quot;&gt;&lt;/a&gt;&lt;h3 class=&quot;title&quot;&gt;PBS KIDS&lt;/h3&gt;&lt;p class=&quot;description&quot;&gt;
                                    Watch videos from your favorite PBS KIDS shows with the &lt;a href=&quot;http://pbskids.org/mobile/pbs-kids-video.html&quot; target=&quot;_blank&quot;&gt;PBS KIDS Video app&lt;/a&gt; for your tablet or phone.
                                &lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;item&quot;&gt;&lt;a id=&quot;footerDonateStationLogo&quot; href=&quot;http://www.pbs.org/cgi-registry/sitemembershiplink.cgir&quot; target=&quot;_blank&quot;&gt;&lt;img class=&quot;image&quot; src=&quot;http://image.pbs.org/station-images/station-logos/donate-button/PBS.gif.resize.106x104.gif&quot;&gt;&lt;/a&gt;&lt;h3 class=&quot;title&quot;&gt;Donate&lt;/h3&gt;&lt;p class=&quot;description&quot;&gt;
                                    
                                         helps all of us explore new worlds and ideas.
                                    
                                    &lt;a id=&quot;footerDonateGiveNowText&quot; href=&quot;http://www.pbs.org/cgi-registry/sitemembershiplink.cgir&quot; target=&quot;_blank&quot;&gt;Give Now&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
</description>
<title>
Secret State of North Korea [video]
</title>
</item>
</channel>
</rss>
